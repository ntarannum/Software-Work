// slave_mm_interconnect_0.v

// This file was auto-generated from altera_merlin_interconnect_wrapper_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 13.1 162 at 2018.11.27.10:02:21

`timescale 1 ps / 1 ps
module slave_mm_interconnect_0 (
		input  wire        clk_0_clk_clk,                               //                             clk_0_clk.clk
		input  wire        ET_Core_reset_n_reset_bridge_in_reset_reset, // ET_Core_reset_n_reset_bridge_in_reset.reset
		input  wire [15:0] ET_Core_data_master_address,                 //                   ET_Core_data_master.address
		output wire        ET_Core_data_master_waitrequest,             //                                      .waitrequest
		input  wire [3:0]  ET_Core_data_master_byteenable,              //                                      .byteenable
		input  wire        ET_Core_data_master_read,                    //                                      .read
		output wire [31:0] ET_Core_data_master_readdata,                //                                      .readdata
		input  wire        ET_Core_data_master_write,                   //                                      .write
		input  wire [31:0] ET_Core_data_master_writedata,               //                                      .writedata
		input  wire        ET_Core_data_master_debugaccess,             //                                      .debugaccess
		input  wire [15:0] ET_Core_instruction_master_address,          //            ET_Core_instruction_master.address
		output wire        ET_Core_instruction_master_waitrequest,      //                                      .waitrequest
		input  wire        ET_Core_instruction_master_read,             //                                      .read
		output wire [31:0] ET_Core_instruction_master_readdata,         //                                      .readdata
		input  wire [15:0] TT_Core_data_master_address,                 //                   TT_Core_data_master.address
		output wire        TT_Core_data_master_waitrequest,             //                                      .waitrequest
		input  wire [3:0]  TT_Core_data_master_byteenable,              //                                      .byteenable
		input  wire        TT_Core_data_master_read,                    //                                      .read
		output wire [31:0] TT_Core_data_master_readdata,                //                                      .readdata
		input  wire        TT_Core_data_master_write,                   //                                      .write
		input  wire [31:0] TT_Core_data_master_writedata,               //                                      .writedata
		input  wire        TT_Core_data_master_debugaccess,             //                                      .debugaccess
		input  wire [15:0] TT_Core_instruction_master_address,          //            TT_Core_instruction_master.address
		output wire        TT_Core_instruction_master_waitrequest,      //                                      .waitrequest
		input  wire        TT_Core_instruction_master_read,             //                                      .read
		output wire [31:0] TT_Core_instruction_master_readdata,         //                                      .readdata
		output wire [8:0]  ET_Core_jtag_debug_module_address,           //             ET_Core_jtag_debug_module.address
		output wire        ET_Core_jtag_debug_module_write,             //                                      .write
		output wire        ET_Core_jtag_debug_module_read,              //                                      .read
		input  wire [31:0] ET_Core_jtag_debug_module_readdata,          //                                      .readdata
		output wire [31:0] ET_Core_jtag_debug_module_writedata,         //                                      .writedata
		output wire [3:0]  ET_Core_jtag_debug_module_byteenable,        //                                      .byteenable
		input  wire        ET_Core_jtag_debug_module_waitrequest,       //                                      .waitrequest
		output wire        ET_Core_jtag_debug_module_debugaccess,       //                                      .debugaccess
		output wire [11:0] ET_Core_Memory_s1_address,                   //                     ET_Core_Memory_s1.address
		output wire        ET_Core_Memory_s1_write,                     //                                      .write
		input  wire [31:0] ET_Core_Memory_s1_readdata,                  //                                      .readdata
		output wire [31:0] ET_Core_Memory_s1_writedata,                 //                                      .writedata
		output wire [3:0]  ET_Core_Memory_s1_byteenable,                //                                      .byteenable
		output wire        ET_Core_Memory_s1_chipselect,                //                                      .chipselect
		output wire        ET_Core_Memory_s1_clken,                     //                                      .clken
		output wire [1:0]  et_leds1_s1_address,                         //                           et_leds1_s1.address
		output wire        et_leds1_s1_write,                           //                                      .write
		input  wire [31:0] et_leds1_s1_readdata,                        //                                      .readdata
		output wire [31:0] et_leds1_s1_writedata,                       //                                      .writedata
		output wire        et_leds1_s1_chipselect,                      //                                      .chipselect
		output wire [1:0]  et_leds2_s1_address,                         //                           et_leds2_s1.address
		output wire        et_leds2_s1_write,                           //                                      .write
		input  wire [31:0] et_leds2_s1_readdata,                        //                                      .readdata
		output wire [31:0] et_leds2_s1_writedata,                       //                                      .writedata
		output wire        et_leds2_s1_chipselect,                      //                                      .chipselect
		output wire [1:0]  et_pb_1_s1_address,                          //                            et_pb_1_s1.address
		input  wire [31:0] et_pb_1_s1_readdata,                         //                                      .readdata
		output wire [1:0]  et_pb_2_s1_address,                          //                            et_pb_2_s1.address
		input  wire [31:0] et_pb_2_s1_readdata,                         //                                      .readdata
		output wire [2:0]  et_spi_0_spi_control_port_address,           //             et_spi_0_spi_control_port.address
		output wire        et_spi_0_spi_control_port_write,             //                                      .write
		output wire        et_spi_0_spi_control_port_read,              //                                      .read
		input  wire [15:0] et_spi_0_spi_control_port_readdata,          //                                      .readdata
		output wire [15:0] et_spi_0_spi_control_port_writedata,         //                                      .writedata
		output wire        et_spi_0_spi_control_port_chipselect,        //                                      .chipselect
		output wire [1:0]  et_spican_int_s1_address,                    //                      et_spican_int_s1.address
		output wire        et_spican_int_s1_write,                      //                                      .write
		input  wire [31:0] et_spican_int_s1_readdata,                   //                                      .readdata
		output wire [31:0] et_spican_int_s1_writedata,                  //                                      .writedata
		output wire        et_spican_int_s1_chipselect,                 //                                      .chipselect
		output wire [0:0]  jtag_uart_0_avalon_jtag_slave_address,       //         jtag_uart_0_avalon_jtag_slave.address
		output wire        jtag_uart_0_avalon_jtag_slave_write,         //                                      .write
		output wire        jtag_uart_0_avalon_jtag_slave_read,          //                                      .read
		input  wire [31:0] jtag_uart_0_avalon_jtag_slave_readdata,      //                                      .readdata
		output wire [31:0] jtag_uart_0_avalon_jtag_slave_writedata,     //                                      .writedata
		input  wire        jtag_uart_0_avalon_jtag_slave_waitrequest,   //                                      .waitrequest
		output wire        jtag_uart_0_avalon_jtag_slave_chipselect,    //                                      .chipselect
		output wire [0:0]  msg_buf_mutex_s1_address,                    //                      msg_buf_mutex_s1.address
		output wire        msg_buf_mutex_s1_write,                      //                                      .write
		output wire        msg_buf_mutex_s1_read,                       //                                      .read
		input  wire [31:0] msg_buf_mutex_s1_readdata,                   //                                      .readdata
		output wire [31:0] msg_buf_mutex_s1_writedata,                  //                                      .writedata
		output wire        msg_buf_mutex_s1_chipselect,                 //                                      .chipselect
		output wire [7:0]  msg_buf_ram_s1_address,                      //                        msg_buf_ram_s1.address
		output wire        msg_buf_ram_s1_write,                        //                                      .write
		input  wire [31:0] msg_buf_ram_s1_readdata,                     //                                      .readdata
		output wire [31:0] msg_buf_ram_s1_writedata,                    //                                      .writedata
		output wire [3:0]  msg_buf_ram_s1_byteenable,                   //                                      .byteenable
		output wire        msg_buf_ram_s1_chipselect,                   //                                      .chipselect
		output wire        msg_buf_ram_s1_clken,                        //                                      .clken
		output wire [1:0]  pio_0_s1_address,                            //                              pio_0_s1.address
		output wire        pio_0_s1_write,                              //                                      .write
		input  wire [31:0] pio_0_s1_readdata,                           //                                      .readdata
		output wire [31:0] pio_0_s1_writedata,                          //                                      .writedata
		output wire        pio_0_s1_chipselect,                         //                                      .chipselect
		output wire [8:0]  TT_Core_jtag_debug_module_address,           //             TT_Core_jtag_debug_module.address
		output wire        TT_Core_jtag_debug_module_write,             //                                      .write
		output wire        TT_Core_jtag_debug_module_read,              //                                      .read
		input  wire [31:0] TT_Core_jtag_debug_module_readdata,          //                                      .readdata
		output wire [31:0] TT_Core_jtag_debug_module_writedata,         //                                      .writedata
		output wire [3:0]  TT_Core_jtag_debug_module_byteenable,        //                                      .byteenable
		input  wire        TT_Core_jtag_debug_module_waitrequest,       //                                      .waitrequest
		output wire        TT_Core_jtag_debug_module_debugaccess,       //                                      .debugaccess
		output wire [11:0] TT_core_memory_s1_address,                   //                     TT_core_memory_s1.address
		output wire        TT_core_memory_s1_write,                     //                                      .write
		input  wire [31:0] TT_core_memory_s1_readdata,                  //                                      .readdata
		output wire [31:0] TT_core_memory_s1_writedata,                 //                                      .writedata
		output wire [3:0]  TT_core_memory_s1_byteenable,                //                                      .byteenable
		output wire        TT_core_memory_s1_chipselect,                //                                      .chipselect
		output wire        TT_core_memory_s1_clken,                     //                                      .clken
		output wire [1:0]  tt_leds_s1_address,                          //                            tt_leds_s1.address
		output wire        tt_leds_s1_write,                            //                                      .write
		input  wire [31:0] tt_leds_s1_readdata,                         //                                      .readdata
		output wire [31:0] tt_leds_s1_writedata,                        //                                      .writedata
		output wire        tt_leds_s1_chipselect,                       //                                      .chipselect
		output wire [1:0]  tt_pb_1_s1_address,                          //                            tt_pb_1_s1.address
		input  wire [31:0] tt_pb_1_s1_readdata,                         //                                      .readdata
		output wire [2:0]  tt_timer_1_s1_address,                       //                         tt_timer_1_s1.address
		output wire        tt_timer_1_s1_write,                         //                                      .write
		input  wire [15:0] tt_timer_1_s1_readdata,                      //                                      .readdata
		output wire [15:0] tt_timer_1_s1_writedata,                     //                                      .writedata
		output wire        tt_timer_1_s1_chipselect                     //                                      .chipselect
	);

	wire         et_core_instruction_master_translator_avalon_universal_master_0_waitrequest;                        // ET_Core_instruction_master_translator_avalon_universal_master_0_agent:av_waitrequest -> ET_Core_instruction_master_translator:uav_waitrequest
	wire   [2:0] et_core_instruction_master_translator_avalon_universal_master_0_burstcount;                         // ET_Core_instruction_master_translator:uav_burstcount -> ET_Core_instruction_master_translator_avalon_universal_master_0_agent:av_burstcount
	wire  [31:0] et_core_instruction_master_translator_avalon_universal_master_0_writedata;                          // ET_Core_instruction_master_translator:uav_writedata -> ET_Core_instruction_master_translator_avalon_universal_master_0_agent:av_writedata
	wire  [15:0] et_core_instruction_master_translator_avalon_universal_master_0_address;                            // ET_Core_instruction_master_translator:uav_address -> ET_Core_instruction_master_translator_avalon_universal_master_0_agent:av_address
	wire         et_core_instruction_master_translator_avalon_universal_master_0_lock;                               // ET_Core_instruction_master_translator:uav_lock -> ET_Core_instruction_master_translator_avalon_universal_master_0_agent:av_lock
	wire         et_core_instruction_master_translator_avalon_universal_master_0_write;                              // ET_Core_instruction_master_translator:uav_write -> ET_Core_instruction_master_translator_avalon_universal_master_0_agent:av_write
	wire         et_core_instruction_master_translator_avalon_universal_master_0_read;                               // ET_Core_instruction_master_translator:uav_read -> ET_Core_instruction_master_translator_avalon_universal_master_0_agent:av_read
	wire  [31:0] et_core_instruction_master_translator_avalon_universal_master_0_readdata;                           // ET_Core_instruction_master_translator_avalon_universal_master_0_agent:av_readdata -> ET_Core_instruction_master_translator:uav_readdata
	wire         et_core_instruction_master_translator_avalon_universal_master_0_debugaccess;                        // ET_Core_instruction_master_translator:uav_debugaccess -> ET_Core_instruction_master_translator_avalon_universal_master_0_agent:av_debugaccess
	wire   [3:0] et_core_instruction_master_translator_avalon_universal_master_0_byteenable;                         // ET_Core_instruction_master_translator:uav_byteenable -> ET_Core_instruction_master_translator_avalon_universal_master_0_agent:av_byteenable
	wire         et_core_instruction_master_translator_avalon_universal_master_0_readdatavalid;                      // ET_Core_instruction_master_translator_avalon_universal_master_0_agent:av_readdatavalid -> ET_Core_instruction_master_translator:uav_readdatavalid
	wire         rsp_xbar_mux_src_endofpacket;                                                                       // rsp_xbar_mux:src_endofpacket -> ET_Core_instruction_master_translator_avalon_universal_master_0_agent:rp_endofpacket
	wire         rsp_xbar_mux_src_valid;                                                                             // rsp_xbar_mux:src_valid -> ET_Core_instruction_master_translator_avalon_universal_master_0_agent:rp_valid
	wire         rsp_xbar_mux_src_startofpacket;                                                                     // rsp_xbar_mux:src_startofpacket -> ET_Core_instruction_master_translator_avalon_universal_master_0_agent:rp_startofpacket
	wire  [95:0] rsp_xbar_mux_src_data;                                                                              // rsp_xbar_mux:src_data -> ET_Core_instruction_master_translator_avalon_universal_master_0_agent:rp_data
	wire  [16:0] rsp_xbar_mux_src_channel;                                                                           // rsp_xbar_mux:src_channel -> ET_Core_instruction_master_translator_avalon_universal_master_0_agent:rp_channel
	wire         rsp_xbar_mux_src_ready;                                                                             // ET_Core_instruction_master_translator_avalon_universal_master_0_agent:rp_ready -> rsp_xbar_mux:src_ready
	wire         et_core_data_master_translator_avalon_universal_master_0_waitrequest;                               // ET_Core_data_master_translator_avalon_universal_master_0_agent:av_waitrequest -> ET_Core_data_master_translator:uav_waitrequest
	wire   [2:0] et_core_data_master_translator_avalon_universal_master_0_burstcount;                                // ET_Core_data_master_translator:uav_burstcount -> ET_Core_data_master_translator_avalon_universal_master_0_agent:av_burstcount
	wire  [31:0] et_core_data_master_translator_avalon_universal_master_0_writedata;                                 // ET_Core_data_master_translator:uav_writedata -> ET_Core_data_master_translator_avalon_universal_master_0_agent:av_writedata
	wire  [15:0] et_core_data_master_translator_avalon_universal_master_0_address;                                   // ET_Core_data_master_translator:uav_address -> ET_Core_data_master_translator_avalon_universal_master_0_agent:av_address
	wire         et_core_data_master_translator_avalon_universal_master_0_lock;                                      // ET_Core_data_master_translator:uav_lock -> ET_Core_data_master_translator_avalon_universal_master_0_agent:av_lock
	wire         et_core_data_master_translator_avalon_universal_master_0_write;                                     // ET_Core_data_master_translator:uav_write -> ET_Core_data_master_translator_avalon_universal_master_0_agent:av_write
	wire         et_core_data_master_translator_avalon_universal_master_0_read;                                      // ET_Core_data_master_translator:uav_read -> ET_Core_data_master_translator_avalon_universal_master_0_agent:av_read
	wire  [31:0] et_core_data_master_translator_avalon_universal_master_0_readdata;                                  // ET_Core_data_master_translator_avalon_universal_master_0_agent:av_readdata -> ET_Core_data_master_translator:uav_readdata
	wire         et_core_data_master_translator_avalon_universal_master_0_debugaccess;                               // ET_Core_data_master_translator:uav_debugaccess -> ET_Core_data_master_translator_avalon_universal_master_0_agent:av_debugaccess
	wire   [3:0] et_core_data_master_translator_avalon_universal_master_0_byteenable;                                // ET_Core_data_master_translator:uav_byteenable -> ET_Core_data_master_translator_avalon_universal_master_0_agent:av_byteenable
	wire         et_core_data_master_translator_avalon_universal_master_0_readdatavalid;                             // ET_Core_data_master_translator_avalon_universal_master_0_agent:av_readdatavalid -> ET_Core_data_master_translator:uav_readdatavalid
	wire         rsp_xbar_mux_001_src_endofpacket;                                                                   // rsp_xbar_mux_001:src_endofpacket -> ET_Core_data_master_translator_avalon_universal_master_0_agent:rp_endofpacket
	wire         rsp_xbar_mux_001_src_valid;                                                                         // rsp_xbar_mux_001:src_valid -> ET_Core_data_master_translator_avalon_universal_master_0_agent:rp_valid
	wire         rsp_xbar_mux_001_src_startofpacket;                                                                 // rsp_xbar_mux_001:src_startofpacket -> ET_Core_data_master_translator_avalon_universal_master_0_agent:rp_startofpacket
	wire  [95:0] rsp_xbar_mux_001_src_data;                                                                          // rsp_xbar_mux_001:src_data -> ET_Core_data_master_translator_avalon_universal_master_0_agent:rp_data
	wire  [16:0] rsp_xbar_mux_001_src_channel;                                                                       // rsp_xbar_mux_001:src_channel -> ET_Core_data_master_translator_avalon_universal_master_0_agent:rp_channel
	wire         rsp_xbar_mux_001_src_ready;                                                                         // ET_Core_data_master_translator_avalon_universal_master_0_agent:rp_ready -> rsp_xbar_mux_001:src_ready
	wire         tt_core_data_master_translator_avalon_universal_master_0_waitrequest;                               // TT_Core_data_master_translator_avalon_universal_master_0_agent:av_waitrequest -> TT_Core_data_master_translator:uav_waitrequest
	wire   [2:0] tt_core_data_master_translator_avalon_universal_master_0_burstcount;                                // TT_Core_data_master_translator:uav_burstcount -> TT_Core_data_master_translator_avalon_universal_master_0_agent:av_burstcount
	wire  [31:0] tt_core_data_master_translator_avalon_universal_master_0_writedata;                                 // TT_Core_data_master_translator:uav_writedata -> TT_Core_data_master_translator_avalon_universal_master_0_agent:av_writedata
	wire  [15:0] tt_core_data_master_translator_avalon_universal_master_0_address;                                   // TT_Core_data_master_translator:uav_address -> TT_Core_data_master_translator_avalon_universal_master_0_agent:av_address
	wire         tt_core_data_master_translator_avalon_universal_master_0_lock;                                      // TT_Core_data_master_translator:uav_lock -> TT_Core_data_master_translator_avalon_universal_master_0_agent:av_lock
	wire         tt_core_data_master_translator_avalon_universal_master_0_write;                                     // TT_Core_data_master_translator:uav_write -> TT_Core_data_master_translator_avalon_universal_master_0_agent:av_write
	wire         tt_core_data_master_translator_avalon_universal_master_0_read;                                      // TT_Core_data_master_translator:uav_read -> TT_Core_data_master_translator_avalon_universal_master_0_agent:av_read
	wire  [31:0] tt_core_data_master_translator_avalon_universal_master_0_readdata;                                  // TT_Core_data_master_translator_avalon_universal_master_0_agent:av_readdata -> TT_Core_data_master_translator:uav_readdata
	wire         tt_core_data_master_translator_avalon_universal_master_0_debugaccess;                               // TT_Core_data_master_translator:uav_debugaccess -> TT_Core_data_master_translator_avalon_universal_master_0_agent:av_debugaccess
	wire   [3:0] tt_core_data_master_translator_avalon_universal_master_0_byteenable;                                // TT_Core_data_master_translator:uav_byteenable -> TT_Core_data_master_translator_avalon_universal_master_0_agent:av_byteenable
	wire         tt_core_data_master_translator_avalon_universal_master_0_readdatavalid;                             // TT_Core_data_master_translator_avalon_universal_master_0_agent:av_readdatavalid -> TT_Core_data_master_translator:uav_readdatavalid
	wire         rsp_xbar_mux_002_src_endofpacket;                                                                   // rsp_xbar_mux_002:src_endofpacket -> TT_Core_data_master_translator_avalon_universal_master_0_agent:rp_endofpacket
	wire         rsp_xbar_mux_002_src_valid;                                                                         // rsp_xbar_mux_002:src_valid -> TT_Core_data_master_translator_avalon_universal_master_0_agent:rp_valid
	wire         rsp_xbar_mux_002_src_startofpacket;                                                                 // rsp_xbar_mux_002:src_startofpacket -> TT_Core_data_master_translator_avalon_universal_master_0_agent:rp_startofpacket
	wire  [95:0] rsp_xbar_mux_002_src_data;                                                                          // rsp_xbar_mux_002:src_data -> TT_Core_data_master_translator_avalon_universal_master_0_agent:rp_data
	wire  [16:0] rsp_xbar_mux_002_src_channel;                                                                       // rsp_xbar_mux_002:src_channel -> TT_Core_data_master_translator_avalon_universal_master_0_agent:rp_channel
	wire         rsp_xbar_mux_002_src_ready;                                                                         // TT_Core_data_master_translator_avalon_universal_master_0_agent:rp_ready -> rsp_xbar_mux_002:src_ready
	wire         tt_core_instruction_master_translator_avalon_universal_master_0_waitrequest;                        // TT_Core_instruction_master_translator_avalon_universal_master_0_agent:av_waitrequest -> TT_Core_instruction_master_translator:uav_waitrequest
	wire   [2:0] tt_core_instruction_master_translator_avalon_universal_master_0_burstcount;                         // TT_Core_instruction_master_translator:uav_burstcount -> TT_Core_instruction_master_translator_avalon_universal_master_0_agent:av_burstcount
	wire  [31:0] tt_core_instruction_master_translator_avalon_universal_master_0_writedata;                          // TT_Core_instruction_master_translator:uav_writedata -> TT_Core_instruction_master_translator_avalon_universal_master_0_agent:av_writedata
	wire  [15:0] tt_core_instruction_master_translator_avalon_universal_master_0_address;                            // TT_Core_instruction_master_translator:uav_address -> TT_Core_instruction_master_translator_avalon_universal_master_0_agent:av_address
	wire         tt_core_instruction_master_translator_avalon_universal_master_0_lock;                               // TT_Core_instruction_master_translator:uav_lock -> TT_Core_instruction_master_translator_avalon_universal_master_0_agent:av_lock
	wire         tt_core_instruction_master_translator_avalon_universal_master_0_write;                              // TT_Core_instruction_master_translator:uav_write -> TT_Core_instruction_master_translator_avalon_universal_master_0_agent:av_write
	wire         tt_core_instruction_master_translator_avalon_universal_master_0_read;                               // TT_Core_instruction_master_translator:uav_read -> TT_Core_instruction_master_translator_avalon_universal_master_0_agent:av_read
	wire  [31:0] tt_core_instruction_master_translator_avalon_universal_master_0_readdata;                           // TT_Core_instruction_master_translator_avalon_universal_master_0_agent:av_readdata -> TT_Core_instruction_master_translator:uav_readdata
	wire         tt_core_instruction_master_translator_avalon_universal_master_0_debugaccess;                        // TT_Core_instruction_master_translator:uav_debugaccess -> TT_Core_instruction_master_translator_avalon_universal_master_0_agent:av_debugaccess
	wire   [3:0] tt_core_instruction_master_translator_avalon_universal_master_0_byteenable;                         // TT_Core_instruction_master_translator:uav_byteenable -> TT_Core_instruction_master_translator_avalon_universal_master_0_agent:av_byteenable
	wire         tt_core_instruction_master_translator_avalon_universal_master_0_readdatavalid;                      // TT_Core_instruction_master_translator_avalon_universal_master_0_agent:av_readdatavalid -> TT_Core_instruction_master_translator:uav_readdatavalid
	wire         rsp_xbar_mux_003_src_endofpacket;                                                                   // rsp_xbar_mux_003:src_endofpacket -> TT_Core_instruction_master_translator_avalon_universal_master_0_agent:rp_endofpacket
	wire         rsp_xbar_mux_003_src_valid;                                                                         // rsp_xbar_mux_003:src_valid -> TT_Core_instruction_master_translator_avalon_universal_master_0_agent:rp_valid
	wire         rsp_xbar_mux_003_src_startofpacket;                                                                 // rsp_xbar_mux_003:src_startofpacket -> TT_Core_instruction_master_translator_avalon_universal_master_0_agent:rp_startofpacket
	wire  [95:0] rsp_xbar_mux_003_src_data;                                                                          // rsp_xbar_mux_003:src_data -> TT_Core_instruction_master_translator_avalon_universal_master_0_agent:rp_data
	wire  [16:0] rsp_xbar_mux_003_src_channel;                                                                       // rsp_xbar_mux_003:src_channel -> TT_Core_instruction_master_translator_avalon_universal_master_0_agent:rp_channel
	wire         rsp_xbar_mux_003_src_ready;                                                                         // TT_Core_instruction_master_translator_avalon_universal_master_0_agent:rp_ready -> rsp_xbar_mux_003:src_ready
	wire         et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_waitrequest;                 // ET_Core_jtag_debug_module_translator:uav_waitrequest -> ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_burstcount;                  // ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_burstcount -> ET_Core_jtag_debug_module_translator:uav_burstcount
	wire  [31:0] et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_writedata;                   // ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_writedata -> ET_Core_jtag_debug_module_translator:uav_writedata
	wire  [15:0] et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_address;                     // ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_address -> ET_Core_jtag_debug_module_translator:uav_address
	wire         et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_write;                       // ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_write -> ET_Core_jtag_debug_module_translator:uav_write
	wire         et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_lock;                        // ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_lock -> ET_Core_jtag_debug_module_translator:uav_lock
	wire         et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_read;                        // ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_read -> ET_Core_jtag_debug_module_translator:uav_read
	wire  [31:0] et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdata;                    // ET_Core_jtag_debug_module_translator:uav_readdata -> ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdatavalid;               // ET_Core_jtag_debug_module_translator:uav_readdatavalid -> ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_debugaccess;                 // ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_debugaccess -> ET_Core_jtag_debug_module_translator:uav_debugaccess
	wire   [3:0] et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_byteenable;                  // ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_byteenable -> ET_Core_jtag_debug_module_translator:uav_byteenable
	wire         et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;          // ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_valid;                // ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_valid -> ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;        // ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [96:0] et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_data;                 // ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_data -> ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_ready;                // ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;       // ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;             // ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;     // ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [96:0] et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;              // ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;             // ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_ready -> ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;           // ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;            // ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;           // ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_src_endofpacket;                                                                       // cmd_xbar_mux:src_endofpacket -> ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_src_valid;                                                                             // cmd_xbar_mux:src_valid -> ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_src_startofpacket;                                                                     // cmd_xbar_mux:src_startofpacket -> ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [95:0] cmd_xbar_mux_src_data;                                                                              // cmd_xbar_mux:src_data -> ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_data
	wire  [16:0] cmd_xbar_mux_src_channel;                                                                           // cmd_xbar_mux:src_channel -> ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_src_ready;                                                                             // ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux:src_ready
	wire         et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                         // ET_Core_Memory_s1_translator:uav_waitrequest -> ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                          // ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> ET_Core_Memory_s1_translator:uav_burstcount
	wire  [31:0] et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                           // ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> ET_Core_Memory_s1_translator:uav_writedata
	wire  [15:0] et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_address;                             // ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:m0_address -> ET_Core_Memory_s1_translator:uav_address
	wire         et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_write;                               // ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:m0_write -> ET_Core_Memory_s1_translator:uav_write
	wire         et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                // ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:m0_lock -> ET_Core_Memory_s1_translator:uav_lock
	wire         et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_read;                                // ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:m0_read -> ET_Core_Memory_s1_translator:uav_read
	wire  [31:0] et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                            // ET_Core_Memory_s1_translator:uav_readdata -> ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                       // ET_Core_Memory_s1_translator:uav_readdatavalid -> ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                         // ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> ET_Core_Memory_s1_translator:uav_debugaccess
	wire   [3:0] et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                          // ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> ET_Core_Memory_s1_translator:uav_byteenable
	wire         et_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                  // ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         et_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                        // ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         et_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                // ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [96:0] et_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                         // ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         et_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                        // ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         et_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;               // ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         et_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                     // ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         et_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;             // ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [96:0] et_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                      // ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         et_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                     // ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         et_core_memory_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                   // ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] et_core_memory_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                    // ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         et_core_memory_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                   // ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_001_src_endofpacket;                                                                   // cmd_xbar_mux_001:src_endofpacket -> ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_001_src_valid;                                                                         // cmd_xbar_mux_001:src_valid -> ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_001_src_startofpacket;                                                                 // cmd_xbar_mux_001:src_startofpacket -> ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [95:0] cmd_xbar_mux_001_src_data;                                                                          // cmd_xbar_mux_001:src_data -> ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [16:0] cmd_xbar_mux_001_src_channel;                                                                       // cmd_xbar_mux_001:src_channel -> ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_001_src_ready;                                                                         // ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_001:src_ready
	wire         msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                            // msg_buf_ram_s1_translator:uav_waitrequest -> msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                             // msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> msg_buf_ram_s1_translator:uav_burstcount
	wire  [31:0] msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                              // msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> msg_buf_ram_s1_translator:uav_writedata
	wire  [15:0] msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_address;                                // msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:m0_address -> msg_buf_ram_s1_translator:uav_address
	wire         msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_write;                                  // msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:m0_write -> msg_buf_ram_s1_translator:uav_write
	wire         msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                   // msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:m0_lock -> msg_buf_ram_s1_translator:uav_lock
	wire         msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_read;                                   // msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:m0_read -> msg_buf_ram_s1_translator:uav_read
	wire  [31:0] msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                               // msg_buf_ram_s1_translator:uav_readdata -> msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                          // msg_buf_ram_s1_translator:uav_readdatavalid -> msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                            // msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> msg_buf_ram_s1_translator:uav_debugaccess
	wire   [3:0] msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                             // msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> msg_buf_ram_s1_translator:uav_byteenable
	wire         msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                     // msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                           // msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                   // msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [96:0] msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                            // msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                           // msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                  // msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                        // msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                // msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [96:0] msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                         // msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                        // msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                      // msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                       // msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                      // msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_002_src_endofpacket;                                                                   // cmd_xbar_mux_002:src_endofpacket -> msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_002_src_valid;                                                                         // cmd_xbar_mux_002:src_valid -> msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_002_src_startofpacket;                                                                 // cmd_xbar_mux_002:src_startofpacket -> msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [95:0] cmd_xbar_mux_002_src_data;                                                                          // cmd_xbar_mux_002:src_data -> msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [16:0] cmd_xbar_mux_002_src_channel;                                                                       // cmd_xbar_mux_002:src_channel -> msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_002_src_ready;                                                                         // msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_002:src_ready
	wire         msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                          // msg_buf_mutex_s1_translator:uav_waitrequest -> msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                           // msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> msg_buf_mutex_s1_translator:uav_burstcount
	wire  [31:0] msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                            // msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> msg_buf_mutex_s1_translator:uav_writedata
	wire  [15:0] msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_address;                              // msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:m0_address -> msg_buf_mutex_s1_translator:uav_address
	wire         msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_write;                                // msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:m0_write -> msg_buf_mutex_s1_translator:uav_write
	wire         msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                 // msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:m0_lock -> msg_buf_mutex_s1_translator:uav_lock
	wire         msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_read;                                 // msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:m0_read -> msg_buf_mutex_s1_translator:uav_read
	wire  [31:0] msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                             // msg_buf_mutex_s1_translator:uav_readdata -> msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                        // msg_buf_mutex_s1_translator:uav_readdatavalid -> msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                          // msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> msg_buf_mutex_s1_translator:uav_debugaccess
	wire   [3:0] msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                           // msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> msg_buf_mutex_s1_translator:uav_byteenable
	wire         msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                   // msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                         // msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                 // msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [96:0] msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                          // msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                         // msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                // msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                      // msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;              // msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [96:0] msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                       // msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                      // msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                    // msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                     // msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                    // msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_003_src_endofpacket;                                                                   // cmd_xbar_mux_003:src_endofpacket -> msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_003_src_valid;                                                                         // cmd_xbar_mux_003:src_valid -> msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_003_src_startofpacket;                                                                 // cmd_xbar_mux_003:src_startofpacket -> msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [95:0] cmd_xbar_mux_003_src_data;                                                                          // cmd_xbar_mux_003:src_data -> msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [16:0] cmd_xbar_mux_003_src_channel;                                                                       // cmd_xbar_mux_003:src_channel -> msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_003_src_ready;                                                                         // msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_003:src_ready
	wire         pio_0_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                  // pio_0_s1_translator:uav_waitrequest -> pio_0_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] pio_0_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                   // pio_0_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> pio_0_s1_translator:uav_burstcount
	wire  [31:0] pio_0_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                    // pio_0_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> pio_0_s1_translator:uav_writedata
	wire  [15:0] pio_0_s1_translator_avalon_universal_slave_0_agent_m0_address;                                      // pio_0_s1_translator_avalon_universal_slave_0_agent:m0_address -> pio_0_s1_translator:uav_address
	wire         pio_0_s1_translator_avalon_universal_slave_0_agent_m0_write;                                        // pio_0_s1_translator_avalon_universal_slave_0_agent:m0_write -> pio_0_s1_translator:uav_write
	wire         pio_0_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                         // pio_0_s1_translator_avalon_universal_slave_0_agent:m0_lock -> pio_0_s1_translator:uav_lock
	wire         pio_0_s1_translator_avalon_universal_slave_0_agent_m0_read;                                         // pio_0_s1_translator_avalon_universal_slave_0_agent:m0_read -> pio_0_s1_translator:uav_read
	wire  [31:0] pio_0_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                     // pio_0_s1_translator:uav_readdata -> pio_0_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         pio_0_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                // pio_0_s1_translator:uav_readdatavalid -> pio_0_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         pio_0_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                  // pio_0_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> pio_0_s1_translator:uav_debugaccess
	wire   [3:0] pio_0_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                   // pio_0_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> pio_0_s1_translator:uav_byteenable
	wire         pio_0_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                           // pio_0_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> pio_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         pio_0_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                 // pio_0_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> pio_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         pio_0_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                         // pio_0_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> pio_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [96:0] pio_0_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                  // pio_0_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> pio_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         pio_0_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                 // pio_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> pio_0_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         pio_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                        // pio_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> pio_0_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         pio_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                              // pio_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> pio_0_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         pio_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                      // pio_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> pio_0_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [96:0] pio_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                               // pio_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> pio_0_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         pio_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                              // pio_0_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> pio_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         pio_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                            // pio_0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> pio_0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] pio_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                             // pio_0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> pio_0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         pio_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                            // pio_0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> pio_0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_004_src_endofpacket;                                                                   // cmd_xbar_mux_004:src_endofpacket -> pio_0_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_004_src_valid;                                                                         // cmd_xbar_mux_004:src_valid -> pio_0_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_004_src_startofpacket;                                                                 // cmd_xbar_mux_004:src_startofpacket -> pio_0_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [95:0] cmd_xbar_mux_004_src_data;                                                                          // cmd_xbar_mux_004:src_data -> pio_0_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [16:0] cmd_xbar_mux_004_src_channel;                                                                       // cmd_xbar_mux_004:src_channel -> pio_0_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_004_src_ready;                                                                         // pio_0_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_004:src_ready
	wire         et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                // et_pb_2_s1_translator:uav_waitrequest -> et_pb_2_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                 // et_pb_2_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> et_pb_2_s1_translator:uav_burstcount
	wire  [31:0] et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                  // et_pb_2_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> et_pb_2_s1_translator:uav_writedata
	wire  [15:0] et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_address;                                    // et_pb_2_s1_translator_avalon_universal_slave_0_agent:m0_address -> et_pb_2_s1_translator:uav_address
	wire         et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_write;                                      // et_pb_2_s1_translator_avalon_universal_slave_0_agent:m0_write -> et_pb_2_s1_translator:uav_write
	wire         et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                       // et_pb_2_s1_translator_avalon_universal_slave_0_agent:m0_lock -> et_pb_2_s1_translator:uav_lock
	wire         et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_read;                                       // et_pb_2_s1_translator_avalon_universal_slave_0_agent:m0_read -> et_pb_2_s1_translator:uav_read
	wire  [31:0] et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                   // et_pb_2_s1_translator:uav_readdata -> et_pb_2_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                              // et_pb_2_s1_translator:uav_readdatavalid -> et_pb_2_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                // et_pb_2_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> et_pb_2_s1_translator:uav_debugaccess
	wire   [3:0] et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                 // et_pb_2_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> et_pb_2_s1_translator:uav_byteenable
	wire         et_pb_2_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                         // et_pb_2_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> et_pb_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         et_pb_2_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                               // et_pb_2_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> et_pb_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         et_pb_2_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                       // et_pb_2_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> et_pb_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [96:0] et_pb_2_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                // et_pb_2_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> et_pb_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         et_pb_2_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                               // et_pb_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> et_pb_2_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         et_pb_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                      // et_pb_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> et_pb_2_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         et_pb_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                            // et_pb_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> et_pb_2_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         et_pb_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                    // et_pb_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> et_pb_2_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [96:0] et_pb_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                             // et_pb_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> et_pb_2_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         et_pb_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                            // et_pb_2_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> et_pb_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         et_pb_2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                          // et_pb_2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> et_pb_2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] et_pb_2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                           // et_pb_2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> et_pb_2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         et_pb_2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                          // et_pb_2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> et_pb_2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_005_src_endofpacket;                                                                   // cmd_xbar_mux_005:src_endofpacket -> et_pb_2_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_005_src_valid;                                                                         // cmd_xbar_mux_005:src_valid -> et_pb_2_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_005_src_startofpacket;                                                                 // cmd_xbar_mux_005:src_startofpacket -> et_pb_2_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [95:0] cmd_xbar_mux_005_src_data;                                                                          // cmd_xbar_mux_005:src_data -> et_pb_2_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [16:0] cmd_xbar_mux_005_src_channel;                                                                       // cmd_xbar_mux_005:src_channel -> et_pb_2_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_005_src_ready;                                                                         // et_pb_2_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_005:src_ready
	wire         et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                // et_pb_1_s1_translator:uav_waitrequest -> et_pb_1_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                 // et_pb_1_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> et_pb_1_s1_translator:uav_burstcount
	wire  [31:0] et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                  // et_pb_1_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> et_pb_1_s1_translator:uav_writedata
	wire  [15:0] et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_address;                                    // et_pb_1_s1_translator_avalon_universal_slave_0_agent:m0_address -> et_pb_1_s1_translator:uav_address
	wire         et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_write;                                      // et_pb_1_s1_translator_avalon_universal_slave_0_agent:m0_write -> et_pb_1_s1_translator:uav_write
	wire         et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                       // et_pb_1_s1_translator_avalon_universal_slave_0_agent:m0_lock -> et_pb_1_s1_translator:uav_lock
	wire         et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_read;                                       // et_pb_1_s1_translator_avalon_universal_slave_0_agent:m0_read -> et_pb_1_s1_translator:uav_read
	wire  [31:0] et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                   // et_pb_1_s1_translator:uav_readdata -> et_pb_1_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                              // et_pb_1_s1_translator:uav_readdatavalid -> et_pb_1_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                // et_pb_1_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> et_pb_1_s1_translator:uav_debugaccess
	wire   [3:0] et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                 // et_pb_1_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> et_pb_1_s1_translator:uav_byteenable
	wire         et_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                         // et_pb_1_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> et_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         et_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                               // et_pb_1_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> et_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         et_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                       // et_pb_1_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> et_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [96:0] et_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                // et_pb_1_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> et_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         et_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                               // et_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> et_pb_1_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         et_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                      // et_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> et_pb_1_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         et_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                            // et_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> et_pb_1_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         et_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                    // et_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> et_pb_1_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [96:0] et_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                             // et_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> et_pb_1_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         et_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                            // et_pb_1_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> et_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         et_pb_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                          // et_pb_1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> et_pb_1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] et_pb_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                           // et_pb_1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> et_pb_1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         et_pb_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                          // et_pb_1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> et_pb_1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_006_src_endofpacket;                                                                   // cmd_xbar_mux_006:src_endofpacket -> et_pb_1_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_006_src_valid;                                                                         // cmd_xbar_mux_006:src_valid -> et_pb_1_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_006_src_startofpacket;                                                                 // cmd_xbar_mux_006:src_startofpacket -> et_pb_1_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [95:0] cmd_xbar_mux_006_src_data;                                                                          // cmd_xbar_mux_006:src_data -> et_pb_1_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [16:0] cmd_xbar_mux_006_src_channel;                                                                       // cmd_xbar_mux_006:src_channel -> et_pb_1_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_006_src_ready;                                                                         // et_pb_1_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_006:src_ready
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest;             // jtag_uart_0_avalon_jtag_slave_translator:uav_waitrequest -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_burstcount;              // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_burstcount -> jtag_uart_0_avalon_jtag_slave_translator:uav_burstcount
	wire  [31:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_writedata;               // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_writedata -> jtag_uart_0_avalon_jtag_slave_translator:uav_writedata
	wire  [15:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_address;                 // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_address -> jtag_uart_0_avalon_jtag_slave_translator:uav_address
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_write;                   // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_write -> jtag_uart_0_avalon_jtag_slave_translator:uav_write
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_lock;                    // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_lock -> jtag_uart_0_avalon_jtag_slave_translator:uav_lock
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_read;                    // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_read -> jtag_uart_0_avalon_jtag_slave_translator:uav_read
	wire  [31:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdata;                // jtag_uart_0_avalon_jtag_slave_translator:uav_readdata -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid;           // jtag_uart_0_avalon_jtag_slave_translator:uav_readdatavalid -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess;             // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_debugaccess -> jtag_uart_0_avalon_jtag_slave_translator:uav_debugaccess
	wire   [3:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_byteenable;              // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_byteenable -> jtag_uart_0_avalon_jtag_slave_translator:uav_byteenable
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;      // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_valid;            // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_valid -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;    // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [96:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_data;             // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_data -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_ready;            // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;   // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;         // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket; // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [96:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;          // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;         // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_ready -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;       // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;        // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;       // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_007_src_endofpacket;                                                                   // cmd_xbar_mux_007:src_endofpacket -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_007_src_valid;                                                                         // cmd_xbar_mux_007:src_valid -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_007_src_startofpacket;                                                                 // cmd_xbar_mux_007:src_startofpacket -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [95:0] cmd_xbar_mux_007_src_data;                                                                          // cmd_xbar_mux_007:src_data -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_data
	wire  [16:0] cmd_xbar_mux_007_src_channel;                                                                       // cmd_xbar_mux_007:src_channel -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_007_src_ready;                                                                         // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_007:src_ready
	wire         et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_waitrequest;                 // et_spi_0_spi_control_port_translator:uav_waitrequest -> et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_burstcount;                  // et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:m0_burstcount -> et_spi_0_spi_control_port_translator:uav_burstcount
	wire  [31:0] et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_writedata;                   // et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:m0_writedata -> et_spi_0_spi_control_port_translator:uav_writedata
	wire  [15:0] et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_address;                     // et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:m0_address -> et_spi_0_spi_control_port_translator:uav_address
	wire         et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_write;                       // et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:m0_write -> et_spi_0_spi_control_port_translator:uav_write
	wire         et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_lock;                        // et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:m0_lock -> et_spi_0_spi_control_port_translator:uav_lock
	wire         et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_read;                        // et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:m0_read -> et_spi_0_spi_control_port_translator:uav_read
	wire  [31:0] et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_readdata;                    // et_spi_0_spi_control_port_translator:uav_readdata -> et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_readdatavalid;               // et_spi_0_spi_control_port_translator:uav_readdatavalid -> et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_debugaccess;                 // et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:m0_debugaccess -> et_spi_0_spi_control_port_translator:uav_debugaccess
	wire   [3:0] et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_byteenable;                  // et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:m0_byteenable -> et_spi_0_spi_control_port_translator:uav_byteenable
	wire         et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;          // et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rf_source_valid;                // et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:rf_source_valid -> et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;        // et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [96:0] et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rf_source_data;                 // et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:rf_source_data -> et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rf_source_ready;                // et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;       // et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;             // et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;     // et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [96:0] et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;              // et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;             // et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:rf_sink_ready -> et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;           // et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;            // et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;           // et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_008_src_endofpacket;                                                                   // cmd_xbar_mux_008:src_endofpacket -> et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_008_src_valid;                                                                         // cmd_xbar_mux_008:src_valid -> et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_008_src_startofpacket;                                                                 // cmd_xbar_mux_008:src_startofpacket -> et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [95:0] cmd_xbar_mux_008_src_data;                                                                          // cmd_xbar_mux_008:src_data -> et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:cp_data
	wire  [16:0] cmd_xbar_mux_008_src_channel;                                                                       // cmd_xbar_mux_008:src_channel -> et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_008_src_ready;                                                                         // et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_008:src_ready
	wire         et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                               // et_leds2_s1_translator:uav_waitrequest -> et_leds2_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                // et_leds2_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> et_leds2_s1_translator:uav_burstcount
	wire  [31:0] et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                 // et_leds2_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> et_leds2_s1_translator:uav_writedata
	wire  [15:0] et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_address;                                   // et_leds2_s1_translator_avalon_universal_slave_0_agent:m0_address -> et_leds2_s1_translator:uav_address
	wire         et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_write;                                     // et_leds2_s1_translator_avalon_universal_slave_0_agent:m0_write -> et_leds2_s1_translator:uav_write
	wire         et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                      // et_leds2_s1_translator_avalon_universal_slave_0_agent:m0_lock -> et_leds2_s1_translator:uav_lock
	wire         et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_read;                                      // et_leds2_s1_translator_avalon_universal_slave_0_agent:m0_read -> et_leds2_s1_translator:uav_read
	wire  [31:0] et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                  // et_leds2_s1_translator:uav_readdata -> et_leds2_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                             // et_leds2_s1_translator:uav_readdatavalid -> et_leds2_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                               // et_leds2_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> et_leds2_s1_translator:uav_debugaccess
	wire   [3:0] et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                // et_leds2_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> et_leds2_s1_translator:uav_byteenable
	wire         et_leds2_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                        // et_leds2_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> et_leds2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         et_leds2_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                              // et_leds2_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> et_leds2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         et_leds2_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                      // et_leds2_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> et_leds2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [96:0] et_leds2_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                               // et_leds2_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> et_leds2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         et_leds2_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                              // et_leds2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> et_leds2_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         et_leds2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                     // et_leds2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> et_leds2_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         et_leds2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                           // et_leds2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> et_leds2_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         et_leds2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                   // et_leds2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> et_leds2_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [96:0] et_leds2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                            // et_leds2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> et_leds2_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         et_leds2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                           // et_leds2_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> et_leds2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         et_leds2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                         // et_leds2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> et_leds2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] et_leds2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                          // et_leds2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> et_leds2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         et_leds2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                         // et_leds2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> et_leds2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_009_src_endofpacket;                                                                   // cmd_xbar_mux_009:src_endofpacket -> et_leds2_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_009_src_valid;                                                                         // cmd_xbar_mux_009:src_valid -> et_leds2_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_009_src_startofpacket;                                                                 // cmd_xbar_mux_009:src_startofpacket -> et_leds2_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [95:0] cmd_xbar_mux_009_src_data;                                                                          // cmd_xbar_mux_009:src_data -> et_leds2_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [16:0] cmd_xbar_mux_009_src_channel;                                                                       // cmd_xbar_mux_009:src_channel -> et_leds2_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_009_src_ready;                                                                         // et_leds2_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_009:src_ready
	wire         et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                               // et_leds1_s1_translator:uav_waitrequest -> et_leds1_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                // et_leds1_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> et_leds1_s1_translator:uav_burstcount
	wire  [31:0] et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                 // et_leds1_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> et_leds1_s1_translator:uav_writedata
	wire  [15:0] et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_address;                                   // et_leds1_s1_translator_avalon_universal_slave_0_agent:m0_address -> et_leds1_s1_translator:uav_address
	wire         et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_write;                                     // et_leds1_s1_translator_avalon_universal_slave_0_agent:m0_write -> et_leds1_s1_translator:uav_write
	wire         et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                      // et_leds1_s1_translator_avalon_universal_slave_0_agent:m0_lock -> et_leds1_s1_translator:uav_lock
	wire         et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_read;                                      // et_leds1_s1_translator_avalon_universal_slave_0_agent:m0_read -> et_leds1_s1_translator:uav_read
	wire  [31:0] et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                  // et_leds1_s1_translator:uav_readdata -> et_leds1_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                             // et_leds1_s1_translator:uav_readdatavalid -> et_leds1_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                               // et_leds1_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> et_leds1_s1_translator:uav_debugaccess
	wire   [3:0] et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                // et_leds1_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> et_leds1_s1_translator:uav_byteenable
	wire         et_leds1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                        // et_leds1_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> et_leds1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         et_leds1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                              // et_leds1_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> et_leds1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         et_leds1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                      // et_leds1_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> et_leds1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [96:0] et_leds1_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                               // et_leds1_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> et_leds1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         et_leds1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                              // et_leds1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> et_leds1_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         et_leds1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                     // et_leds1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> et_leds1_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         et_leds1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                           // et_leds1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> et_leds1_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         et_leds1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                   // et_leds1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> et_leds1_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [96:0] et_leds1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                            // et_leds1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> et_leds1_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         et_leds1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                           // et_leds1_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> et_leds1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         et_leds1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                         // et_leds1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> et_leds1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] et_leds1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                          // et_leds1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> et_leds1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         et_leds1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                         // et_leds1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> et_leds1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_010_src_endofpacket;                                                                   // cmd_xbar_mux_010:src_endofpacket -> et_leds1_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_010_src_valid;                                                                         // cmd_xbar_mux_010:src_valid -> et_leds1_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_010_src_startofpacket;                                                                 // cmd_xbar_mux_010:src_startofpacket -> et_leds1_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [95:0] cmd_xbar_mux_010_src_data;                                                                          // cmd_xbar_mux_010:src_data -> et_leds1_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [16:0] cmd_xbar_mux_010_src_channel;                                                                       // cmd_xbar_mux_010:src_channel -> et_leds1_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_010_src_ready;                                                                         // et_leds1_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_010:src_ready
	wire         et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                          // et_spican_int_s1_translator:uav_waitrequest -> et_spican_int_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                           // et_spican_int_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> et_spican_int_s1_translator:uav_burstcount
	wire  [31:0] et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                            // et_spican_int_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> et_spican_int_s1_translator:uav_writedata
	wire  [15:0] et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_address;                              // et_spican_int_s1_translator_avalon_universal_slave_0_agent:m0_address -> et_spican_int_s1_translator:uav_address
	wire         et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_write;                                // et_spican_int_s1_translator_avalon_universal_slave_0_agent:m0_write -> et_spican_int_s1_translator:uav_write
	wire         et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                 // et_spican_int_s1_translator_avalon_universal_slave_0_agent:m0_lock -> et_spican_int_s1_translator:uav_lock
	wire         et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_read;                                 // et_spican_int_s1_translator_avalon_universal_slave_0_agent:m0_read -> et_spican_int_s1_translator:uav_read
	wire  [31:0] et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                             // et_spican_int_s1_translator:uav_readdata -> et_spican_int_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                        // et_spican_int_s1_translator:uav_readdatavalid -> et_spican_int_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                          // et_spican_int_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> et_spican_int_s1_translator:uav_debugaccess
	wire   [3:0] et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                           // et_spican_int_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> et_spican_int_s1_translator:uav_byteenable
	wire         et_spican_int_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                   // et_spican_int_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> et_spican_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         et_spican_int_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                         // et_spican_int_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> et_spican_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         et_spican_int_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                 // et_spican_int_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> et_spican_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [96:0] et_spican_int_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                          // et_spican_int_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> et_spican_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         et_spican_int_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                         // et_spican_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> et_spican_int_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         et_spican_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                // et_spican_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> et_spican_int_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         et_spican_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                      // et_spican_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> et_spican_int_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         et_spican_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;              // et_spican_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> et_spican_int_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [96:0] et_spican_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                       // et_spican_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> et_spican_int_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         et_spican_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                      // et_spican_int_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> et_spican_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         et_spican_int_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                    // et_spican_int_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> et_spican_int_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] et_spican_int_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                     // et_spican_int_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> et_spican_int_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         et_spican_int_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                    // et_spican_int_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> et_spican_int_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_011_src_endofpacket;                                                                   // cmd_xbar_mux_011:src_endofpacket -> et_spican_int_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_011_src_valid;                                                                         // cmd_xbar_mux_011:src_valid -> et_spican_int_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_011_src_startofpacket;                                                                 // cmd_xbar_mux_011:src_startofpacket -> et_spican_int_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [95:0] cmd_xbar_mux_011_src_data;                                                                          // cmd_xbar_mux_011:src_data -> et_spican_int_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [16:0] cmd_xbar_mux_011_src_channel;                                                                       // cmd_xbar_mux_011:src_channel -> et_spican_int_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_011_src_ready;                                                                         // et_spican_int_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_011:src_ready
	wire         tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_waitrequest;                 // TT_Core_jtag_debug_module_translator:uav_waitrequest -> TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_burstcount;                  // TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_burstcount -> TT_Core_jtag_debug_module_translator:uav_burstcount
	wire  [31:0] tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_writedata;                   // TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_writedata -> TT_Core_jtag_debug_module_translator:uav_writedata
	wire  [15:0] tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_address;                     // TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_address -> TT_Core_jtag_debug_module_translator:uav_address
	wire         tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_write;                       // TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_write -> TT_Core_jtag_debug_module_translator:uav_write
	wire         tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_lock;                        // TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_lock -> TT_Core_jtag_debug_module_translator:uav_lock
	wire         tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_read;                        // TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_read -> TT_Core_jtag_debug_module_translator:uav_read
	wire  [31:0] tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdata;                    // TT_Core_jtag_debug_module_translator:uav_readdata -> TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdatavalid;               // TT_Core_jtag_debug_module_translator:uav_readdatavalid -> TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_debugaccess;                 // TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_debugaccess -> TT_Core_jtag_debug_module_translator:uav_debugaccess
	wire   [3:0] tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_byteenable;                  // TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_byteenable -> TT_Core_jtag_debug_module_translator:uav_byteenable
	wire         tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;          // TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_valid;                // TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_valid -> TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;        // TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [96:0] tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_data;                 // TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_data -> TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_ready;                // TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;       // TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;             // TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;     // TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [96:0] tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;              // TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;             // TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_ready -> TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;           // TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;            // TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;           // TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_012_src_endofpacket;                                                                   // cmd_xbar_mux_012:src_endofpacket -> TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_012_src_valid;                                                                         // cmd_xbar_mux_012:src_valid -> TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_012_src_startofpacket;                                                                 // cmd_xbar_mux_012:src_startofpacket -> TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [95:0] cmd_xbar_mux_012_src_data;                                                                          // cmd_xbar_mux_012:src_data -> TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_data
	wire  [16:0] cmd_xbar_mux_012_src_channel;                                                                       // cmd_xbar_mux_012:src_channel -> TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_012_src_ready;                                                                         // TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_012:src_ready
	wire         tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                // tt_pb_1_s1_translator:uav_waitrequest -> tt_pb_1_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                 // tt_pb_1_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> tt_pb_1_s1_translator:uav_burstcount
	wire  [31:0] tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                  // tt_pb_1_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> tt_pb_1_s1_translator:uav_writedata
	wire  [15:0] tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_address;                                    // tt_pb_1_s1_translator_avalon_universal_slave_0_agent:m0_address -> tt_pb_1_s1_translator:uav_address
	wire         tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_write;                                      // tt_pb_1_s1_translator_avalon_universal_slave_0_agent:m0_write -> tt_pb_1_s1_translator:uav_write
	wire         tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                       // tt_pb_1_s1_translator_avalon_universal_slave_0_agent:m0_lock -> tt_pb_1_s1_translator:uav_lock
	wire         tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_read;                                       // tt_pb_1_s1_translator_avalon_universal_slave_0_agent:m0_read -> tt_pb_1_s1_translator:uav_read
	wire  [31:0] tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                   // tt_pb_1_s1_translator:uav_readdata -> tt_pb_1_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                              // tt_pb_1_s1_translator:uav_readdatavalid -> tt_pb_1_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                // tt_pb_1_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> tt_pb_1_s1_translator:uav_debugaccess
	wire   [3:0] tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                 // tt_pb_1_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> tt_pb_1_s1_translator:uav_byteenable
	wire         tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                         // tt_pb_1_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                               // tt_pb_1_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                       // tt_pb_1_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [96:0] tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                // tt_pb_1_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                               // tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> tt_pb_1_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                      // tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> tt_pb_1_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                            // tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> tt_pb_1_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                    // tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> tt_pb_1_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [96:0] tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                             // tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> tt_pb_1_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                            // tt_pb_1_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                          // tt_pb_1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> tt_pb_1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                           // tt_pb_1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> tt_pb_1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                          // tt_pb_1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> tt_pb_1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_013_src_endofpacket;                                                                   // cmd_xbar_mux_013:src_endofpacket -> tt_pb_1_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_013_src_valid;                                                                         // cmd_xbar_mux_013:src_valid -> tt_pb_1_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_013_src_startofpacket;                                                                 // cmd_xbar_mux_013:src_startofpacket -> tt_pb_1_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [95:0] cmd_xbar_mux_013_src_data;                                                                          // cmd_xbar_mux_013:src_data -> tt_pb_1_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [16:0] cmd_xbar_mux_013_src_channel;                                                                       // cmd_xbar_mux_013:src_channel -> tt_pb_1_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_013_src_ready;                                                                         // tt_pb_1_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_013:src_ready
	wire         tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                // tt_leds_s1_translator:uav_waitrequest -> tt_leds_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                 // tt_leds_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> tt_leds_s1_translator:uav_burstcount
	wire  [31:0] tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                  // tt_leds_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> tt_leds_s1_translator:uav_writedata
	wire  [15:0] tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_address;                                    // tt_leds_s1_translator_avalon_universal_slave_0_agent:m0_address -> tt_leds_s1_translator:uav_address
	wire         tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_write;                                      // tt_leds_s1_translator_avalon_universal_slave_0_agent:m0_write -> tt_leds_s1_translator:uav_write
	wire         tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                       // tt_leds_s1_translator_avalon_universal_slave_0_agent:m0_lock -> tt_leds_s1_translator:uav_lock
	wire         tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_read;                                       // tt_leds_s1_translator_avalon_universal_slave_0_agent:m0_read -> tt_leds_s1_translator:uav_read
	wire  [31:0] tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                   // tt_leds_s1_translator:uav_readdata -> tt_leds_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                              // tt_leds_s1_translator:uav_readdatavalid -> tt_leds_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                // tt_leds_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> tt_leds_s1_translator:uav_debugaccess
	wire   [3:0] tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                 // tt_leds_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> tt_leds_s1_translator:uav_byteenable
	wire         tt_leds_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                         // tt_leds_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> tt_leds_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         tt_leds_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                               // tt_leds_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> tt_leds_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         tt_leds_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                       // tt_leds_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> tt_leds_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [96:0] tt_leds_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                // tt_leds_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> tt_leds_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         tt_leds_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                               // tt_leds_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> tt_leds_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         tt_leds_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                      // tt_leds_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> tt_leds_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         tt_leds_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                            // tt_leds_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> tt_leds_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         tt_leds_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                    // tt_leds_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> tt_leds_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [96:0] tt_leds_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                             // tt_leds_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> tt_leds_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         tt_leds_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                            // tt_leds_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> tt_leds_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         tt_leds_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                          // tt_leds_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> tt_leds_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] tt_leds_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                           // tt_leds_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> tt_leds_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         tt_leds_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                          // tt_leds_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> tt_leds_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_014_src_endofpacket;                                                                   // cmd_xbar_mux_014:src_endofpacket -> tt_leds_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_014_src_valid;                                                                         // cmd_xbar_mux_014:src_valid -> tt_leds_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_014_src_startofpacket;                                                                 // cmd_xbar_mux_014:src_startofpacket -> tt_leds_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [95:0] cmd_xbar_mux_014_src_data;                                                                          // cmd_xbar_mux_014:src_data -> tt_leds_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [16:0] cmd_xbar_mux_014_src_channel;                                                                       // cmd_xbar_mux_014:src_channel -> tt_leds_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_014_src_ready;                                                                         // tt_leds_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_014:src_ready
	wire         tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                         // TT_core_memory_s1_translator:uav_waitrequest -> TT_core_memory_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                          // TT_core_memory_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> TT_core_memory_s1_translator:uav_burstcount
	wire  [31:0] tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                           // TT_core_memory_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> TT_core_memory_s1_translator:uav_writedata
	wire  [15:0] tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_address;                             // TT_core_memory_s1_translator_avalon_universal_slave_0_agent:m0_address -> TT_core_memory_s1_translator:uav_address
	wire         tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_write;                               // TT_core_memory_s1_translator_avalon_universal_slave_0_agent:m0_write -> TT_core_memory_s1_translator:uav_write
	wire         tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                // TT_core_memory_s1_translator_avalon_universal_slave_0_agent:m0_lock -> TT_core_memory_s1_translator:uav_lock
	wire         tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_read;                                // TT_core_memory_s1_translator_avalon_universal_slave_0_agent:m0_read -> TT_core_memory_s1_translator:uav_read
	wire  [31:0] tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                            // TT_core_memory_s1_translator:uav_readdata -> TT_core_memory_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                       // TT_core_memory_s1_translator:uav_readdatavalid -> TT_core_memory_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                         // TT_core_memory_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> TT_core_memory_s1_translator:uav_debugaccess
	wire   [3:0] tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                          // TT_core_memory_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> TT_core_memory_s1_translator:uav_byteenable
	wire         tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                  // TT_core_memory_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> TT_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                        // TT_core_memory_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> TT_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                // TT_core_memory_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> TT_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [96:0] tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                         // TT_core_memory_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> TT_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                        // TT_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> TT_core_memory_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;               // TT_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> TT_core_memory_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                     // TT_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> TT_core_memory_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;             // TT_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> TT_core_memory_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [96:0] tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                      // TT_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> TT_core_memory_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                     // TT_core_memory_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> TT_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                   // TT_core_memory_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> TT_core_memory_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                    // TT_core_memory_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> TT_core_memory_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                   // TT_core_memory_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> TT_core_memory_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_015_src_endofpacket;                                                                   // cmd_xbar_mux_015:src_endofpacket -> TT_core_memory_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_015_src_valid;                                                                         // cmd_xbar_mux_015:src_valid -> TT_core_memory_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_015_src_startofpacket;                                                                 // cmd_xbar_mux_015:src_startofpacket -> TT_core_memory_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [95:0] cmd_xbar_mux_015_src_data;                                                                          // cmd_xbar_mux_015:src_data -> TT_core_memory_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [16:0] cmd_xbar_mux_015_src_channel;                                                                       // cmd_xbar_mux_015:src_channel -> TT_core_memory_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_015_src_ready;                                                                         // TT_core_memory_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_015:src_ready
	wire         tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                             // tt_timer_1_s1_translator:uav_waitrequest -> tt_timer_1_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                              // tt_timer_1_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> tt_timer_1_s1_translator:uav_burstcount
	wire  [31:0] tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                               // tt_timer_1_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> tt_timer_1_s1_translator:uav_writedata
	wire  [15:0] tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_address;                                 // tt_timer_1_s1_translator_avalon_universal_slave_0_agent:m0_address -> tt_timer_1_s1_translator:uav_address
	wire         tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_write;                                   // tt_timer_1_s1_translator_avalon_universal_slave_0_agent:m0_write -> tt_timer_1_s1_translator:uav_write
	wire         tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                    // tt_timer_1_s1_translator_avalon_universal_slave_0_agent:m0_lock -> tt_timer_1_s1_translator:uav_lock
	wire         tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_read;                                    // tt_timer_1_s1_translator_avalon_universal_slave_0_agent:m0_read -> tt_timer_1_s1_translator:uav_read
	wire  [31:0] tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                // tt_timer_1_s1_translator:uav_readdata -> tt_timer_1_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                           // tt_timer_1_s1_translator:uav_readdatavalid -> tt_timer_1_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                             // tt_timer_1_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> tt_timer_1_s1_translator:uav_debugaccess
	wire   [3:0] tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                              // tt_timer_1_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> tt_timer_1_s1_translator:uav_byteenable
	wire         tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                      // tt_timer_1_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                            // tt_timer_1_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                    // tt_timer_1_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [96:0] tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                             // tt_timer_1_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                            // tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> tt_timer_1_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                   // tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> tt_timer_1_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                         // tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> tt_timer_1_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                 // tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> tt_timer_1_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [96:0] tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                          // tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> tt_timer_1_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                         // tt_timer_1_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                       // tt_timer_1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> tt_timer_1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                        // tt_timer_1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> tt_timer_1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                       // tt_timer_1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> tt_timer_1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_016_src_endofpacket;                                                                   // cmd_xbar_mux_016:src_endofpacket -> tt_timer_1_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_016_src_valid;                                                                         // cmd_xbar_mux_016:src_valid -> tt_timer_1_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_016_src_startofpacket;                                                                 // cmd_xbar_mux_016:src_startofpacket -> tt_timer_1_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [95:0] cmd_xbar_mux_016_src_data;                                                                          // cmd_xbar_mux_016:src_data -> tt_timer_1_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [16:0] cmd_xbar_mux_016_src_channel;                                                                       // cmd_xbar_mux_016:src_channel -> tt_timer_1_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_016_src_ready;                                                                         // tt_timer_1_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_016:src_ready
	wire         et_core_instruction_master_translator_avalon_universal_master_0_agent_cp_endofpacket;               // ET_Core_instruction_master_translator_avalon_universal_master_0_agent:cp_endofpacket -> addr_router:sink_endofpacket
	wire         et_core_instruction_master_translator_avalon_universal_master_0_agent_cp_valid;                     // ET_Core_instruction_master_translator_avalon_universal_master_0_agent:cp_valid -> addr_router:sink_valid
	wire         et_core_instruction_master_translator_avalon_universal_master_0_agent_cp_startofpacket;             // ET_Core_instruction_master_translator_avalon_universal_master_0_agent:cp_startofpacket -> addr_router:sink_startofpacket
	wire  [95:0] et_core_instruction_master_translator_avalon_universal_master_0_agent_cp_data;                      // ET_Core_instruction_master_translator_avalon_universal_master_0_agent:cp_data -> addr_router:sink_data
	wire         et_core_instruction_master_translator_avalon_universal_master_0_agent_cp_ready;                     // addr_router:sink_ready -> ET_Core_instruction_master_translator_avalon_universal_master_0_agent:cp_ready
	wire         addr_router_src_endofpacket;                                                                        // addr_router:src_endofpacket -> cmd_xbar_demux:sink_endofpacket
	wire         addr_router_src_valid;                                                                              // addr_router:src_valid -> cmd_xbar_demux:sink_valid
	wire         addr_router_src_startofpacket;                                                                      // addr_router:src_startofpacket -> cmd_xbar_demux:sink_startofpacket
	wire  [95:0] addr_router_src_data;                                                                               // addr_router:src_data -> cmd_xbar_demux:sink_data
	wire  [16:0] addr_router_src_channel;                                                                            // addr_router:src_channel -> cmd_xbar_demux:sink_channel
	wire         addr_router_src_ready;                                                                              // cmd_xbar_demux:sink_ready -> addr_router:src_ready
	wire         et_core_data_master_translator_avalon_universal_master_0_agent_cp_endofpacket;                      // ET_Core_data_master_translator_avalon_universal_master_0_agent:cp_endofpacket -> addr_router_001:sink_endofpacket
	wire         et_core_data_master_translator_avalon_universal_master_0_agent_cp_valid;                            // ET_Core_data_master_translator_avalon_universal_master_0_agent:cp_valid -> addr_router_001:sink_valid
	wire         et_core_data_master_translator_avalon_universal_master_0_agent_cp_startofpacket;                    // ET_Core_data_master_translator_avalon_universal_master_0_agent:cp_startofpacket -> addr_router_001:sink_startofpacket
	wire  [95:0] et_core_data_master_translator_avalon_universal_master_0_agent_cp_data;                             // ET_Core_data_master_translator_avalon_universal_master_0_agent:cp_data -> addr_router_001:sink_data
	wire         et_core_data_master_translator_avalon_universal_master_0_agent_cp_ready;                            // addr_router_001:sink_ready -> ET_Core_data_master_translator_avalon_universal_master_0_agent:cp_ready
	wire         addr_router_001_src_endofpacket;                                                                    // addr_router_001:src_endofpacket -> cmd_xbar_demux_001:sink_endofpacket
	wire         addr_router_001_src_valid;                                                                          // addr_router_001:src_valid -> cmd_xbar_demux_001:sink_valid
	wire         addr_router_001_src_startofpacket;                                                                  // addr_router_001:src_startofpacket -> cmd_xbar_demux_001:sink_startofpacket
	wire  [95:0] addr_router_001_src_data;                                                                           // addr_router_001:src_data -> cmd_xbar_demux_001:sink_data
	wire  [16:0] addr_router_001_src_channel;                                                                        // addr_router_001:src_channel -> cmd_xbar_demux_001:sink_channel
	wire         addr_router_001_src_ready;                                                                          // cmd_xbar_demux_001:sink_ready -> addr_router_001:src_ready
	wire         tt_core_data_master_translator_avalon_universal_master_0_agent_cp_endofpacket;                      // TT_Core_data_master_translator_avalon_universal_master_0_agent:cp_endofpacket -> addr_router_002:sink_endofpacket
	wire         tt_core_data_master_translator_avalon_universal_master_0_agent_cp_valid;                            // TT_Core_data_master_translator_avalon_universal_master_0_agent:cp_valid -> addr_router_002:sink_valid
	wire         tt_core_data_master_translator_avalon_universal_master_0_agent_cp_startofpacket;                    // TT_Core_data_master_translator_avalon_universal_master_0_agent:cp_startofpacket -> addr_router_002:sink_startofpacket
	wire  [95:0] tt_core_data_master_translator_avalon_universal_master_0_agent_cp_data;                             // TT_Core_data_master_translator_avalon_universal_master_0_agent:cp_data -> addr_router_002:sink_data
	wire         tt_core_data_master_translator_avalon_universal_master_0_agent_cp_ready;                            // addr_router_002:sink_ready -> TT_Core_data_master_translator_avalon_universal_master_0_agent:cp_ready
	wire         addr_router_002_src_endofpacket;                                                                    // addr_router_002:src_endofpacket -> cmd_xbar_demux_002:sink_endofpacket
	wire         addr_router_002_src_valid;                                                                          // addr_router_002:src_valid -> cmd_xbar_demux_002:sink_valid
	wire         addr_router_002_src_startofpacket;                                                                  // addr_router_002:src_startofpacket -> cmd_xbar_demux_002:sink_startofpacket
	wire  [95:0] addr_router_002_src_data;                                                                           // addr_router_002:src_data -> cmd_xbar_demux_002:sink_data
	wire  [16:0] addr_router_002_src_channel;                                                                        // addr_router_002:src_channel -> cmd_xbar_demux_002:sink_channel
	wire         addr_router_002_src_ready;                                                                          // cmd_xbar_demux_002:sink_ready -> addr_router_002:src_ready
	wire         tt_core_instruction_master_translator_avalon_universal_master_0_agent_cp_endofpacket;               // TT_Core_instruction_master_translator_avalon_universal_master_0_agent:cp_endofpacket -> addr_router_003:sink_endofpacket
	wire         tt_core_instruction_master_translator_avalon_universal_master_0_agent_cp_valid;                     // TT_Core_instruction_master_translator_avalon_universal_master_0_agent:cp_valid -> addr_router_003:sink_valid
	wire         tt_core_instruction_master_translator_avalon_universal_master_0_agent_cp_startofpacket;             // TT_Core_instruction_master_translator_avalon_universal_master_0_agent:cp_startofpacket -> addr_router_003:sink_startofpacket
	wire  [95:0] tt_core_instruction_master_translator_avalon_universal_master_0_agent_cp_data;                      // TT_Core_instruction_master_translator_avalon_universal_master_0_agent:cp_data -> addr_router_003:sink_data
	wire         tt_core_instruction_master_translator_avalon_universal_master_0_agent_cp_ready;                     // addr_router_003:sink_ready -> TT_Core_instruction_master_translator_avalon_universal_master_0_agent:cp_ready
	wire         addr_router_003_src_endofpacket;                                                                    // addr_router_003:src_endofpacket -> cmd_xbar_demux_003:sink_endofpacket
	wire         addr_router_003_src_valid;                                                                          // addr_router_003:src_valid -> cmd_xbar_demux_003:sink_valid
	wire         addr_router_003_src_startofpacket;                                                                  // addr_router_003:src_startofpacket -> cmd_xbar_demux_003:sink_startofpacket
	wire  [95:0] addr_router_003_src_data;                                                                           // addr_router_003:src_data -> cmd_xbar_demux_003:sink_data
	wire  [16:0] addr_router_003_src_channel;                                                                        // addr_router_003:src_channel -> cmd_xbar_demux_003:sink_channel
	wire         addr_router_003_src_ready;                                                                          // cmd_xbar_demux_003:sink_ready -> addr_router_003:src_ready
	wire         et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_endofpacket;                 // ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router:sink_endofpacket
	wire         et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_valid;                       // ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_valid -> id_router:sink_valid
	wire         et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_startofpacket;               // ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router:sink_startofpacket
	wire  [95:0] et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_data;                        // ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_data -> id_router:sink_data
	wire         et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_ready;                       // id_router:sink_ready -> ET_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_src_endofpacket;                                                                          // id_router:src_endofpacket -> rsp_xbar_demux:sink_endofpacket
	wire         id_router_src_valid;                                                                                // id_router:src_valid -> rsp_xbar_demux:sink_valid
	wire         id_router_src_startofpacket;                                                                        // id_router:src_startofpacket -> rsp_xbar_demux:sink_startofpacket
	wire  [95:0] id_router_src_data;                                                                                 // id_router:src_data -> rsp_xbar_demux:sink_data
	wire  [16:0] id_router_src_channel;                                                                              // id_router:src_channel -> rsp_xbar_demux:sink_channel
	wire         id_router_src_ready;                                                                                // rsp_xbar_demux:sink_ready -> id_router:src_ready
	wire         et_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                         // ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_001:sink_endofpacket
	wire         et_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_valid;                               // ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_001:sink_valid
	wire         et_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                       // ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_001:sink_startofpacket
	wire  [95:0] et_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_data;                                // ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_001:sink_data
	wire         et_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_ready;                               // id_router_001:sink_ready -> ET_Core_Memory_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_001_src_endofpacket;                                                                      // id_router_001:src_endofpacket -> rsp_xbar_demux_001:sink_endofpacket
	wire         id_router_001_src_valid;                                                                            // id_router_001:src_valid -> rsp_xbar_demux_001:sink_valid
	wire         id_router_001_src_startofpacket;                                                                    // id_router_001:src_startofpacket -> rsp_xbar_demux_001:sink_startofpacket
	wire  [95:0] id_router_001_src_data;                                                                             // id_router_001:src_data -> rsp_xbar_demux_001:sink_data
	wire  [16:0] id_router_001_src_channel;                                                                          // id_router_001:src_channel -> rsp_xbar_demux_001:sink_channel
	wire         id_router_001_src_ready;                                                                            // rsp_xbar_demux_001:sink_ready -> id_router_001:src_ready
	wire         msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                            // msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_002:sink_endofpacket
	wire         msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                  // msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_002:sink_valid
	wire         msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                          // msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_002:sink_startofpacket
	wire  [95:0] msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rp_data;                                   // msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_002:sink_data
	wire         msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                  // id_router_002:sink_ready -> msg_buf_ram_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_002_src_endofpacket;                                                                      // id_router_002:src_endofpacket -> rsp_xbar_demux_002:sink_endofpacket
	wire         id_router_002_src_valid;                                                                            // id_router_002:src_valid -> rsp_xbar_demux_002:sink_valid
	wire         id_router_002_src_startofpacket;                                                                    // id_router_002:src_startofpacket -> rsp_xbar_demux_002:sink_startofpacket
	wire  [95:0] id_router_002_src_data;                                                                             // id_router_002:src_data -> rsp_xbar_demux_002:sink_data
	wire  [16:0] id_router_002_src_channel;                                                                          // id_router_002:src_channel -> rsp_xbar_demux_002:sink_channel
	wire         id_router_002_src_ready;                                                                            // rsp_xbar_demux_002:sink_ready -> id_router_002:src_ready
	wire         msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                          // msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_003:sink_endofpacket
	wire         msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                // msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_003:sink_valid
	wire         msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                        // msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_003:sink_startofpacket
	wire  [95:0] msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rp_data;                                 // msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_003:sink_data
	wire         msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                // id_router_003:sink_ready -> msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_003_src_endofpacket;                                                                      // id_router_003:src_endofpacket -> rsp_xbar_demux_003:sink_endofpacket
	wire         id_router_003_src_valid;                                                                            // id_router_003:src_valid -> rsp_xbar_demux_003:sink_valid
	wire         id_router_003_src_startofpacket;                                                                    // id_router_003:src_startofpacket -> rsp_xbar_demux_003:sink_startofpacket
	wire  [95:0] id_router_003_src_data;                                                                             // id_router_003:src_data -> rsp_xbar_demux_003:sink_data
	wire  [16:0] id_router_003_src_channel;                                                                          // id_router_003:src_channel -> rsp_xbar_demux_003:sink_channel
	wire         id_router_003_src_ready;                                                                            // rsp_xbar_demux_003:sink_ready -> id_router_003:src_ready
	wire         pio_0_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                  // pio_0_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_004:sink_endofpacket
	wire         pio_0_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                        // pio_0_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_004:sink_valid
	wire         pio_0_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                // pio_0_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_004:sink_startofpacket
	wire  [95:0] pio_0_s1_translator_avalon_universal_slave_0_agent_rp_data;                                         // pio_0_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_004:sink_data
	wire         pio_0_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                        // id_router_004:sink_ready -> pio_0_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_004_src_endofpacket;                                                                      // id_router_004:src_endofpacket -> rsp_xbar_demux_004:sink_endofpacket
	wire         id_router_004_src_valid;                                                                            // id_router_004:src_valid -> rsp_xbar_demux_004:sink_valid
	wire         id_router_004_src_startofpacket;                                                                    // id_router_004:src_startofpacket -> rsp_xbar_demux_004:sink_startofpacket
	wire  [95:0] id_router_004_src_data;                                                                             // id_router_004:src_data -> rsp_xbar_demux_004:sink_data
	wire  [16:0] id_router_004_src_channel;                                                                          // id_router_004:src_channel -> rsp_xbar_demux_004:sink_channel
	wire         id_router_004_src_ready;                                                                            // rsp_xbar_demux_004:sink_ready -> id_router_004:src_ready
	wire         et_pb_2_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                // et_pb_2_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_005:sink_endofpacket
	wire         et_pb_2_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                      // et_pb_2_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_005:sink_valid
	wire         et_pb_2_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                              // et_pb_2_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_005:sink_startofpacket
	wire  [95:0] et_pb_2_s1_translator_avalon_universal_slave_0_agent_rp_data;                                       // et_pb_2_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_005:sink_data
	wire         et_pb_2_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                      // id_router_005:sink_ready -> et_pb_2_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_005_src_endofpacket;                                                                      // id_router_005:src_endofpacket -> rsp_xbar_demux_005:sink_endofpacket
	wire         id_router_005_src_valid;                                                                            // id_router_005:src_valid -> rsp_xbar_demux_005:sink_valid
	wire         id_router_005_src_startofpacket;                                                                    // id_router_005:src_startofpacket -> rsp_xbar_demux_005:sink_startofpacket
	wire  [95:0] id_router_005_src_data;                                                                             // id_router_005:src_data -> rsp_xbar_demux_005:sink_data
	wire  [16:0] id_router_005_src_channel;                                                                          // id_router_005:src_channel -> rsp_xbar_demux_005:sink_channel
	wire         id_router_005_src_ready;                                                                            // rsp_xbar_demux_005:sink_ready -> id_router_005:src_ready
	wire         et_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                // et_pb_1_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_006:sink_endofpacket
	wire         et_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                      // et_pb_1_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_006:sink_valid
	wire         et_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                              // et_pb_1_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_006:sink_startofpacket
	wire  [95:0] et_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_data;                                       // et_pb_1_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_006:sink_data
	wire         et_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                      // id_router_006:sink_ready -> et_pb_1_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_006_src_endofpacket;                                                                      // id_router_006:src_endofpacket -> rsp_xbar_demux_006:sink_endofpacket
	wire         id_router_006_src_valid;                                                                            // id_router_006:src_valid -> rsp_xbar_demux_006:sink_valid
	wire         id_router_006_src_startofpacket;                                                                    // id_router_006:src_startofpacket -> rsp_xbar_demux_006:sink_startofpacket
	wire  [95:0] id_router_006_src_data;                                                                             // id_router_006:src_data -> rsp_xbar_demux_006:sink_data
	wire  [16:0] id_router_006_src_channel;                                                                          // id_router_006:src_channel -> rsp_xbar_demux_006:sink_channel
	wire         id_router_006_src_ready;                                                                            // rsp_xbar_demux_006:sink_ready -> id_router_006:src_ready
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket;             // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_007:sink_endofpacket
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_valid;                   // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_007:sink_valid
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket;           // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_007:sink_startofpacket
	wire  [95:0] jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_data;                    // jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_data -> id_router_007:sink_data
	wire         jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_ready;                   // id_router_007:sink_ready -> jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_007_src_endofpacket;                                                                      // id_router_007:src_endofpacket -> rsp_xbar_demux_007:sink_endofpacket
	wire         id_router_007_src_valid;                                                                            // id_router_007:src_valid -> rsp_xbar_demux_007:sink_valid
	wire         id_router_007_src_startofpacket;                                                                    // id_router_007:src_startofpacket -> rsp_xbar_demux_007:sink_startofpacket
	wire  [95:0] id_router_007_src_data;                                                                             // id_router_007:src_data -> rsp_xbar_demux_007:sink_data
	wire  [16:0] id_router_007_src_channel;                                                                          // id_router_007:src_channel -> rsp_xbar_demux_007:sink_channel
	wire         id_router_007_src_ready;                                                                            // rsp_xbar_demux_007:sink_ready -> id_router_007:src_ready
	wire         et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rp_endofpacket;                 // et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_008:sink_endofpacket
	wire         et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rp_valid;                       // et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_008:sink_valid
	wire         et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rp_startofpacket;               // et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_008:sink_startofpacket
	wire  [95:0] et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rp_data;                        // et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:rp_data -> id_router_008:sink_data
	wire         et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rp_ready;                       // id_router_008:sink_ready -> et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_008_src_endofpacket;                                                                      // id_router_008:src_endofpacket -> rsp_xbar_demux_008:sink_endofpacket
	wire         id_router_008_src_valid;                                                                            // id_router_008:src_valid -> rsp_xbar_demux_008:sink_valid
	wire         id_router_008_src_startofpacket;                                                                    // id_router_008:src_startofpacket -> rsp_xbar_demux_008:sink_startofpacket
	wire  [95:0] id_router_008_src_data;                                                                             // id_router_008:src_data -> rsp_xbar_demux_008:sink_data
	wire  [16:0] id_router_008_src_channel;                                                                          // id_router_008:src_channel -> rsp_xbar_demux_008:sink_channel
	wire         id_router_008_src_ready;                                                                            // rsp_xbar_demux_008:sink_ready -> id_router_008:src_ready
	wire         et_leds2_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                               // et_leds2_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_009:sink_endofpacket
	wire         et_leds2_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                     // et_leds2_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_009:sink_valid
	wire         et_leds2_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                             // et_leds2_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_009:sink_startofpacket
	wire  [95:0] et_leds2_s1_translator_avalon_universal_slave_0_agent_rp_data;                                      // et_leds2_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_009:sink_data
	wire         et_leds2_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                     // id_router_009:sink_ready -> et_leds2_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_009_src_endofpacket;                                                                      // id_router_009:src_endofpacket -> rsp_xbar_demux_009:sink_endofpacket
	wire         id_router_009_src_valid;                                                                            // id_router_009:src_valid -> rsp_xbar_demux_009:sink_valid
	wire         id_router_009_src_startofpacket;                                                                    // id_router_009:src_startofpacket -> rsp_xbar_demux_009:sink_startofpacket
	wire  [95:0] id_router_009_src_data;                                                                             // id_router_009:src_data -> rsp_xbar_demux_009:sink_data
	wire  [16:0] id_router_009_src_channel;                                                                          // id_router_009:src_channel -> rsp_xbar_demux_009:sink_channel
	wire         id_router_009_src_ready;                                                                            // rsp_xbar_demux_009:sink_ready -> id_router_009:src_ready
	wire         et_leds1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                               // et_leds1_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_010:sink_endofpacket
	wire         et_leds1_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                     // et_leds1_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_010:sink_valid
	wire         et_leds1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                             // et_leds1_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_010:sink_startofpacket
	wire  [95:0] et_leds1_s1_translator_avalon_universal_slave_0_agent_rp_data;                                      // et_leds1_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_010:sink_data
	wire         et_leds1_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                     // id_router_010:sink_ready -> et_leds1_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_010_src_endofpacket;                                                                      // id_router_010:src_endofpacket -> rsp_xbar_demux_010:sink_endofpacket
	wire         id_router_010_src_valid;                                                                            // id_router_010:src_valid -> rsp_xbar_demux_010:sink_valid
	wire         id_router_010_src_startofpacket;                                                                    // id_router_010:src_startofpacket -> rsp_xbar_demux_010:sink_startofpacket
	wire  [95:0] id_router_010_src_data;                                                                             // id_router_010:src_data -> rsp_xbar_demux_010:sink_data
	wire  [16:0] id_router_010_src_channel;                                                                          // id_router_010:src_channel -> rsp_xbar_demux_010:sink_channel
	wire         id_router_010_src_ready;                                                                            // rsp_xbar_demux_010:sink_ready -> id_router_010:src_ready
	wire         et_spican_int_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                          // et_spican_int_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_011:sink_endofpacket
	wire         et_spican_int_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                // et_spican_int_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_011:sink_valid
	wire         et_spican_int_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                        // et_spican_int_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_011:sink_startofpacket
	wire  [95:0] et_spican_int_s1_translator_avalon_universal_slave_0_agent_rp_data;                                 // et_spican_int_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_011:sink_data
	wire         et_spican_int_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                // id_router_011:sink_ready -> et_spican_int_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_011_src_endofpacket;                                                                      // id_router_011:src_endofpacket -> rsp_xbar_demux_011:sink_endofpacket
	wire         id_router_011_src_valid;                                                                            // id_router_011:src_valid -> rsp_xbar_demux_011:sink_valid
	wire         id_router_011_src_startofpacket;                                                                    // id_router_011:src_startofpacket -> rsp_xbar_demux_011:sink_startofpacket
	wire  [95:0] id_router_011_src_data;                                                                             // id_router_011:src_data -> rsp_xbar_demux_011:sink_data
	wire  [16:0] id_router_011_src_channel;                                                                          // id_router_011:src_channel -> rsp_xbar_demux_011:sink_channel
	wire         id_router_011_src_ready;                                                                            // rsp_xbar_demux_011:sink_ready -> id_router_011:src_ready
	wire         tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_endofpacket;                 // TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_012:sink_endofpacket
	wire         tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_valid;                       // TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_012:sink_valid
	wire         tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_startofpacket;               // TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_012:sink_startofpacket
	wire  [95:0] tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_data;                        // TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_data -> id_router_012:sink_data
	wire         tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_ready;                       // id_router_012:sink_ready -> TT_Core_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_012_src_endofpacket;                                                                      // id_router_012:src_endofpacket -> rsp_xbar_demux_012:sink_endofpacket
	wire         id_router_012_src_valid;                                                                            // id_router_012:src_valid -> rsp_xbar_demux_012:sink_valid
	wire         id_router_012_src_startofpacket;                                                                    // id_router_012:src_startofpacket -> rsp_xbar_demux_012:sink_startofpacket
	wire  [95:0] id_router_012_src_data;                                                                             // id_router_012:src_data -> rsp_xbar_demux_012:sink_data
	wire  [16:0] id_router_012_src_channel;                                                                          // id_router_012:src_channel -> rsp_xbar_demux_012:sink_channel
	wire         id_router_012_src_ready;                                                                            // rsp_xbar_demux_012:sink_ready -> id_router_012:src_ready
	wire         tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                // tt_pb_1_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_013:sink_endofpacket
	wire         tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                      // tt_pb_1_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_013:sink_valid
	wire         tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                              // tt_pb_1_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_013:sink_startofpacket
	wire  [95:0] tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_data;                                       // tt_pb_1_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_013:sink_data
	wire         tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                      // id_router_013:sink_ready -> tt_pb_1_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_013_src_endofpacket;                                                                      // id_router_013:src_endofpacket -> rsp_xbar_demux_013:sink_endofpacket
	wire         id_router_013_src_valid;                                                                            // id_router_013:src_valid -> rsp_xbar_demux_013:sink_valid
	wire         id_router_013_src_startofpacket;                                                                    // id_router_013:src_startofpacket -> rsp_xbar_demux_013:sink_startofpacket
	wire  [95:0] id_router_013_src_data;                                                                             // id_router_013:src_data -> rsp_xbar_demux_013:sink_data
	wire  [16:0] id_router_013_src_channel;                                                                          // id_router_013:src_channel -> rsp_xbar_demux_013:sink_channel
	wire         id_router_013_src_ready;                                                                            // rsp_xbar_demux_013:sink_ready -> id_router_013:src_ready
	wire         tt_leds_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                // tt_leds_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_014:sink_endofpacket
	wire         tt_leds_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                      // tt_leds_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_014:sink_valid
	wire         tt_leds_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                              // tt_leds_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_014:sink_startofpacket
	wire  [95:0] tt_leds_s1_translator_avalon_universal_slave_0_agent_rp_data;                                       // tt_leds_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_014:sink_data
	wire         tt_leds_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                      // id_router_014:sink_ready -> tt_leds_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_014_src_endofpacket;                                                                      // id_router_014:src_endofpacket -> rsp_xbar_demux_014:sink_endofpacket
	wire         id_router_014_src_valid;                                                                            // id_router_014:src_valid -> rsp_xbar_demux_014:sink_valid
	wire         id_router_014_src_startofpacket;                                                                    // id_router_014:src_startofpacket -> rsp_xbar_demux_014:sink_startofpacket
	wire  [95:0] id_router_014_src_data;                                                                             // id_router_014:src_data -> rsp_xbar_demux_014:sink_data
	wire  [16:0] id_router_014_src_channel;                                                                          // id_router_014:src_channel -> rsp_xbar_demux_014:sink_channel
	wire         id_router_014_src_ready;                                                                            // rsp_xbar_demux_014:sink_ready -> id_router_014:src_ready
	wire         tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                         // TT_core_memory_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_015:sink_endofpacket
	wire         tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_valid;                               // TT_core_memory_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_015:sink_valid
	wire         tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                       // TT_core_memory_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_015:sink_startofpacket
	wire  [95:0] tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_data;                                // TT_core_memory_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_015:sink_data
	wire         tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_ready;                               // id_router_015:sink_ready -> TT_core_memory_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_015_src_endofpacket;                                                                      // id_router_015:src_endofpacket -> rsp_xbar_demux_015:sink_endofpacket
	wire         id_router_015_src_valid;                                                                            // id_router_015:src_valid -> rsp_xbar_demux_015:sink_valid
	wire         id_router_015_src_startofpacket;                                                                    // id_router_015:src_startofpacket -> rsp_xbar_demux_015:sink_startofpacket
	wire  [95:0] id_router_015_src_data;                                                                             // id_router_015:src_data -> rsp_xbar_demux_015:sink_data
	wire  [16:0] id_router_015_src_channel;                                                                          // id_router_015:src_channel -> rsp_xbar_demux_015:sink_channel
	wire         id_router_015_src_ready;                                                                            // rsp_xbar_demux_015:sink_ready -> id_router_015:src_ready
	wire         tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                             // tt_timer_1_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_016:sink_endofpacket
	wire         tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                   // tt_timer_1_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_016:sink_valid
	wire         tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                           // tt_timer_1_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_016:sink_startofpacket
	wire  [95:0] tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rp_data;                                    // tt_timer_1_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_016:sink_data
	wire         tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                   // id_router_016:sink_ready -> tt_timer_1_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_016_src_endofpacket;                                                                      // id_router_016:src_endofpacket -> rsp_xbar_demux_016:sink_endofpacket
	wire         id_router_016_src_valid;                                                                            // id_router_016:src_valid -> rsp_xbar_demux_016:sink_valid
	wire         id_router_016_src_startofpacket;                                                                    // id_router_016:src_startofpacket -> rsp_xbar_demux_016:sink_startofpacket
	wire  [95:0] id_router_016_src_data;                                                                             // id_router_016:src_data -> rsp_xbar_demux_016:sink_data
	wire  [16:0] id_router_016_src_channel;                                                                          // id_router_016:src_channel -> rsp_xbar_demux_016:sink_channel
	wire         id_router_016_src_ready;                                                                            // rsp_xbar_demux_016:sink_ready -> id_router_016:src_ready
	wire         cmd_xbar_demux_src0_endofpacket;                                                                    // cmd_xbar_demux:src0_endofpacket -> cmd_xbar_mux:sink0_endofpacket
	wire         cmd_xbar_demux_src0_valid;                                                                          // cmd_xbar_demux:src0_valid -> cmd_xbar_mux:sink0_valid
	wire         cmd_xbar_demux_src0_startofpacket;                                                                  // cmd_xbar_demux:src0_startofpacket -> cmd_xbar_mux:sink0_startofpacket
	wire  [95:0] cmd_xbar_demux_src0_data;                                                                           // cmd_xbar_demux:src0_data -> cmd_xbar_mux:sink0_data
	wire  [16:0] cmd_xbar_demux_src0_channel;                                                                        // cmd_xbar_demux:src0_channel -> cmd_xbar_mux:sink0_channel
	wire         cmd_xbar_demux_src0_ready;                                                                          // cmd_xbar_mux:sink0_ready -> cmd_xbar_demux:src0_ready
	wire         cmd_xbar_demux_src1_endofpacket;                                                                    // cmd_xbar_demux:src1_endofpacket -> cmd_xbar_mux_001:sink0_endofpacket
	wire         cmd_xbar_demux_src1_valid;                                                                          // cmd_xbar_demux:src1_valid -> cmd_xbar_mux_001:sink0_valid
	wire         cmd_xbar_demux_src1_startofpacket;                                                                  // cmd_xbar_demux:src1_startofpacket -> cmd_xbar_mux_001:sink0_startofpacket
	wire  [95:0] cmd_xbar_demux_src1_data;                                                                           // cmd_xbar_demux:src1_data -> cmd_xbar_mux_001:sink0_data
	wire  [16:0] cmd_xbar_demux_src1_channel;                                                                        // cmd_xbar_demux:src1_channel -> cmd_xbar_mux_001:sink0_channel
	wire         cmd_xbar_demux_src1_ready;                                                                          // cmd_xbar_mux_001:sink0_ready -> cmd_xbar_demux:src1_ready
	wire         cmd_xbar_demux_001_src0_endofpacket;                                                                // cmd_xbar_demux_001:src0_endofpacket -> cmd_xbar_mux:sink1_endofpacket
	wire         cmd_xbar_demux_001_src0_valid;                                                                      // cmd_xbar_demux_001:src0_valid -> cmd_xbar_mux:sink1_valid
	wire         cmd_xbar_demux_001_src0_startofpacket;                                                              // cmd_xbar_demux_001:src0_startofpacket -> cmd_xbar_mux:sink1_startofpacket
	wire  [95:0] cmd_xbar_demux_001_src0_data;                                                                       // cmd_xbar_demux_001:src0_data -> cmd_xbar_mux:sink1_data
	wire  [16:0] cmd_xbar_demux_001_src0_channel;                                                                    // cmd_xbar_demux_001:src0_channel -> cmd_xbar_mux:sink1_channel
	wire         cmd_xbar_demux_001_src0_ready;                                                                      // cmd_xbar_mux:sink1_ready -> cmd_xbar_demux_001:src0_ready
	wire         cmd_xbar_demux_001_src1_endofpacket;                                                                // cmd_xbar_demux_001:src1_endofpacket -> cmd_xbar_mux_001:sink1_endofpacket
	wire         cmd_xbar_demux_001_src1_valid;                                                                      // cmd_xbar_demux_001:src1_valid -> cmd_xbar_mux_001:sink1_valid
	wire         cmd_xbar_demux_001_src1_startofpacket;                                                              // cmd_xbar_demux_001:src1_startofpacket -> cmd_xbar_mux_001:sink1_startofpacket
	wire  [95:0] cmd_xbar_demux_001_src1_data;                                                                       // cmd_xbar_demux_001:src1_data -> cmd_xbar_mux_001:sink1_data
	wire  [16:0] cmd_xbar_demux_001_src1_channel;                                                                    // cmd_xbar_demux_001:src1_channel -> cmd_xbar_mux_001:sink1_channel
	wire         cmd_xbar_demux_001_src1_ready;                                                                      // cmd_xbar_mux_001:sink1_ready -> cmd_xbar_demux_001:src1_ready
	wire         cmd_xbar_demux_001_src2_endofpacket;                                                                // cmd_xbar_demux_001:src2_endofpacket -> cmd_xbar_mux_002:sink0_endofpacket
	wire         cmd_xbar_demux_001_src2_valid;                                                                      // cmd_xbar_demux_001:src2_valid -> cmd_xbar_mux_002:sink0_valid
	wire         cmd_xbar_demux_001_src2_startofpacket;                                                              // cmd_xbar_demux_001:src2_startofpacket -> cmd_xbar_mux_002:sink0_startofpacket
	wire  [95:0] cmd_xbar_demux_001_src2_data;                                                                       // cmd_xbar_demux_001:src2_data -> cmd_xbar_mux_002:sink0_data
	wire  [16:0] cmd_xbar_demux_001_src2_channel;                                                                    // cmd_xbar_demux_001:src2_channel -> cmd_xbar_mux_002:sink0_channel
	wire         cmd_xbar_demux_001_src2_ready;                                                                      // cmd_xbar_mux_002:sink0_ready -> cmd_xbar_demux_001:src2_ready
	wire         cmd_xbar_demux_001_src3_endofpacket;                                                                // cmd_xbar_demux_001:src3_endofpacket -> cmd_xbar_mux_003:sink0_endofpacket
	wire         cmd_xbar_demux_001_src3_valid;                                                                      // cmd_xbar_demux_001:src3_valid -> cmd_xbar_mux_003:sink0_valid
	wire         cmd_xbar_demux_001_src3_startofpacket;                                                              // cmd_xbar_demux_001:src3_startofpacket -> cmd_xbar_mux_003:sink0_startofpacket
	wire  [95:0] cmd_xbar_demux_001_src3_data;                                                                       // cmd_xbar_demux_001:src3_data -> cmd_xbar_mux_003:sink0_data
	wire  [16:0] cmd_xbar_demux_001_src3_channel;                                                                    // cmd_xbar_demux_001:src3_channel -> cmd_xbar_mux_003:sink0_channel
	wire         cmd_xbar_demux_001_src3_ready;                                                                      // cmd_xbar_mux_003:sink0_ready -> cmd_xbar_demux_001:src3_ready
	wire         cmd_xbar_demux_001_src4_endofpacket;                                                                // cmd_xbar_demux_001:src4_endofpacket -> cmd_xbar_mux_004:sink0_endofpacket
	wire         cmd_xbar_demux_001_src4_valid;                                                                      // cmd_xbar_demux_001:src4_valid -> cmd_xbar_mux_004:sink0_valid
	wire         cmd_xbar_demux_001_src4_startofpacket;                                                              // cmd_xbar_demux_001:src4_startofpacket -> cmd_xbar_mux_004:sink0_startofpacket
	wire  [95:0] cmd_xbar_demux_001_src4_data;                                                                       // cmd_xbar_demux_001:src4_data -> cmd_xbar_mux_004:sink0_data
	wire  [16:0] cmd_xbar_demux_001_src4_channel;                                                                    // cmd_xbar_demux_001:src4_channel -> cmd_xbar_mux_004:sink0_channel
	wire         cmd_xbar_demux_001_src4_ready;                                                                      // cmd_xbar_mux_004:sink0_ready -> cmd_xbar_demux_001:src4_ready
	wire         cmd_xbar_demux_001_src5_endofpacket;                                                                // cmd_xbar_demux_001:src5_endofpacket -> cmd_xbar_mux_005:sink0_endofpacket
	wire         cmd_xbar_demux_001_src5_valid;                                                                      // cmd_xbar_demux_001:src5_valid -> cmd_xbar_mux_005:sink0_valid
	wire         cmd_xbar_demux_001_src5_startofpacket;                                                              // cmd_xbar_demux_001:src5_startofpacket -> cmd_xbar_mux_005:sink0_startofpacket
	wire  [95:0] cmd_xbar_demux_001_src5_data;                                                                       // cmd_xbar_demux_001:src5_data -> cmd_xbar_mux_005:sink0_data
	wire  [16:0] cmd_xbar_demux_001_src5_channel;                                                                    // cmd_xbar_demux_001:src5_channel -> cmd_xbar_mux_005:sink0_channel
	wire         cmd_xbar_demux_001_src5_ready;                                                                      // cmd_xbar_mux_005:sink0_ready -> cmd_xbar_demux_001:src5_ready
	wire         cmd_xbar_demux_001_src6_endofpacket;                                                                // cmd_xbar_demux_001:src6_endofpacket -> cmd_xbar_mux_006:sink0_endofpacket
	wire         cmd_xbar_demux_001_src6_valid;                                                                      // cmd_xbar_demux_001:src6_valid -> cmd_xbar_mux_006:sink0_valid
	wire         cmd_xbar_demux_001_src6_startofpacket;                                                              // cmd_xbar_demux_001:src6_startofpacket -> cmd_xbar_mux_006:sink0_startofpacket
	wire  [95:0] cmd_xbar_demux_001_src6_data;                                                                       // cmd_xbar_demux_001:src6_data -> cmd_xbar_mux_006:sink0_data
	wire  [16:0] cmd_xbar_demux_001_src6_channel;                                                                    // cmd_xbar_demux_001:src6_channel -> cmd_xbar_mux_006:sink0_channel
	wire         cmd_xbar_demux_001_src6_ready;                                                                      // cmd_xbar_mux_006:sink0_ready -> cmd_xbar_demux_001:src6_ready
	wire         cmd_xbar_demux_001_src7_endofpacket;                                                                // cmd_xbar_demux_001:src7_endofpacket -> cmd_xbar_mux_007:sink0_endofpacket
	wire         cmd_xbar_demux_001_src7_valid;                                                                      // cmd_xbar_demux_001:src7_valid -> cmd_xbar_mux_007:sink0_valid
	wire         cmd_xbar_demux_001_src7_startofpacket;                                                              // cmd_xbar_demux_001:src7_startofpacket -> cmd_xbar_mux_007:sink0_startofpacket
	wire  [95:0] cmd_xbar_demux_001_src7_data;                                                                       // cmd_xbar_demux_001:src7_data -> cmd_xbar_mux_007:sink0_data
	wire  [16:0] cmd_xbar_demux_001_src7_channel;                                                                    // cmd_xbar_demux_001:src7_channel -> cmd_xbar_mux_007:sink0_channel
	wire         cmd_xbar_demux_001_src7_ready;                                                                      // cmd_xbar_mux_007:sink0_ready -> cmd_xbar_demux_001:src7_ready
	wire         cmd_xbar_demux_001_src8_endofpacket;                                                                // cmd_xbar_demux_001:src8_endofpacket -> cmd_xbar_mux_008:sink0_endofpacket
	wire         cmd_xbar_demux_001_src8_valid;                                                                      // cmd_xbar_demux_001:src8_valid -> cmd_xbar_mux_008:sink0_valid
	wire         cmd_xbar_demux_001_src8_startofpacket;                                                              // cmd_xbar_demux_001:src8_startofpacket -> cmd_xbar_mux_008:sink0_startofpacket
	wire  [95:0] cmd_xbar_demux_001_src8_data;                                                                       // cmd_xbar_demux_001:src8_data -> cmd_xbar_mux_008:sink0_data
	wire  [16:0] cmd_xbar_demux_001_src8_channel;                                                                    // cmd_xbar_demux_001:src8_channel -> cmd_xbar_mux_008:sink0_channel
	wire         cmd_xbar_demux_001_src8_ready;                                                                      // cmd_xbar_mux_008:sink0_ready -> cmd_xbar_demux_001:src8_ready
	wire         cmd_xbar_demux_001_src9_endofpacket;                                                                // cmd_xbar_demux_001:src9_endofpacket -> cmd_xbar_mux_009:sink0_endofpacket
	wire         cmd_xbar_demux_001_src9_valid;                                                                      // cmd_xbar_demux_001:src9_valid -> cmd_xbar_mux_009:sink0_valid
	wire         cmd_xbar_demux_001_src9_startofpacket;                                                              // cmd_xbar_demux_001:src9_startofpacket -> cmd_xbar_mux_009:sink0_startofpacket
	wire  [95:0] cmd_xbar_demux_001_src9_data;                                                                       // cmd_xbar_demux_001:src9_data -> cmd_xbar_mux_009:sink0_data
	wire  [16:0] cmd_xbar_demux_001_src9_channel;                                                                    // cmd_xbar_demux_001:src9_channel -> cmd_xbar_mux_009:sink0_channel
	wire         cmd_xbar_demux_001_src9_ready;                                                                      // cmd_xbar_mux_009:sink0_ready -> cmd_xbar_demux_001:src9_ready
	wire         cmd_xbar_demux_001_src10_endofpacket;                                                               // cmd_xbar_demux_001:src10_endofpacket -> cmd_xbar_mux_010:sink0_endofpacket
	wire         cmd_xbar_demux_001_src10_valid;                                                                     // cmd_xbar_demux_001:src10_valid -> cmd_xbar_mux_010:sink0_valid
	wire         cmd_xbar_demux_001_src10_startofpacket;                                                             // cmd_xbar_demux_001:src10_startofpacket -> cmd_xbar_mux_010:sink0_startofpacket
	wire  [95:0] cmd_xbar_demux_001_src10_data;                                                                      // cmd_xbar_demux_001:src10_data -> cmd_xbar_mux_010:sink0_data
	wire  [16:0] cmd_xbar_demux_001_src10_channel;                                                                   // cmd_xbar_demux_001:src10_channel -> cmd_xbar_mux_010:sink0_channel
	wire         cmd_xbar_demux_001_src10_ready;                                                                     // cmd_xbar_mux_010:sink0_ready -> cmd_xbar_demux_001:src10_ready
	wire         cmd_xbar_demux_001_src11_endofpacket;                                                               // cmd_xbar_demux_001:src11_endofpacket -> cmd_xbar_mux_011:sink0_endofpacket
	wire         cmd_xbar_demux_001_src11_valid;                                                                     // cmd_xbar_demux_001:src11_valid -> cmd_xbar_mux_011:sink0_valid
	wire         cmd_xbar_demux_001_src11_startofpacket;                                                             // cmd_xbar_demux_001:src11_startofpacket -> cmd_xbar_mux_011:sink0_startofpacket
	wire  [95:0] cmd_xbar_demux_001_src11_data;                                                                      // cmd_xbar_demux_001:src11_data -> cmd_xbar_mux_011:sink0_data
	wire  [16:0] cmd_xbar_demux_001_src11_channel;                                                                   // cmd_xbar_demux_001:src11_channel -> cmd_xbar_mux_011:sink0_channel
	wire         cmd_xbar_demux_001_src11_ready;                                                                     // cmd_xbar_mux_011:sink0_ready -> cmd_xbar_demux_001:src11_ready
	wire         cmd_xbar_demux_002_src0_endofpacket;                                                                // cmd_xbar_demux_002:src0_endofpacket -> cmd_xbar_mux_002:sink1_endofpacket
	wire         cmd_xbar_demux_002_src0_valid;                                                                      // cmd_xbar_demux_002:src0_valid -> cmd_xbar_mux_002:sink1_valid
	wire         cmd_xbar_demux_002_src0_startofpacket;                                                              // cmd_xbar_demux_002:src0_startofpacket -> cmd_xbar_mux_002:sink1_startofpacket
	wire  [95:0] cmd_xbar_demux_002_src0_data;                                                                       // cmd_xbar_demux_002:src0_data -> cmd_xbar_mux_002:sink1_data
	wire  [16:0] cmd_xbar_demux_002_src0_channel;                                                                    // cmd_xbar_demux_002:src0_channel -> cmd_xbar_mux_002:sink1_channel
	wire         cmd_xbar_demux_002_src0_ready;                                                                      // cmd_xbar_mux_002:sink1_ready -> cmd_xbar_demux_002:src0_ready
	wire         cmd_xbar_demux_002_src1_endofpacket;                                                                // cmd_xbar_demux_002:src1_endofpacket -> cmd_xbar_mux_003:sink1_endofpacket
	wire         cmd_xbar_demux_002_src1_valid;                                                                      // cmd_xbar_demux_002:src1_valid -> cmd_xbar_mux_003:sink1_valid
	wire         cmd_xbar_demux_002_src1_startofpacket;                                                              // cmd_xbar_demux_002:src1_startofpacket -> cmd_xbar_mux_003:sink1_startofpacket
	wire  [95:0] cmd_xbar_demux_002_src1_data;                                                                       // cmd_xbar_demux_002:src1_data -> cmd_xbar_mux_003:sink1_data
	wire  [16:0] cmd_xbar_demux_002_src1_channel;                                                                    // cmd_xbar_demux_002:src1_channel -> cmd_xbar_mux_003:sink1_channel
	wire         cmd_xbar_demux_002_src1_ready;                                                                      // cmd_xbar_mux_003:sink1_ready -> cmd_xbar_demux_002:src1_ready
	wire         cmd_xbar_demux_002_src2_endofpacket;                                                                // cmd_xbar_demux_002:src2_endofpacket -> cmd_xbar_mux_012:sink0_endofpacket
	wire         cmd_xbar_demux_002_src2_valid;                                                                      // cmd_xbar_demux_002:src2_valid -> cmd_xbar_mux_012:sink0_valid
	wire         cmd_xbar_demux_002_src2_startofpacket;                                                              // cmd_xbar_demux_002:src2_startofpacket -> cmd_xbar_mux_012:sink0_startofpacket
	wire  [95:0] cmd_xbar_demux_002_src2_data;                                                                       // cmd_xbar_demux_002:src2_data -> cmd_xbar_mux_012:sink0_data
	wire  [16:0] cmd_xbar_demux_002_src2_channel;                                                                    // cmd_xbar_demux_002:src2_channel -> cmd_xbar_mux_012:sink0_channel
	wire         cmd_xbar_demux_002_src2_ready;                                                                      // cmd_xbar_mux_012:sink0_ready -> cmd_xbar_demux_002:src2_ready
	wire         cmd_xbar_demux_002_src3_endofpacket;                                                                // cmd_xbar_demux_002:src3_endofpacket -> cmd_xbar_mux_013:sink0_endofpacket
	wire         cmd_xbar_demux_002_src3_valid;                                                                      // cmd_xbar_demux_002:src3_valid -> cmd_xbar_mux_013:sink0_valid
	wire         cmd_xbar_demux_002_src3_startofpacket;                                                              // cmd_xbar_demux_002:src3_startofpacket -> cmd_xbar_mux_013:sink0_startofpacket
	wire  [95:0] cmd_xbar_demux_002_src3_data;                                                                       // cmd_xbar_demux_002:src3_data -> cmd_xbar_mux_013:sink0_data
	wire  [16:0] cmd_xbar_demux_002_src3_channel;                                                                    // cmd_xbar_demux_002:src3_channel -> cmd_xbar_mux_013:sink0_channel
	wire         cmd_xbar_demux_002_src3_ready;                                                                      // cmd_xbar_mux_013:sink0_ready -> cmd_xbar_demux_002:src3_ready
	wire         cmd_xbar_demux_002_src4_endofpacket;                                                                // cmd_xbar_demux_002:src4_endofpacket -> cmd_xbar_mux_014:sink0_endofpacket
	wire         cmd_xbar_demux_002_src4_valid;                                                                      // cmd_xbar_demux_002:src4_valid -> cmd_xbar_mux_014:sink0_valid
	wire         cmd_xbar_demux_002_src4_startofpacket;                                                              // cmd_xbar_demux_002:src4_startofpacket -> cmd_xbar_mux_014:sink0_startofpacket
	wire  [95:0] cmd_xbar_demux_002_src4_data;                                                                       // cmd_xbar_demux_002:src4_data -> cmd_xbar_mux_014:sink0_data
	wire  [16:0] cmd_xbar_demux_002_src4_channel;                                                                    // cmd_xbar_demux_002:src4_channel -> cmd_xbar_mux_014:sink0_channel
	wire         cmd_xbar_demux_002_src4_ready;                                                                      // cmd_xbar_mux_014:sink0_ready -> cmd_xbar_demux_002:src4_ready
	wire         cmd_xbar_demux_002_src5_endofpacket;                                                                // cmd_xbar_demux_002:src5_endofpacket -> cmd_xbar_mux_015:sink0_endofpacket
	wire         cmd_xbar_demux_002_src5_valid;                                                                      // cmd_xbar_demux_002:src5_valid -> cmd_xbar_mux_015:sink0_valid
	wire         cmd_xbar_demux_002_src5_startofpacket;                                                              // cmd_xbar_demux_002:src5_startofpacket -> cmd_xbar_mux_015:sink0_startofpacket
	wire  [95:0] cmd_xbar_demux_002_src5_data;                                                                       // cmd_xbar_demux_002:src5_data -> cmd_xbar_mux_015:sink0_data
	wire  [16:0] cmd_xbar_demux_002_src5_channel;                                                                    // cmd_xbar_demux_002:src5_channel -> cmd_xbar_mux_015:sink0_channel
	wire         cmd_xbar_demux_002_src5_ready;                                                                      // cmd_xbar_mux_015:sink0_ready -> cmd_xbar_demux_002:src5_ready
	wire         cmd_xbar_demux_002_src6_endofpacket;                                                                // cmd_xbar_demux_002:src6_endofpacket -> cmd_xbar_mux_016:sink0_endofpacket
	wire         cmd_xbar_demux_002_src6_valid;                                                                      // cmd_xbar_demux_002:src6_valid -> cmd_xbar_mux_016:sink0_valid
	wire         cmd_xbar_demux_002_src6_startofpacket;                                                              // cmd_xbar_demux_002:src6_startofpacket -> cmd_xbar_mux_016:sink0_startofpacket
	wire  [95:0] cmd_xbar_demux_002_src6_data;                                                                       // cmd_xbar_demux_002:src6_data -> cmd_xbar_mux_016:sink0_data
	wire  [16:0] cmd_xbar_demux_002_src6_channel;                                                                    // cmd_xbar_demux_002:src6_channel -> cmd_xbar_mux_016:sink0_channel
	wire         cmd_xbar_demux_002_src6_ready;                                                                      // cmd_xbar_mux_016:sink0_ready -> cmd_xbar_demux_002:src6_ready
	wire         cmd_xbar_demux_003_src0_endofpacket;                                                                // cmd_xbar_demux_003:src0_endofpacket -> cmd_xbar_mux_012:sink1_endofpacket
	wire         cmd_xbar_demux_003_src0_valid;                                                                      // cmd_xbar_demux_003:src0_valid -> cmd_xbar_mux_012:sink1_valid
	wire         cmd_xbar_demux_003_src0_startofpacket;                                                              // cmd_xbar_demux_003:src0_startofpacket -> cmd_xbar_mux_012:sink1_startofpacket
	wire  [95:0] cmd_xbar_demux_003_src0_data;                                                                       // cmd_xbar_demux_003:src0_data -> cmd_xbar_mux_012:sink1_data
	wire  [16:0] cmd_xbar_demux_003_src0_channel;                                                                    // cmd_xbar_demux_003:src0_channel -> cmd_xbar_mux_012:sink1_channel
	wire         cmd_xbar_demux_003_src0_ready;                                                                      // cmd_xbar_mux_012:sink1_ready -> cmd_xbar_demux_003:src0_ready
	wire         cmd_xbar_demux_003_src1_endofpacket;                                                                // cmd_xbar_demux_003:src1_endofpacket -> cmd_xbar_mux_015:sink1_endofpacket
	wire         cmd_xbar_demux_003_src1_valid;                                                                      // cmd_xbar_demux_003:src1_valid -> cmd_xbar_mux_015:sink1_valid
	wire         cmd_xbar_demux_003_src1_startofpacket;                                                              // cmd_xbar_demux_003:src1_startofpacket -> cmd_xbar_mux_015:sink1_startofpacket
	wire  [95:0] cmd_xbar_demux_003_src1_data;                                                                       // cmd_xbar_demux_003:src1_data -> cmd_xbar_mux_015:sink1_data
	wire  [16:0] cmd_xbar_demux_003_src1_channel;                                                                    // cmd_xbar_demux_003:src1_channel -> cmd_xbar_mux_015:sink1_channel
	wire         cmd_xbar_demux_003_src1_ready;                                                                      // cmd_xbar_mux_015:sink1_ready -> cmd_xbar_demux_003:src1_ready
	wire         rsp_xbar_demux_src0_endofpacket;                                                                    // rsp_xbar_demux:src0_endofpacket -> rsp_xbar_mux:sink0_endofpacket
	wire         rsp_xbar_demux_src0_valid;                                                                          // rsp_xbar_demux:src0_valid -> rsp_xbar_mux:sink0_valid
	wire         rsp_xbar_demux_src0_startofpacket;                                                                  // rsp_xbar_demux:src0_startofpacket -> rsp_xbar_mux:sink0_startofpacket
	wire  [95:0] rsp_xbar_demux_src0_data;                                                                           // rsp_xbar_demux:src0_data -> rsp_xbar_mux:sink0_data
	wire  [16:0] rsp_xbar_demux_src0_channel;                                                                        // rsp_xbar_demux:src0_channel -> rsp_xbar_mux:sink0_channel
	wire         rsp_xbar_demux_src0_ready;                                                                          // rsp_xbar_mux:sink0_ready -> rsp_xbar_demux:src0_ready
	wire         rsp_xbar_demux_src1_endofpacket;                                                                    // rsp_xbar_demux:src1_endofpacket -> rsp_xbar_mux_001:sink0_endofpacket
	wire         rsp_xbar_demux_src1_valid;                                                                          // rsp_xbar_demux:src1_valid -> rsp_xbar_mux_001:sink0_valid
	wire         rsp_xbar_demux_src1_startofpacket;                                                                  // rsp_xbar_demux:src1_startofpacket -> rsp_xbar_mux_001:sink0_startofpacket
	wire  [95:0] rsp_xbar_demux_src1_data;                                                                           // rsp_xbar_demux:src1_data -> rsp_xbar_mux_001:sink0_data
	wire  [16:0] rsp_xbar_demux_src1_channel;                                                                        // rsp_xbar_demux:src1_channel -> rsp_xbar_mux_001:sink0_channel
	wire         rsp_xbar_demux_src1_ready;                                                                          // rsp_xbar_mux_001:sink0_ready -> rsp_xbar_demux:src1_ready
	wire         rsp_xbar_demux_001_src0_endofpacket;                                                                // rsp_xbar_demux_001:src0_endofpacket -> rsp_xbar_mux:sink1_endofpacket
	wire         rsp_xbar_demux_001_src0_valid;                                                                      // rsp_xbar_demux_001:src0_valid -> rsp_xbar_mux:sink1_valid
	wire         rsp_xbar_demux_001_src0_startofpacket;                                                              // rsp_xbar_demux_001:src0_startofpacket -> rsp_xbar_mux:sink1_startofpacket
	wire  [95:0] rsp_xbar_demux_001_src0_data;                                                                       // rsp_xbar_demux_001:src0_data -> rsp_xbar_mux:sink1_data
	wire  [16:0] rsp_xbar_demux_001_src0_channel;                                                                    // rsp_xbar_demux_001:src0_channel -> rsp_xbar_mux:sink1_channel
	wire         rsp_xbar_demux_001_src0_ready;                                                                      // rsp_xbar_mux:sink1_ready -> rsp_xbar_demux_001:src0_ready
	wire         rsp_xbar_demux_001_src1_endofpacket;                                                                // rsp_xbar_demux_001:src1_endofpacket -> rsp_xbar_mux_001:sink1_endofpacket
	wire         rsp_xbar_demux_001_src1_valid;                                                                      // rsp_xbar_demux_001:src1_valid -> rsp_xbar_mux_001:sink1_valid
	wire         rsp_xbar_demux_001_src1_startofpacket;                                                              // rsp_xbar_demux_001:src1_startofpacket -> rsp_xbar_mux_001:sink1_startofpacket
	wire  [95:0] rsp_xbar_demux_001_src1_data;                                                                       // rsp_xbar_demux_001:src1_data -> rsp_xbar_mux_001:sink1_data
	wire  [16:0] rsp_xbar_demux_001_src1_channel;                                                                    // rsp_xbar_demux_001:src1_channel -> rsp_xbar_mux_001:sink1_channel
	wire         rsp_xbar_demux_001_src1_ready;                                                                      // rsp_xbar_mux_001:sink1_ready -> rsp_xbar_demux_001:src1_ready
	wire         rsp_xbar_demux_002_src0_endofpacket;                                                                // rsp_xbar_demux_002:src0_endofpacket -> rsp_xbar_mux_001:sink2_endofpacket
	wire         rsp_xbar_demux_002_src0_valid;                                                                      // rsp_xbar_demux_002:src0_valid -> rsp_xbar_mux_001:sink2_valid
	wire         rsp_xbar_demux_002_src0_startofpacket;                                                              // rsp_xbar_demux_002:src0_startofpacket -> rsp_xbar_mux_001:sink2_startofpacket
	wire  [95:0] rsp_xbar_demux_002_src0_data;                                                                       // rsp_xbar_demux_002:src0_data -> rsp_xbar_mux_001:sink2_data
	wire  [16:0] rsp_xbar_demux_002_src0_channel;                                                                    // rsp_xbar_demux_002:src0_channel -> rsp_xbar_mux_001:sink2_channel
	wire         rsp_xbar_demux_002_src0_ready;                                                                      // rsp_xbar_mux_001:sink2_ready -> rsp_xbar_demux_002:src0_ready
	wire         rsp_xbar_demux_002_src1_endofpacket;                                                                // rsp_xbar_demux_002:src1_endofpacket -> rsp_xbar_mux_002:sink0_endofpacket
	wire         rsp_xbar_demux_002_src1_valid;                                                                      // rsp_xbar_demux_002:src1_valid -> rsp_xbar_mux_002:sink0_valid
	wire         rsp_xbar_demux_002_src1_startofpacket;                                                              // rsp_xbar_demux_002:src1_startofpacket -> rsp_xbar_mux_002:sink0_startofpacket
	wire  [95:0] rsp_xbar_demux_002_src1_data;                                                                       // rsp_xbar_demux_002:src1_data -> rsp_xbar_mux_002:sink0_data
	wire  [16:0] rsp_xbar_demux_002_src1_channel;                                                                    // rsp_xbar_demux_002:src1_channel -> rsp_xbar_mux_002:sink0_channel
	wire         rsp_xbar_demux_002_src1_ready;                                                                      // rsp_xbar_mux_002:sink0_ready -> rsp_xbar_demux_002:src1_ready
	wire         rsp_xbar_demux_003_src0_endofpacket;                                                                // rsp_xbar_demux_003:src0_endofpacket -> rsp_xbar_mux_001:sink3_endofpacket
	wire         rsp_xbar_demux_003_src0_valid;                                                                      // rsp_xbar_demux_003:src0_valid -> rsp_xbar_mux_001:sink3_valid
	wire         rsp_xbar_demux_003_src0_startofpacket;                                                              // rsp_xbar_demux_003:src0_startofpacket -> rsp_xbar_mux_001:sink3_startofpacket
	wire  [95:0] rsp_xbar_demux_003_src0_data;                                                                       // rsp_xbar_demux_003:src0_data -> rsp_xbar_mux_001:sink3_data
	wire  [16:0] rsp_xbar_demux_003_src0_channel;                                                                    // rsp_xbar_demux_003:src0_channel -> rsp_xbar_mux_001:sink3_channel
	wire         rsp_xbar_demux_003_src0_ready;                                                                      // rsp_xbar_mux_001:sink3_ready -> rsp_xbar_demux_003:src0_ready
	wire         rsp_xbar_demux_003_src1_endofpacket;                                                                // rsp_xbar_demux_003:src1_endofpacket -> rsp_xbar_mux_002:sink1_endofpacket
	wire         rsp_xbar_demux_003_src1_valid;                                                                      // rsp_xbar_demux_003:src1_valid -> rsp_xbar_mux_002:sink1_valid
	wire         rsp_xbar_demux_003_src1_startofpacket;                                                              // rsp_xbar_demux_003:src1_startofpacket -> rsp_xbar_mux_002:sink1_startofpacket
	wire  [95:0] rsp_xbar_demux_003_src1_data;                                                                       // rsp_xbar_demux_003:src1_data -> rsp_xbar_mux_002:sink1_data
	wire  [16:0] rsp_xbar_demux_003_src1_channel;                                                                    // rsp_xbar_demux_003:src1_channel -> rsp_xbar_mux_002:sink1_channel
	wire         rsp_xbar_demux_003_src1_ready;                                                                      // rsp_xbar_mux_002:sink1_ready -> rsp_xbar_demux_003:src1_ready
	wire         rsp_xbar_demux_004_src0_endofpacket;                                                                // rsp_xbar_demux_004:src0_endofpacket -> rsp_xbar_mux_001:sink4_endofpacket
	wire         rsp_xbar_demux_004_src0_valid;                                                                      // rsp_xbar_demux_004:src0_valid -> rsp_xbar_mux_001:sink4_valid
	wire         rsp_xbar_demux_004_src0_startofpacket;                                                              // rsp_xbar_demux_004:src0_startofpacket -> rsp_xbar_mux_001:sink4_startofpacket
	wire  [95:0] rsp_xbar_demux_004_src0_data;                                                                       // rsp_xbar_demux_004:src0_data -> rsp_xbar_mux_001:sink4_data
	wire  [16:0] rsp_xbar_demux_004_src0_channel;                                                                    // rsp_xbar_demux_004:src0_channel -> rsp_xbar_mux_001:sink4_channel
	wire         rsp_xbar_demux_004_src0_ready;                                                                      // rsp_xbar_mux_001:sink4_ready -> rsp_xbar_demux_004:src0_ready
	wire         rsp_xbar_demux_005_src0_endofpacket;                                                                // rsp_xbar_demux_005:src0_endofpacket -> rsp_xbar_mux_001:sink5_endofpacket
	wire         rsp_xbar_demux_005_src0_valid;                                                                      // rsp_xbar_demux_005:src0_valid -> rsp_xbar_mux_001:sink5_valid
	wire         rsp_xbar_demux_005_src0_startofpacket;                                                              // rsp_xbar_demux_005:src0_startofpacket -> rsp_xbar_mux_001:sink5_startofpacket
	wire  [95:0] rsp_xbar_demux_005_src0_data;                                                                       // rsp_xbar_demux_005:src0_data -> rsp_xbar_mux_001:sink5_data
	wire  [16:0] rsp_xbar_demux_005_src0_channel;                                                                    // rsp_xbar_demux_005:src0_channel -> rsp_xbar_mux_001:sink5_channel
	wire         rsp_xbar_demux_005_src0_ready;                                                                      // rsp_xbar_mux_001:sink5_ready -> rsp_xbar_demux_005:src0_ready
	wire         rsp_xbar_demux_006_src0_endofpacket;                                                                // rsp_xbar_demux_006:src0_endofpacket -> rsp_xbar_mux_001:sink6_endofpacket
	wire         rsp_xbar_demux_006_src0_valid;                                                                      // rsp_xbar_demux_006:src0_valid -> rsp_xbar_mux_001:sink6_valid
	wire         rsp_xbar_demux_006_src0_startofpacket;                                                              // rsp_xbar_demux_006:src0_startofpacket -> rsp_xbar_mux_001:sink6_startofpacket
	wire  [95:0] rsp_xbar_demux_006_src0_data;                                                                       // rsp_xbar_demux_006:src0_data -> rsp_xbar_mux_001:sink6_data
	wire  [16:0] rsp_xbar_demux_006_src0_channel;                                                                    // rsp_xbar_demux_006:src0_channel -> rsp_xbar_mux_001:sink6_channel
	wire         rsp_xbar_demux_006_src0_ready;                                                                      // rsp_xbar_mux_001:sink6_ready -> rsp_xbar_demux_006:src0_ready
	wire         rsp_xbar_demux_007_src0_endofpacket;                                                                // rsp_xbar_demux_007:src0_endofpacket -> rsp_xbar_mux_001:sink7_endofpacket
	wire         rsp_xbar_demux_007_src0_valid;                                                                      // rsp_xbar_demux_007:src0_valid -> rsp_xbar_mux_001:sink7_valid
	wire         rsp_xbar_demux_007_src0_startofpacket;                                                              // rsp_xbar_demux_007:src0_startofpacket -> rsp_xbar_mux_001:sink7_startofpacket
	wire  [95:0] rsp_xbar_demux_007_src0_data;                                                                       // rsp_xbar_demux_007:src0_data -> rsp_xbar_mux_001:sink7_data
	wire  [16:0] rsp_xbar_demux_007_src0_channel;                                                                    // rsp_xbar_demux_007:src0_channel -> rsp_xbar_mux_001:sink7_channel
	wire         rsp_xbar_demux_007_src0_ready;                                                                      // rsp_xbar_mux_001:sink7_ready -> rsp_xbar_demux_007:src0_ready
	wire         rsp_xbar_demux_008_src0_endofpacket;                                                                // rsp_xbar_demux_008:src0_endofpacket -> rsp_xbar_mux_001:sink8_endofpacket
	wire         rsp_xbar_demux_008_src0_valid;                                                                      // rsp_xbar_demux_008:src0_valid -> rsp_xbar_mux_001:sink8_valid
	wire         rsp_xbar_demux_008_src0_startofpacket;                                                              // rsp_xbar_demux_008:src0_startofpacket -> rsp_xbar_mux_001:sink8_startofpacket
	wire  [95:0] rsp_xbar_demux_008_src0_data;                                                                       // rsp_xbar_demux_008:src0_data -> rsp_xbar_mux_001:sink8_data
	wire  [16:0] rsp_xbar_demux_008_src0_channel;                                                                    // rsp_xbar_demux_008:src0_channel -> rsp_xbar_mux_001:sink8_channel
	wire         rsp_xbar_demux_008_src0_ready;                                                                      // rsp_xbar_mux_001:sink8_ready -> rsp_xbar_demux_008:src0_ready
	wire         rsp_xbar_demux_009_src0_endofpacket;                                                                // rsp_xbar_demux_009:src0_endofpacket -> rsp_xbar_mux_001:sink9_endofpacket
	wire         rsp_xbar_demux_009_src0_valid;                                                                      // rsp_xbar_demux_009:src0_valid -> rsp_xbar_mux_001:sink9_valid
	wire         rsp_xbar_demux_009_src0_startofpacket;                                                              // rsp_xbar_demux_009:src0_startofpacket -> rsp_xbar_mux_001:sink9_startofpacket
	wire  [95:0] rsp_xbar_demux_009_src0_data;                                                                       // rsp_xbar_demux_009:src0_data -> rsp_xbar_mux_001:sink9_data
	wire  [16:0] rsp_xbar_demux_009_src0_channel;                                                                    // rsp_xbar_demux_009:src0_channel -> rsp_xbar_mux_001:sink9_channel
	wire         rsp_xbar_demux_009_src0_ready;                                                                      // rsp_xbar_mux_001:sink9_ready -> rsp_xbar_demux_009:src0_ready
	wire         rsp_xbar_demux_010_src0_endofpacket;                                                                // rsp_xbar_demux_010:src0_endofpacket -> rsp_xbar_mux_001:sink10_endofpacket
	wire         rsp_xbar_demux_010_src0_valid;                                                                      // rsp_xbar_demux_010:src0_valid -> rsp_xbar_mux_001:sink10_valid
	wire         rsp_xbar_demux_010_src0_startofpacket;                                                              // rsp_xbar_demux_010:src0_startofpacket -> rsp_xbar_mux_001:sink10_startofpacket
	wire  [95:0] rsp_xbar_demux_010_src0_data;                                                                       // rsp_xbar_demux_010:src0_data -> rsp_xbar_mux_001:sink10_data
	wire  [16:0] rsp_xbar_demux_010_src0_channel;                                                                    // rsp_xbar_demux_010:src0_channel -> rsp_xbar_mux_001:sink10_channel
	wire         rsp_xbar_demux_010_src0_ready;                                                                      // rsp_xbar_mux_001:sink10_ready -> rsp_xbar_demux_010:src0_ready
	wire         rsp_xbar_demux_011_src0_endofpacket;                                                                // rsp_xbar_demux_011:src0_endofpacket -> rsp_xbar_mux_001:sink11_endofpacket
	wire         rsp_xbar_demux_011_src0_valid;                                                                      // rsp_xbar_demux_011:src0_valid -> rsp_xbar_mux_001:sink11_valid
	wire         rsp_xbar_demux_011_src0_startofpacket;                                                              // rsp_xbar_demux_011:src0_startofpacket -> rsp_xbar_mux_001:sink11_startofpacket
	wire  [95:0] rsp_xbar_demux_011_src0_data;                                                                       // rsp_xbar_demux_011:src0_data -> rsp_xbar_mux_001:sink11_data
	wire  [16:0] rsp_xbar_demux_011_src0_channel;                                                                    // rsp_xbar_demux_011:src0_channel -> rsp_xbar_mux_001:sink11_channel
	wire         rsp_xbar_demux_011_src0_ready;                                                                      // rsp_xbar_mux_001:sink11_ready -> rsp_xbar_demux_011:src0_ready
	wire         rsp_xbar_demux_012_src0_endofpacket;                                                                // rsp_xbar_demux_012:src0_endofpacket -> rsp_xbar_mux_002:sink2_endofpacket
	wire         rsp_xbar_demux_012_src0_valid;                                                                      // rsp_xbar_demux_012:src0_valid -> rsp_xbar_mux_002:sink2_valid
	wire         rsp_xbar_demux_012_src0_startofpacket;                                                              // rsp_xbar_demux_012:src0_startofpacket -> rsp_xbar_mux_002:sink2_startofpacket
	wire  [95:0] rsp_xbar_demux_012_src0_data;                                                                       // rsp_xbar_demux_012:src0_data -> rsp_xbar_mux_002:sink2_data
	wire  [16:0] rsp_xbar_demux_012_src0_channel;                                                                    // rsp_xbar_demux_012:src0_channel -> rsp_xbar_mux_002:sink2_channel
	wire         rsp_xbar_demux_012_src0_ready;                                                                      // rsp_xbar_mux_002:sink2_ready -> rsp_xbar_demux_012:src0_ready
	wire         rsp_xbar_demux_012_src1_endofpacket;                                                                // rsp_xbar_demux_012:src1_endofpacket -> rsp_xbar_mux_003:sink0_endofpacket
	wire         rsp_xbar_demux_012_src1_valid;                                                                      // rsp_xbar_demux_012:src1_valid -> rsp_xbar_mux_003:sink0_valid
	wire         rsp_xbar_demux_012_src1_startofpacket;                                                              // rsp_xbar_demux_012:src1_startofpacket -> rsp_xbar_mux_003:sink0_startofpacket
	wire  [95:0] rsp_xbar_demux_012_src1_data;                                                                       // rsp_xbar_demux_012:src1_data -> rsp_xbar_mux_003:sink0_data
	wire  [16:0] rsp_xbar_demux_012_src1_channel;                                                                    // rsp_xbar_demux_012:src1_channel -> rsp_xbar_mux_003:sink0_channel
	wire         rsp_xbar_demux_012_src1_ready;                                                                      // rsp_xbar_mux_003:sink0_ready -> rsp_xbar_demux_012:src1_ready
	wire         rsp_xbar_demux_013_src0_endofpacket;                                                                // rsp_xbar_demux_013:src0_endofpacket -> rsp_xbar_mux_002:sink3_endofpacket
	wire         rsp_xbar_demux_013_src0_valid;                                                                      // rsp_xbar_demux_013:src0_valid -> rsp_xbar_mux_002:sink3_valid
	wire         rsp_xbar_demux_013_src0_startofpacket;                                                              // rsp_xbar_demux_013:src0_startofpacket -> rsp_xbar_mux_002:sink3_startofpacket
	wire  [95:0] rsp_xbar_demux_013_src0_data;                                                                       // rsp_xbar_demux_013:src0_data -> rsp_xbar_mux_002:sink3_data
	wire  [16:0] rsp_xbar_demux_013_src0_channel;                                                                    // rsp_xbar_demux_013:src0_channel -> rsp_xbar_mux_002:sink3_channel
	wire         rsp_xbar_demux_013_src0_ready;                                                                      // rsp_xbar_mux_002:sink3_ready -> rsp_xbar_demux_013:src0_ready
	wire         rsp_xbar_demux_014_src0_endofpacket;                                                                // rsp_xbar_demux_014:src0_endofpacket -> rsp_xbar_mux_002:sink4_endofpacket
	wire         rsp_xbar_demux_014_src0_valid;                                                                      // rsp_xbar_demux_014:src0_valid -> rsp_xbar_mux_002:sink4_valid
	wire         rsp_xbar_demux_014_src0_startofpacket;                                                              // rsp_xbar_demux_014:src0_startofpacket -> rsp_xbar_mux_002:sink4_startofpacket
	wire  [95:0] rsp_xbar_demux_014_src0_data;                                                                       // rsp_xbar_demux_014:src0_data -> rsp_xbar_mux_002:sink4_data
	wire  [16:0] rsp_xbar_demux_014_src0_channel;                                                                    // rsp_xbar_demux_014:src0_channel -> rsp_xbar_mux_002:sink4_channel
	wire         rsp_xbar_demux_014_src0_ready;                                                                      // rsp_xbar_mux_002:sink4_ready -> rsp_xbar_demux_014:src0_ready
	wire         rsp_xbar_demux_015_src0_endofpacket;                                                                // rsp_xbar_demux_015:src0_endofpacket -> rsp_xbar_mux_002:sink5_endofpacket
	wire         rsp_xbar_demux_015_src0_valid;                                                                      // rsp_xbar_demux_015:src0_valid -> rsp_xbar_mux_002:sink5_valid
	wire         rsp_xbar_demux_015_src0_startofpacket;                                                              // rsp_xbar_demux_015:src0_startofpacket -> rsp_xbar_mux_002:sink5_startofpacket
	wire  [95:0] rsp_xbar_demux_015_src0_data;                                                                       // rsp_xbar_demux_015:src0_data -> rsp_xbar_mux_002:sink5_data
	wire  [16:0] rsp_xbar_demux_015_src0_channel;                                                                    // rsp_xbar_demux_015:src0_channel -> rsp_xbar_mux_002:sink5_channel
	wire         rsp_xbar_demux_015_src0_ready;                                                                      // rsp_xbar_mux_002:sink5_ready -> rsp_xbar_demux_015:src0_ready
	wire         rsp_xbar_demux_015_src1_endofpacket;                                                                // rsp_xbar_demux_015:src1_endofpacket -> rsp_xbar_mux_003:sink1_endofpacket
	wire         rsp_xbar_demux_015_src1_valid;                                                                      // rsp_xbar_demux_015:src1_valid -> rsp_xbar_mux_003:sink1_valid
	wire         rsp_xbar_demux_015_src1_startofpacket;                                                              // rsp_xbar_demux_015:src1_startofpacket -> rsp_xbar_mux_003:sink1_startofpacket
	wire  [95:0] rsp_xbar_demux_015_src1_data;                                                                       // rsp_xbar_demux_015:src1_data -> rsp_xbar_mux_003:sink1_data
	wire  [16:0] rsp_xbar_demux_015_src1_channel;                                                                    // rsp_xbar_demux_015:src1_channel -> rsp_xbar_mux_003:sink1_channel
	wire         rsp_xbar_demux_015_src1_ready;                                                                      // rsp_xbar_mux_003:sink1_ready -> rsp_xbar_demux_015:src1_ready
	wire         rsp_xbar_demux_016_src0_endofpacket;                                                                // rsp_xbar_demux_016:src0_endofpacket -> rsp_xbar_mux_002:sink6_endofpacket
	wire         rsp_xbar_demux_016_src0_valid;                                                                      // rsp_xbar_demux_016:src0_valid -> rsp_xbar_mux_002:sink6_valid
	wire         rsp_xbar_demux_016_src0_startofpacket;                                                              // rsp_xbar_demux_016:src0_startofpacket -> rsp_xbar_mux_002:sink6_startofpacket
	wire  [95:0] rsp_xbar_demux_016_src0_data;                                                                       // rsp_xbar_demux_016:src0_data -> rsp_xbar_mux_002:sink6_data
	wire  [16:0] rsp_xbar_demux_016_src0_channel;                                                                    // rsp_xbar_demux_016:src0_channel -> rsp_xbar_mux_002:sink6_channel
	wire         rsp_xbar_demux_016_src0_ready;                                                                      // rsp_xbar_mux_002:sink6_ready -> rsp_xbar_demux_016:src0_ready

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (16),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (16),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (0),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (1),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) et_core_instruction_master_translator (
		.clk                      (clk_0_clk_clk),                                                                 //                       clk.clk
		.reset                    (ET_Core_reset_n_reset_bridge_in_reset_reset),                                   //                     reset.reset
		.uav_address              (et_core_instruction_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount           (et_core_instruction_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read                 (et_core_instruction_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write                (et_core_instruction_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest          (et_core_instruction_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid        (et_core_instruction_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable           (et_core_instruction_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata             (et_core_instruction_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata            (et_core_instruction_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock                 (et_core_instruction_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess          (et_core_instruction_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address               (ET_Core_instruction_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest           (ET_Core_instruction_master_waitrequest),                                        //                          .waitrequest
		.av_read                  (ET_Core_instruction_master_read),                                               //                          .read
		.av_readdata              (ET_Core_instruction_master_readdata),                                           //                          .readdata
		.av_burstcount            (1'b1),                                                                          //               (terminated)
		.av_byteenable            (4'b1111),                                                                       //               (terminated)
		.av_beginbursttransfer    (1'b0),                                                                          //               (terminated)
		.av_begintransfer         (1'b0),                                                                          //               (terminated)
		.av_chipselect            (1'b0),                                                                          //               (terminated)
		.av_readdatavalid         (),                                                                              //               (terminated)
		.av_write                 (1'b0),                                                                          //               (terminated)
		.av_writedata             (32'b00000000000000000000000000000000),                                          //               (terminated)
		.av_lock                  (1'b0),                                                                          //               (terminated)
		.av_debugaccess           (1'b0),                                                                          //               (terminated)
		.uav_clken                (),                                                                              //               (terminated)
		.av_clken                 (1'b1),                                                                          //               (terminated)
		.uav_response             (2'b00),                                                                         //               (terminated)
		.av_response              (),                                                                              //               (terminated)
		.uav_writeresponserequest (),                                                                              //               (terminated)
		.uav_writeresponsevalid   (1'b0),                                                                          //               (terminated)
		.av_writeresponserequest  (1'b0),                                                                          //               (terminated)
		.av_writeresponsevalid    ()                                                                               //               (terminated)
	);

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (16),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (16),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (1)
	) et_core_data_master_translator (
		.clk                      (clk_0_clk_clk),                                                          //                       clk.clk
		.reset                    (ET_Core_reset_n_reset_bridge_in_reset_reset),                            //                     reset.reset
		.uav_address              (et_core_data_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount           (et_core_data_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read                 (et_core_data_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write                (et_core_data_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest          (et_core_data_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid        (et_core_data_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable           (et_core_data_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata             (et_core_data_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata            (et_core_data_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock                 (et_core_data_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess          (et_core_data_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address               (ET_Core_data_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest           (ET_Core_data_master_waitrequest),                                        //                          .waitrequest
		.av_byteenable            (ET_Core_data_master_byteenable),                                         //                          .byteenable
		.av_read                  (ET_Core_data_master_read),                                               //                          .read
		.av_readdata              (ET_Core_data_master_readdata),                                           //                          .readdata
		.av_write                 (ET_Core_data_master_write),                                              //                          .write
		.av_writedata             (ET_Core_data_master_writedata),                                          //                          .writedata
		.av_debugaccess           (ET_Core_data_master_debugaccess),                                        //                          .debugaccess
		.av_burstcount            (1'b1),                                                                   //               (terminated)
		.av_beginbursttransfer    (1'b0),                                                                   //               (terminated)
		.av_begintransfer         (1'b0),                                                                   //               (terminated)
		.av_chipselect            (1'b0),                                                                   //               (terminated)
		.av_readdatavalid         (),                                                                       //               (terminated)
		.av_lock                  (1'b0),                                                                   //               (terminated)
		.uav_clken                (),                                                                       //               (terminated)
		.av_clken                 (1'b1),                                                                   //               (terminated)
		.uav_response             (2'b00),                                                                  //               (terminated)
		.av_response              (),                                                                       //               (terminated)
		.uav_writeresponserequest (),                                                                       //               (terminated)
		.uav_writeresponsevalid   (1'b0),                                                                   //               (terminated)
		.av_writeresponserequest  (1'b0),                                                                   //               (terminated)
		.av_writeresponsevalid    ()                                                                        //               (terminated)
	);

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (16),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (16),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (1)
	) tt_core_data_master_translator (
		.clk                      (clk_0_clk_clk),                                                          //                       clk.clk
		.reset                    (ET_Core_reset_n_reset_bridge_in_reset_reset),                            //                     reset.reset
		.uav_address              (tt_core_data_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount           (tt_core_data_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read                 (tt_core_data_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write                (tt_core_data_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest          (tt_core_data_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid        (tt_core_data_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable           (tt_core_data_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata             (tt_core_data_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata            (tt_core_data_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock                 (tt_core_data_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess          (tt_core_data_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address               (TT_Core_data_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest           (TT_Core_data_master_waitrequest),                                        //                          .waitrequest
		.av_byteenable            (TT_Core_data_master_byteenable),                                         //                          .byteenable
		.av_read                  (TT_Core_data_master_read),                                               //                          .read
		.av_readdata              (TT_Core_data_master_readdata),                                           //                          .readdata
		.av_write                 (TT_Core_data_master_write),                                              //                          .write
		.av_writedata             (TT_Core_data_master_writedata),                                          //                          .writedata
		.av_debugaccess           (TT_Core_data_master_debugaccess),                                        //                          .debugaccess
		.av_burstcount            (1'b1),                                                                   //               (terminated)
		.av_beginbursttransfer    (1'b0),                                                                   //               (terminated)
		.av_begintransfer         (1'b0),                                                                   //               (terminated)
		.av_chipselect            (1'b0),                                                                   //               (terminated)
		.av_readdatavalid         (),                                                                       //               (terminated)
		.av_lock                  (1'b0),                                                                   //               (terminated)
		.uav_clken                (),                                                                       //               (terminated)
		.av_clken                 (1'b1),                                                                   //               (terminated)
		.uav_response             (2'b00),                                                                  //               (terminated)
		.av_response              (),                                                                       //               (terminated)
		.uav_writeresponserequest (),                                                                       //               (terminated)
		.uav_writeresponsevalid   (1'b0),                                                                   //               (terminated)
		.av_writeresponserequest  (1'b0),                                                                   //               (terminated)
		.av_writeresponsevalid    ()                                                                        //               (terminated)
	);

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (16),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (16),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (0),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (1),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) tt_core_instruction_master_translator (
		.clk                      (clk_0_clk_clk),                                                                 //                       clk.clk
		.reset                    (ET_Core_reset_n_reset_bridge_in_reset_reset),                                   //                     reset.reset
		.uav_address              (tt_core_instruction_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount           (tt_core_instruction_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read                 (tt_core_instruction_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write                (tt_core_instruction_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest          (tt_core_instruction_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid        (tt_core_instruction_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable           (tt_core_instruction_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata             (tt_core_instruction_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata            (tt_core_instruction_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock                 (tt_core_instruction_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess          (tt_core_instruction_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address               (TT_Core_instruction_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest           (TT_Core_instruction_master_waitrequest),                                        //                          .waitrequest
		.av_read                  (TT_Core_instruction_master_read),                                               //                          .read
		.av_readdata              (TT_Core_instruction_master_readdata),                                           //                          .readdata
		.av_burstcount            (1'b1),                                                                          //               (terminated)
		.av_byteenable            (4'b1111),                                                                       //               (terminated)
		.av_beginbursttransfer    (1'b0),                                                                          //               (terminated)
		.av_begintransfer         (1'b0),                                                                          //               (terminated)
		.av_chipselect            (1'b0),                                                                          //               (terminated)
		.av_readdatavalid         (),                                                                              //               (terminated)
		.av_write                 (1'b0),                                                                          //               (terminated)
		.av_writedata             (32'b00000000000000000000000000000000),                                          //               (terminated)
		.av_lock                  (1'b0),                                                                          //               (terminated)
		.av_debugaccess           (1'b0),                                                                          //               (terminated)
		.uav_clken                (),                                                                              //               (terminated)
		.av_clken                 (1'b1),                                                                          //               (terminated)
		.uav_response             (2'b00),                                                                         //               (terminated)
		.av_response              (),                                                                              //               (terminated)
		.uav_writeresponserequest (),                                                                              //               (terminated)
		.uav_writeresponsevalid   (1'b0),                                                                          //               (terminated)
		.av_writeresponserequest  (1'b0),                                                                          //               (terminated)
		.av_writeresponsevalid    ()                                                                               //               (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (9),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) et_core_jtag_debug_module_translator (
		.clk                      (clk_0_clk_clk),                                                                        //                      clk.clk
		.reset                    (ET_Core_reset_n_reset_bridge_in_reset_reset),                                          //                    reset.reset
		.uav_address              (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (ET_Core_jtag_debug_module_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (ET_Core_jtag_debug_module_write),                                                      //                         .write
		.av_read                  (ET_Core_jtag_debug_module_read),                                                       //                         .read
		.av_readdata              (ET_Core_jtag_debug_module_readdata),                                                   //                         .readdata
		.av_writedata             (ET_Core_jtag_debug_module_writedata),                                                  //                         .writedata
		.av_byteenable            (ET_Core_jtag_debug_module_byteenable),                                                 //                         .byteenable
		.av_waitrequest           (ET_Core_jtag_debug_module_waitrequest),                                                //                         .waitrequest
		.av_debugaccess           (ET_Core_jtag_debug_module_debugaccess),                                                //                         .debugaccess
		.av_begintransfer         (),                                                                                     //              (terminated)
		.av_beginbursttransfer    (),                                                                                     //              (terminated)
		.av_burstcount            (),                                                                                     //              (terminated)
		.av_readdatavalid         (1'b0),                                                                                 //              (terminated)
		.av_writebyteenable       (),                                                                                     //              (terminated)
		.av_lock                  (),                                                                                     //              (terminated)
		.av_chipselect            (),                                                                                     //              (terminated)
		.av_clken                 (),                                                                                     //              (terminated)
		.uav_clken                (1'b0),                                                                                 //              (terminated)
		.av_outputenable          (),                                                                                     //              (terminated)
		.uav_response             (),                                                                                     //              (terminated)
		.av_response              (2'b00),                                                                                //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                                 //              (terminated)
		.uav_writeresponsevalid   (),                                                                                     //              (terminated)
		.av_writeresponserequest  (),                                                                                     //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                                  //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (12),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (1),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) et_core_memory_s1_translator (
		.clk                      (clk_0_clk_clk),                                                                //                      clk.clk
		.reset                    (ET_Core_reset_n_reset_bridge_in_reset_reset),                                  //                    reset.reset
		.uav_address              (et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (ET_Core_Memory_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (ET_Core_Memory_s1_write),                                                      //                         .write
		.av_readdata              (ET_Core_Memory_s1_readdata),                                                   //                         .readdata
		.av_writedata             (ET_Core_Memory_s1_writedata),                                                  //                         .writedata
		.av_byteenable            (ET_Core_Memory_s1_byteenable),                                                 //                         .byteenable
		.av_chipselect            (ET_Core_Memory_s1_chipselect),                                                 //                         .chipselect
		.av_clken                 (ET_Core_Memory_s1_clken),                                                      //                         .clken
		.av_read                  (),                                                                             //              (terminated)
		.av_begintransfer         (),                                                                             //              (terminated)
		.av_beginbursttransfer    (),                                                                             //              (terminated)
		.av_burstcount            (),                                                                             //              (terminated)
		.av_readdatavalid         (1'b0),                                                                         //              (terminated)
		.av_waitrequest           (1'b0),                                                                         //              (terminated)
		.av_writebyteenable       (),                                                                             //              (terminated)
		.av_lock                  (),                                                                             //              (terminated)
		.uav_clken                (1'b0),                                                                         //              (terminated)
		.av_debugaccess           (),                                                                             //              (terminated)
		.av_outputenable          (),                                                                             //              (terminated)
		.uav_response             (),                                                                             //              (terminated)
		.av_response              (2'b00),                                                                        //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                         //              (terminated)
		.uav_writeresponsevalid   (),                                                                             //              (terminated)
		.av_writeresponserequest  (),                                                                             //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                          //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (8),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (1),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) msg_buf_ram_s1_translator (
		.clk                      (clk_0_clk_clk),                                                             //                      clk.clk
		.reset                    (ET_Core_reset_n_reset_bridge_in_reset_reset),                               //                    reset.reset
		.uav_address              (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (msg_buf_ram_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (msg_buf_ram_s1_write),                                                      //                         .write
		.av_readdata              (msg_buf_ram_s1_readdata),                                                   //                         .readdata
		.av_writedata             (msg_buf_ram_s1_writedata),                                                  //                         .writedata
		.av_byteenable            (msg_buf_ram_s1_byteenable),                                                 //                         .byteenable
		.av_chipselect            (msg_buf_ram_s1_chipselect),                                                 //                         .chipselect
		.av_clken                 (msg_buf_ram_s1_clken),                                                      //                         .clken
		.av_read                  (),                                                                          //              (terminated)
		.av_begintransfer         (),                                                                          //              (terminated)
		.av_beginbursttransfer    (),                                                                          //              (terminated)
		.av_burstcount            (),                                                                          //              (terminated)
		.av_readdatavalid         (1'b0),                                                                      //              (terminated)
		.av_waitrequest           (1'b0),                                                                      //              (terminated)
		.av_writebyteenable       (),                                                                          //              (terminated)
		.av_lock                  (),                                                                          //              (terminated)
		.uav_clken                (1'b0),                                                                      //              (terminated)
		.av_debugaccess           (),                                                                          //              (terminated)
		.av_outputenable          (),                                                                          //              (terminated)
		.uav_response             (),                                                                          //              (terminated)
		.av_response              (2'b00),                                                                     //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                      //              (terminated)
		.uav_writeresponsevalid   (),                                                                          //              (terminated)
		.av_writeresponserequest  (),                                                                          //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                       //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) msg_buf_mutex_s1_translator (
		.clk                      (clk_0_clk_clk),                                                               //                      clk.clk
		.reset                    (ET_Core_reset_n_reset_bridge_in_reset_reset),                                 //                    reset.reset
		.uav_address              (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (msg_buf_mutex_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (msg_buf_mutex_s1_write),                                                      //                         .write
		.av_read                  (msg_buf_mutex_s1_read),                                                       //                         .read
		.av_readdata              (msg_buf_mutex_s1_readdata),                                                   //                         .readdata
		.av_writedata             (msg_buf_mutex_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (msg_buf_mutex_s1_chipselect),                                                 //                         .chipselect
		.av_begintransfer         (),                                                                            //              (terminated)
		.av_beginbursttransfer    (),                                                                            //              (terminated)
		.av_burstcount            (),                                                                            //              (terminated)
		.av_byteenable            (),                                                                            //              (terminated)
		.av_readdatavalid         (1'b0),                                                                        //              (terminated)
		.av_waitrequest           (1'b0),                                                                        //              (terminated)
		.av_writebyteenable       (),                                                                            //              (terminated)
		.av_lock                  (),                                                                            //              (terminated)
		.av_clken                 (),                                                                            //              (terminated)
		.uav_clken                (1'b0),                                                                        //              (terminated)
		.av_debugaccess           (),                                                                            //              (terminated)
		.av_outputenable          (),                                                                            //              (terminated)
		.uav_response             (),                                                                            //              (terminated)
		.av_response              (2'b00),                                                                       //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                        //              (terminated)
		.uav_writeresponsevalid   (),                                                                            //              (terminated)
		.av_writeresponserequest  (),                                                                            //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                         //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) pio_0_s1_translator (
		.clk                      (clk_0_clk_clk),                                                       //                      clk.clk
		.reset                    (ET_Core_reset_n_reset_bridge_in_reset_reset),                         //                    reset.reset
		.uav_address              (pio_0_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (pio_0_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (pio_0_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (pio_0_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (pio_0_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (pio_0_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (pio_0_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (pio_0_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (pio_0_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (pio_0_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (pio_0_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (pio_0_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (pio_0_s1_write),                                                      //                         .write
		.av_readdata              (pio_0_s1_readdata),                                                   //                         .readdata
		.av_writedata             (pio_0_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (pio_0_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                    //              (terminated)
		.av_begintransfer         (),                                                                    //              (terminated)
		.av_beginbursttransfer    (),                                                                    //              (terminated)
		.av_burstcount            (),                                                                    //              (terminated)
		.av_byteenable            (),                                                                    //              (terminated)
		.av_readdatavalid         (1'b0),                                                                //              (terminated)
		.av_waitrequest           (1'b0),                                                                //              (terminated)
		.av_writebyteenable       (),                                                                    //              (terminated)
		.av_lock                  (),                                                                    //              (terminated)
		.av_clken                 (),                                                                    //              (terminated)
		.uav_clken                (1'b0),                                                                //              (terminated)
		.av_debugaccess           (),                                                                    //              (terminated)
		.av_outputenable          (),                                                                    //              (terminated)
		.uav_response             (),                                                                    //              (terminated)
		.av_response              (2'b00),                                                               //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                //              (terminated)
		.uav_writeresponsevalid   (),                                                                    //              (terminated)
		.av_writeresponserequest  (),                                                                    //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                 //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) et_pb_2_s1_translator (
		.clk                      (clk_0_clk_clk),                                                         //                      clk.clk
		.reset                    (ET_Core_reset_n_reset_bridge_in_reset_reset),                           //                    reset.reset
		.uav_address              (et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (et_pb_2_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_readdata              (et_pb_2_s1_readdata),                                                   //                         .readdata
		.av_write                 (),                                                                      //              (terminated)
		.av_read                  (),                                                                      //              (terminated)
		.av_writedata             (),                                                                      //              (terminated)
		.av_begintransfer         (),                                                                      //              (terminated)
		.av_beginbursttransfer    (),                                                                      //              (terminated)
		.av_burstcount            (),                                                                      //              (terminated)
		.av_byteenable            (),                                                                      //              (terminated)
		.av_readdatavalid         (1'b0),                                                                  //              (terminated)
		.av_waitrequest           (1'b0),                                                                  //              (terminated)
		.av_writebyteenable       (),                                                                      //              (terminated)
		.av_lock                  (),                                                                      //              (terminated)
		.av_chipselect            (),                                                                      //              (terminated)
		.av_clken                 (),                                                                      //              (terminated)
		.uav_clken                (1'b0),                                                                  //              (terminated)
		.av_debugaccess           (),                                                                      //              (terminated)
		.av_outputenable          (),                                                                      //              (terminated)
		.uav_response             (),                                                                      //              (terminated)
		.av_response              (2'b00),                                                                 //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                  //              (terminated)
		.uav_writeresponsevalid   (),                                                                      //              (terminated)
		.av_writeresponserequest  (),                                                                      //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                   //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) et_pb_1_s1_translator (
		.clk                      (clk_0_clk_clk),                                                         //                      clk.clk
		.reset                    (ET_Core_reset_n_reset_bridge_in_reset_reset),                           //                    reset.reset
		.uav_address              (et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (et_pb_1_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_readdata              (et_pb_1_s1_readdata),                                                   //                         .readdata
		.av_write                 (),                                                                      //              (terminated)
		.av_read                  (),                                                                      //              (terminated)
		.av_writedata             (),                                                                      //              (terminated)
		.av_begintransfer         (),                                                                      //              (terminated)
		.av_beginbursttransfer    (),                                                                      //              (terminated)
		.av_burstcount            (),                                                                      //              (terminated)
		.av_byteenable            (),                                                                      //              (terminated)
		.av_readdatavalid         (1'b0),                                                                  //              (terminated)
		.av_waitrequest           (1'b0),                                                                  //              (terminated)
		.av_writebyteenable       (),                                                                      //              (terminated)
		.av_lock                  (),                                                                      //              (terminated)
		.av_chipselect            (),                                                                      //              (terminated)
		.av_clken                 (),                                                                      //              (terminated)
		.uav_clken                (1'b0),                                                                  //              (terminated)
		.av_debugaccess           (),                                                                      //              (terminated)
		.av_outputenable          (),                                                                      //              (terminated)
		.uav_response             (),                                                                      //              (terminated)
		.av_response              (2'b00),                                                                 //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                  //              (terminated)
		.uav_writeresponsevalid   (),                                                                      //              (terminated)
		.av_writeresponserequest  (),                                                                      //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                   //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) jtag_uart_0_avalon_jtag_slave_translator (
		.clk                      (clk_0_clk_clk),                                                                            //                      clk.clk
		.reset                    (ET_Core_reset_n_reset_bridge_in_reset_reset),                                              //                    reset.reset
		.uav_address              (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (jtag_uart_0_avalon_jtag_slave_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (jtag_uart_0_avalon_jtag_slave_write),                                                      //                         .write
		.av_read                  (jtag_uart_0_avalon_jtag_slave_read),                                                       //                         .read
		.av_readdata              (jtag_uart_0_avalon_jtag_slave_readdata),                                                   //                         .readdata
		.av_writedata             (jtag_uart_0_avalon_jtag_slave_writedata),                                                  //                         .writedata
		.av_waitrequest           (jtag_uart_0_avalon_jtag_slave_waitrequest),                                                //                         .waitrequest
		.av_chipselect            (jtag_uart_0_avalon_jtag_slave_chipselect),                                                 //                         .chipselect
		.av_begintransfer         (),                                                                                         //              (terminated)
		.av_beginbursttransfer    (),                                                                                         //              (terminated)
		.av_burstcount            (),                                                                                         //              (terminated)
		.av_byteenable            (),                                                                                         //              (terminated)
		.av_readdatavalid         (1'b0),                                                                                     //              (terminated)
		.av_writebyteenable       (),                                                                                         //              (terminated)
		.av_lock                  (),                                                                                         //              (terminated)
		.av_clken                 (),                                                                                         //              (terminated)
		.uav_clken                (1'b0),                                                                                     //              (terminated)
		.av_debugaccess           (),                                                                                         //              (terminated)
		.av_outputenable          (),                                                                                         //              (terminated)
		.uav_response             (),                                                                                         //              (terminated)
		.av_response              (2'b00),                                                                                    //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                                     //              (terminated)
		.uav_writeresponsevalid   (),                                                                                         //              (terminated)
		.av_writeresponserequest  (),                                                                                         //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                                      //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (1),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) et_spi_0_spi_control_port_translator (
		.clk                      (clk_0_clk_clk),                                                                        //                      clk.clk
		.reset                    (ET_Core_reset_n_reset_bridge_in_reset_reset),                                          //                    reset.reset
		.uav_address              (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (et_spi_0_spi_control_port_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (et_spi_0_spi_control_port_write),                                                      //                         .write
		.av_read                  (et_spi_0_spi_control_port_read),                                                       //                         .read
		.av_readdata              (et_spi_0_spi_control_port_readdata),                                                   //                         .readdata
		.av_writedata             (et_spi_0_spi_control_port_writedata),                                                  //                         .writedata
		.av_chipselect            (et_spi_0_spi_control_port_chipselect),                                                 //                         .chipselect
		.av_begintransfer         (),                                                                                     //              (terminated)
		.av_beginbursttransfer    (),                                                                                     //              (terminated)
		.av_burstcount            (),                                                                                     //              (terminated)
		.av_byteenable            (),                                                                                     //              (terminated)
		.av_readdatavalid         (1'b0),                                                                                 //              (terminated)
		.av_waitrequest           (1'b0),                                                                                 //              (terminated)
		.av_writebyteenable       (),                                                                                     //              (terminated)
		.av_lock                  (),                                                                                     //              (terminated)
		.av_clken                 (),                                                                                     //              (terminated)
		.uav_clken                (1'b0),                                                                                 //              (terminated)
		.av_debugaccess           (),                                                                                     //              (terminated)
		.av_outputenable          (),                                                                                     //              (terminated)
		.uav_response             (),                                                                                     //              (terminated)
		.av_response              (2'b00),                                                                                //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                                 //              (terminated)
		.uav_writeresponsevalid   (),                                                                                     //              (terminated)
		.av_writeresponserequest  (),                                                                                     //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                                  //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) et_leds2_s1_translator (
		.clk                      (clk_0_clk_clk),                                                          //                      clk.clk
		.reset                    (ET_Core_reset_n_reset_bridge_in_reset_reset),                            //                    reset.reset
		.uav_address              (et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (et_leds2_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (et_leds2_s1_write),                                                      //                         .write
		.av_readdata              (et_leds2_s1_readdata),                                                   //                         .readdata
		.av_writedata             (et_leds2_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (et_leds2_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                       //              (terminated)
		.av_begintransfer         (),                                                                       //              (terminated)
		.av_beginbursttransfer    (),                                                                       //              (terminated)
		.av_burstcount            (),                                                                       //              (terminated)
		.av_byteenable            (),                                                                       //              (terminated)
		.av_readdatavalid         (1'b0),                                                                   //              (terminated)
		.av_waitrequest           (1'b0),                                                                   //              (terminated)
		.av_writebyteenable       (),                                                                       //              (terminated)
		.av_lock                  (),                                                                       //              (terminated)
		.av_clken                 (),                                                                       //              (terminated)
		.uav_clken                (1'b0),                                                                   //              (terminated)
		.av_debugaccess           (),                                                                       //              (terminated)
		.av_outputenable          (),                                                                       //              (terminated)
		.uav_response             (),                                                                       //              (terminated)
		.av_response              (2'b00),                                                                  //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                   //              (terminated)
		.uav_writeresponsevalid   (),                                                                       //              (terminated)
		.av_writeresponserequest  (),                                                                       //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) et_leds1_s1_translator (
		.clk                      (clk_0_clk_clk),                                                          //                      clk.clk
		.reset                    (ET_Core_reset_n_reset_bridge_in_reset_reset),                            //                    reset.reset
		.uav_address              (et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (et_leds1_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (et_leds1_s1_write),                                                      //                         .write
		.av_readdata              (et_leds1_s1_readdata),                                                   //                         .readdata
		.av_writedata             (et_leds1_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (et_leds1_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                       //              (terminated)
		.av_begintransfer         (),                                                                       //              (terminated)
		.av_beginbursttransfer    (),                                                                       //              (terminated)
		.av_burstcount            (),                                                                       //              (terminated)
		.av_byteenable            (),                                                                       //              (terminated)
		.av_readdatavalid         (1'b0),                                                                   //              (terminated)
		.av_waitrequest           (1'b0),                                                                   //              (terminated)
		.av_writebyteenable       (),                                                                       //              (terminated)
		.av_lock                  (),                                                                       //              (terminated)
		.av_clken                 (),                                                                       //              (terminated)
		.uav_clken                (1'b0),                                                                   //              (terminated)
		.av_debugaccess           (),                                                                       //              (terminated)
		.av_outputenable          (),                                                                       //              (terminated)
		.uav_response             (),                                                                       //              (terminated)
		.av_response              (2'b00),                                                                  //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                   //              (terminated)
		.uav_writeresponsevalid   (),                                                                       //              (terminated)
		.av_writeresponserequest  (),                                                                       //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) et_spican_int_s1_translator (
		.clk                      (clk_0_clk_clk),                                                               //                      clk.clk
		.reset                    (ET_Core_reset_n_reset_bridge_in_reset_reset),                                 //                    reset.reset
		.uav_address              (et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (et_spican_int_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (et_spican_int_s1_write),                                                      //                         .write
		.av_readdata              (et_spican_int_s1_readdata),                                                   //                         .readdata
		.av_writedata             (et_spican_int_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (et_spican_int_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                            //              (terminated)
		.av_begintransfer         (),                                                                            //              (terminated)
		.av_beginbursttransfer    (),                                                                            //              (terminated)
		.av_burstcount            (),                                                                            //              (terminated)
		.av_byteenable            (),                                                                            //              (terminated)
		.av_readdatavalid         (1'b0),                                                                        //              (terminated)
		.av_waitrequest           (1'b0),                                                                        //              (terminated)
		.av_writebyteenable       (),                                                                            //              (terminated)
		.av_lock                  (),                                                                            //              (terminated)
		.av_clken                 (),                                                                            //              (terminated)
		.uav_clken                (1'b0),                                                                        //              (terminated)
		.av_debugaccess           (),                                                                            //              (terminated)
		.av_outputenable          (),                                                                            //              (terminated)
		.uav_response             (),                                                                            //              (terminated)
		.av_response              (2'b00),                                                                       //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                        //              (terminated)
		.uav_writeresponsevalid   (),                                                                            //              (terminated)
		.av_writeresponserequest  (),                                                                            //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                         //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (9),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) tt_core_jtag_debug_module_translator (
		.clk                      (clk_0_clk_clk),                                                                        //                      clk.clk
		.reset                    (ET_Core_reset_n_reset_bridge_in_reset_reset),                                          //                    reset.reset
		.uav_address              (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (TT_Core_jtag_debug_module_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (TT_Core_jtag_debug_module_write),                                                      //                         .write
		.av_read                  (TT_Core_jtag_debug_module_read),                                                       //                         .read
		.av_readdata              (TT_Core_jtag_debug_module_readdata),                                                   //                         .readdata
		.av_writedata             (TT_Core_jtag_debug_module_writedata),                                                  //                         .writedata
		.av_byteenable            (TT_Core_jtag_debug_module_byteenable),                                                 //                         .byteenable
		.av_waitrequest           (TT_Core_jtag_debug_module_waitrequest),                                                //                         .waitrequest
		.av_debugaccess           (TT_Core_jtag_debug_module_debugaccess),                                                //                         .debugaccess
		.av_begintransfer         (),                                                                                     //              (terminated)
		.av_beginbursttransfer    (),                                                                                     //              (terminated)
		.av_burstcount            (),                                                                                     //              (terminated)
		.av_readdatavalid         (1'b0),                                                                                 //              (terminated)
		.av_writebyteenable       (),                                                                                     //              (terminated)
		.av_lock                  (),                                                                                     //              (terminated)
		.av_chipselect            (),                                                                                     //              (terminated)
		.av_clken                 (),                                                                                     //              (terminated)
		.uav_clken                (1'b0),                                                                                 //              (terminated)
		.av_outputenable          (),                                                                                     //              (terminated)
		.uav_response             (),                                                                                     //              (terminated)
		.av_response              (2'b00),                                                                                //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                                 //              (terminated)
		.uav_writeresponsevalid   (),                                                                                     //              (terminated)
		.av_writeresponserequest  (),                                                                                     //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                                  //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) tt_pb_1_s1_translator (
		.clk                      (clk_0_clk_clk),                                                         //                      clk.clk
		.reset                    (ET_Core_reset_n_reset_bridge_in_reset_reset),                           //                    reset.reset
		.uav_address              (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (tt_pb_1_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_readdata              (tt_pb_1_s1_readdata),                                                   //                         .readdata
		.av_write                 (),                                                                      //              (terminated)
		.av_read                  (),                                                                      //              (terminated)
		.av_writedata             (),                                                                      //              (terminated)
		.av_begintransfer         (),                                                                      //              (terminated)
		.av_beginbursttransfer    (),                                                                      //              (terminated)
		.av_burstcount            (),                                                                      //              (terminated)
		.av_byteenable            (),                                                                      //              (terminated)
		.av_readdatavalid         (1'b0),                                                                  //              (terminated)
		.av_waitrequest           (1'b0),                                                                  //              (terminated)
		.av_writebyteenable       (),                                                                      //              (terminated)
		.av_lock                  (),                                                                      //              (terminated)
		.av_chipselect            (),                                                                      //              (terminated)
		.av_clken                 (),                                                                      //              (terminated)
		.uav_clken                (1'b0),                                                                  //              (terminated)
		.av_debugaccess           (),                                                                      //              (terminated)
		.av_outputenable          (),                                                                      //              (terminated)
		.uav_response             (),                                                                      //              (terminated)
		.av_response              (2'b00),                                                                 //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                  //              (terminated)
		.uav_writeresponsevalid   (),                                                                      //              (terminated)
		.av_writeresponserequest  (),                                                                      //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                   //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) tt_leds_s1_translator (
		.clk                      (clk_0_clk_clk),                                                         //                      clk.clk
		.reset                    (ET_Core_reset_n_reset_bridge_in_reset_reset),                           //                    reset.reset
		.uav_address              (tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (tt_leds_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (tt_leds_s1_write),                                                      //                         .write
		.av_readdata              (tt_leds_s1_readdata),                                                   //                         .readdata
		.av_writedata             (tt_leds_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (tt_leds_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                      //              (terminated)
		.av_begintransfer         (),                                                                      //              (terminated)
		.av_beginbursttransfer    (),                                                                      //              (terminated)
		.av_burstcount            (),                                                                      //              (terminated)
		.av_byteenable            (),                                                                      //              (terminated)
		.av_readdatavalid         (1'b0),                                                                  //              (terminated)
		.av_waitrequest           (1'b0),                                                                  //              (terminated)
		.av_writebyteenable       (),                                                                      //              (terminated)
		.av_lock                  (),                                                                      //              (terminated)
		.av_clken                 (),                                                                      //              (terminated)
		.uav_clken                (1'b0),                                                                  //              (terminated)
		.av_debugaccess           (),                                                                      //              (terminated)
		.av_outputenable          (),                                                                      //              (terminated)
		.uav_response             (),                                                                      //              (terminated)
		.av_response              (2'b00),                                                                 //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                  //              (terminated)
		.uav_writeresponsevalid   (),                                                                      //              (terminated)
		.av_writeresponserequest  (),                                                                      //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                   //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (12),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (1),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) tt_core_memory_s1_translator (
		.clk                      (clk_0_clk_clk),                                                                //                      clk.clk
		.reset                    (ET_Core_reset_n_reset_bridge_in_reset_reset),                                  //                    reset.reset
		.uav_address              (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (TT_core_memory_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (TT_core_memory_s1_write),                                                      //                         .write
		.av_readdata              (TT_core_memory_s1_readdata),                                                   //                         .readdata
		.av_writedata             (TT_core_memory_s1_writedata),                                                  //                         .writedata
		.av_byteenable            (TT_core_memory_s1_byteenable),                                                 //                         .byteenable
		.av_chipselect            (TT_core_memory_s1_chipselect),                                                 //                         .chipselect
		.av_clken                 (TT_core_memory_s1_clken),                                                      //                         .clken
		.av_read                  (),                                                                             //              (terminated)
		.av_begintransfer         (),                                                                             //              (terminated)
		.av_beginbursttransfer    (),                                                                             //              (terminated)
		.av_burstcount            (),                                                                             //              (terminated)
		.av_readdatavalid         (1'b0),                                                                         //              (terminated)
		.av_waitrequest           (1'b0),                                                                         //              (terminated)
		.av_writebyteenable       (),                                                                             //              (terminated)
		.av_lock                  (),                                                                             //              (terminated)
		.uav_clken                (1'b0),                                                                         //              (terminated)
		.av_debugaccess           (),                                                                             //              (terminated)
		.av_outputenable          (),                                                                             //              (terminated)
		.uav_response             (),                                                                             //              (terminated)
		.av_response              (2'b00),                                                                        //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                         //              (terminated)
		.uav_writeresponsevalid   (),                                                                             //              (terminated)
		.av_writeresponserequest  (),                                                                             //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                          //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (16),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) tt_timer_1_s1_translator (
		.clk                      (clk_0_clk_clk),                                                            //                      clk.clk
		.reset                    (ET_Core_reset_n_reset_bridge_in_reset_reset),                              //                    reset.reset
		.uav_address              (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (tt_timer_1_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (tt_timer_1_s1_write),                                                      //                         .write
		.av_readdata              (tt_timer_1_s1_readdata),                                                   //                         .readdata
		.av_writedata             (tt_timer_1_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (tt_timer_1_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                         //              (terminated)
		.av_begintransfer         (),                                                                         //              (terminated)
		.av_beginbursttransfer    (),                                                                         //              (terminated)
		.av_burstcount            (),                                                                         //              (terminated)
		.av_byteenable            (),                                                                         //              (terminated)
		.av_readdatavalid         (1'b0),                                                                     //              (terminated)
		.av_waitrequest           (1'b0),                                                                     //              (terminated)
		.av_writebyteenable       (),                                                                         //              (terminated)
		.av_lock                  (),                                                                         //              (terminated)
		.av_clken                 (),                                                                         //              (terminated)
		.uav_clken                (1'b0),                                                                     //              (terminated)
		.av_debugaccess           (),                                                                         //              (terminated)
		.av_outputenable          (),                                                                         //              (terminated)
		.uav_response             (),                                                                         //              (terminated)
		.av_response              (2'b00),                                                                    //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                     //              (terminated)
		.uav_writeresponsevalid   (),                                                                         //              (terminated)
		.av_writeresponserequest  (),                                                                         //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                      //              (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BEGIN_BURST           (71),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_BURST_TYPE_H          (68),
		.PKT_BURST_TYPE_L          (67),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_TRANS_LOCK            (56),
		.PKT_TRANS_EXCLUSIVE       (57),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_THREAD_ID_H           (83),
		.PKT_THREAD_ID_L           (83),
		.PKT_CACHE_H               (90),
		.PKT_CACHE_L               (87),
		.PKT_DATA_SIDEBAND_H       (70),
		.PKT_DATA_SIDEBAND_L       (70),
		.PKT_QOS_H                 (72),
		.PKT_QOS_L                 (72),
		.PKT_ADDR_SIDEBAND_H       (69),
		.PKT_ADDR_SIDEBAND_L       (69),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_ORI_BURST_SIZE_H      (95),
		.ST_DATA_W                 (96),
		.ST_CHANNEL_W              (17),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (1),
		.BURSTWRAP_VALUE           (3),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) et_core_instruction_master_translator_avalon_universal_master_0_agent (
		.clk                     (clk_0_clk_clk),                                                                          //       clk.clk
		.reset                   (ET_Core_reset_n_reset_bridge_in_reset_reset),                                            // clk_reset.reset
		.av_address              (et_core_instruction_master_translator_avalon_universal_master_0_address),                //        av.address
		.av_write                (et_core_instruction_master_translator_avalon_universal_master_0_write),                  //          .write
		.av_read                 (et_core_instruction_master_translator_avalon_universal_master_0_read),                   //          .read
		.av_writedata            (et_core_instruction_master_translator_avalon_universal_master_0_writedata),              //          .writedata
		.av_readdata             (et_core_instruction_master_translator_avalon_universal_master_0_readdata),               //          .readdata
		.av_waitrequest          (et_core_instruction_master_translator_avalon_universal_master_0_waitrequest),            //          .waitrequest
		.av_readdatavalid        (et_core_instruction_master_translator_avalon_universal_master_0_readdatavalid),          //          .readdatavalid
		.av_byteenable           (et_core_instruction_master_translator_avalon_universal_master_0_byteenable),             //          .byteenable
		.av_burstcount           (et_core_instruction_master_translator_avalon_universal_master_0_burstcount),             //          .burstcount
		.av_debugaccess          (et_core_instruction_master_translator_avalon_universal_master_0_debugaccess),            //          .debugaccess
		.av_lock                 (et_core_instruction_master_translator_avalon_universal_master_0_lock),                   //          .lock
		.cp_valid                (et_core_instruction_master_translator_avalon_universal_master_0_agent_cp_valid),         //        cp.valid
		.cp_data                 (et_core_instruction_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.cp_startofpacket        (et_core_instruction_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.cp_endofpacket          (et_core_instruction_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.cp_ready                (et_core_instruction_master_translator_avalon_universal_master_0_agent_cp_ready),         //          .ready
		.rp_valid                (rsp_xbar_mux_src_valid),                                                                 //        rp.valid
		.rp_data                 (rsp_xbar_mux_src_data),                                                                  //          .data
		.rp_channel              (rsp_xbar_mux_src_channel),                                                               //          .channel
		.rp_startofpacket        (rsp_xbar_mux_src_startofpacket),                                                         //          .startofpacket
		.rp_endofpacket          (rsp_xbar_mux_src_endofpacket),                                                           //          .endofpacket
		.rp_ready                (rsp_xbar_mux_src_ready),                                                                 //          .ready
		.av_response             (),                                                                                       // (terminated)
		.av_writeresponserequest (1'b0),                                                                                   // (terminated)
		.av_writeresponsevalid   ()                                                                                        // (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BEGIN_BURST           (71),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_BURST_TYPE_H          (68),
		.PKT_BURST_TYPE_L          (67),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_TRANS_LOCK            (56),
		.PKT_TRANS_EXCLUSIVE       (57),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_THREAD_ID_H           (83),
		.PKT_THREAD_ID_L           (83),
		.PKT_CACHE_H               (90),
		.PKT_CACHE_L               (87),
		.PKT_DATA_SIDEBAND_H       (70),
		.PKT_DATA_SIDEBAND_L       (70),
		.PKT_QOS_H                 (72),
		.PKT_QOS_L                 (72),
		.PKT_ADDR_SIDEBAND_H       (69),
		.PKT_ADDR_SIDEBAND_L       (69),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_ORI_BURST_SIZE_H      (95),
		.ST_DATA_W                 (96),
		.ST_CHANNEL_W              (17),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (0),
		.BURSTWRAP_VALUE           (7),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) et_core_data_master_translator_avalon_universal_master_0_agent (
		.clk                     (clk_0_clk_clk),                                                                   //       clk.clk
		.reset                   (ET_Core_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.av_address              (et_core_data_master_translator_avalon_universal_master_0_address),                //        av.address
		.av_write                (et_core_data_master_translator_avalon_universal_master_0_write),                  //          .write
		.av_read                 (et_core_data_master_translator_avalon_universal_master_0_read),                   //          .read
		.av_writedata            (et_core_data_master_translator_avalon_universal_master_0_writedata),              //          .writedata
		.av_readdata             (et_core_data_master_translator_avalon_universal_master_0_readdata),               //          .readdata
		.av_waitrequest          (et_core_data_master_translator_avalon_universal_master_0_waitrequest),            //          .waitrequest
		.av_readdatavalid        (et_core_data_master_translator_avalon_universal_master_0_readdatavalid),          //          .readdatavalid
		.av_byteenable           (et_core_data_master_translator_avalon_universal_master_0_byteenable),             //          .byteenable
		.av_burstcount           (et_core_data_master_translator_avalon_universal_master_0_burstcount),             //          .burstcount
		.av_debugaccess          (et_core_data_master_translator_avalon_universal_master_0_debugaccess),            //          .debugaccess
		.av_lock                 (et_core_data_master_translator_avalon_universal_master_0_lock),                   //          .lock
		.cp_valid                (et_core_data_master_translator_avalon_universal_master_0_agent_cp_valid),         //        cp.valid
		.cp_data                 (et_core_data_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.cp_startofpacket        (et_core_data_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.cp_endofpacket          (et_core_data_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.cp_ready                (et_core_data_master_translator_avalon_universal_master_0_agent_cp_ready),         //          .ready
		.rp_valid                (rsp_xbar_mux_001_src_valid),                                                      //        rp.valid
		.rp_data                 (rsp_xbar_mux_001_src_data),                                                       //          .data
		.rp_channel              (rsp_xbar_mux_001_src_channel),                                                    //          .channel
		.rp_startofpacket        (rsp_xbar_mux_001_src_startofpacket),                                              //          .startofpacket
		.rp_endofpacket          (rsp_xbar_mux_001_src_endofpacket),                                                //          .endofpacket
		.rp_ready                (rsp_xbar_mux_001_src_ready),                                                      //          .ready
		.av_response             (),                                                                                // (terminated)
		.av_writeresponserequest (1'b0),                                                                            // (terminated)
		.av_writeresponsevalid   ()                                                                                 // (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BEGIN_BURST           (71),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_BURST_TYPE_H          (68),
		.PKT_BURST_TYPE_L          (67),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_TRANS_LOCK            (56),
		.PKT_TRANS_EXCLUSIVE       (57),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_THREAD_ID_H           (83),
		.PKT_THREAD_ID_L           (83),
		.PKT_CACHE_H               (90),
		.PKT_CACHE_L               (87),
		.PKT_DATA_SIDEBAND_H       (70),
		.PKT_DATA_SIDEBAND_L       (70),
		.PKT_QOS_H                 (72),
		.PKT_QOS_L                 (72),
		.PKT_ADDR_SIDEBAND_H       (69),
		.PKT_ADDR_SIDEBAND_L       (69),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_ORI_BURST_SIZE_H      (95),
		.ST_DATA_W                 (96),
		.ST_CHANNEL_W              (17),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (2),
		.BURSTWRAP_VALUE           (7),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) tt_core_data_master_translator_avalon_universal_master_0_agent (
		.clk                     (clk_0_clk_clk),                                                                   //       clk.clk
		.reset                   (ET_Core_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.av_address              (tt_core_data_master_translator_avalon_universal_master_0_address),                //        av.address
		.av_write                (tt_core_data_master_translator_avalon_universal_master_0_write),                  //          .write
		.av_read                 (tt_core_data_master_translator_avalon_universal_master_0_read),                   //          .read
		.av_writedata            (tt_core_data_master_translator_avalon_universal_master_0_writedata),              //          .writedata
		.av_readdata             (tt_core_data_master_translator_avalon_universal_master_0_readdata),               //          .readdata
		.av_waitrequest          (tt_core_data_master_translator_avalon_universal_master_0_waitrequest),            //          .waitrequest
		.av_readdatavalid        (tt_core_data_master_translator_avalon_universal_master_0_readdatavalid),          //          .readdatavalid
		.av_byteenable           (tt_core_data_master_translator_avalon_universal_master_0_byteenable),             //          .byteenable
		.av_burstcount           (tt_core_data_master_translator_avalon_universal_master_0_burstcount),             //          .burstcount
		.av_debugaccess          (tt_core_data_master_translator_avalon_universal_master_0_debugaccess),            //          .debugaccess
		.av_lock                 (tt_core_data_master_translator_avalon_universal_master_0_lock),                   //          .lock
		.cp_valid                (tt_core_data_master_translator_avalon_universal_master_0_agent_cp_valid),         //        cp.valid
		.cp_data                 (tt_core_data_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.cp_startofpacket        (tt_core_data_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.cp_endofpacket          (tt_core_data_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.cp_ready                (tt_core_data_master_translator_avalon_universal_master_0_agent_cp_ready),         //          .ready
		.rp_valid                (rsp_xbar_mux_002_src_valid),                                                      //        rp.valid
		.rp_data                 (rsp_xbar_mux_002_src_data),                                                       //          .data
		.rp_channel              (rsp_xbar_mux_002_src_channel),                                                    //          .channel
		.rp_startofpacket        (rsp_xbar_mux_002_src_startofpacket),                                              //          .startofpacket
		.rp_endofpacket          (rsp_xbar_mux_002_src_endofpacket),                                                //          .endofpacket
		.rp_ready                (rsp_xbar_mux_002_src_ready),                                                      //          .ready
		.av_response             (),                                                                                // (terminated)
		.av_writeresponserequest (1'b0),                                                                            // (terminated)
		.av_writeresponsevalid   ()                                                                                 // (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_BEGIN_BURST           (71),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_BURST_TYPE_H          (68),
		.PKT_BURST_TYPE_L          (67),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_TRANS_LOCK            (56),
		.PKT_TRANS_EXCLUSIVE       (57),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_THREAD_ID_H           (83),
		.PKT_THREAD_ID_L           (83),
		.PKT_CACHE_H               (90),
		.PKT_CACHE_L               (87),
		.PKT_DATA_SIDEBAND_H       (70),
		.PKT_DATA_SIDEBAND_L       (70),
		.PKT_QOS_H                 (72),
		.PKT_QOS_L                 (72),
		.PKT_ADDR_SIDEBAND_H       (69),
		.PKT_ADDR_SIDEBAND_L       (69),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_ORI_BURST_SIZE_H      (95),
		.ST_DATA_W                 (96),
		.ST_CHANNEL_W              (17),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (3),
		.BURSTWRAP_VALUE           (3),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) tt_core_instruction_master_translator_avalon_universal_master_0_agent (
		.clk                     (clk_0_clk_clk),                                                                          //       clk.clk
		.reset                   (ET_Core_reset_n_reset_bridge_in_reset_reset),                                            // clk_reset.reset
		.av_address              (tt_core_instruction_master_translator_avalon_universal_master_0_address),                //        av.address
		.av_write                (tt_core_instruction_master_translator_avalon_universal_master_0_write),                  //          .write
		.av_read                 (tt_core_instruction_master_translator_avalon_universal_master_0_read),                   //          .read
		.av_writedata            (tt_core_instruction_master_translator_avalon_universal_master_0_writedata),              //          .writedata
		.av_readdata             (tt_core_instruction_master_translator_avalon_universal_master_0_readdata),               //          .readdata
		.av_waitrequest          (tt_core_instruction_master_translator_avalon_universal_master_0_waitrequest),            //          .waitrequest
		.av_readdatavalid        (tt_core_instruction_master_translator_avalon_universal_master_0_readdatavalid),          //          .readdatavalid
		.av_byteenable           (tt_core_instruction_master_translator_avalon_universal_master_0_byteenable),             //          .byteenable
		.av_burstcount           (tt_core_instruction_master_translator_avalon_universal_master_0_burstcount),             //          .burstcount
		.av_debugaccess          (tt_core_instruction_master_translator_avalon_universal_master_0_debugaccess),            //          .debugaccess
		.av_lock                 (tt_core_instruction_master_translator_avalon_universal_master_0_lock),                   //          .lock
		.cp_valid                (tt_core_instruction_master_translator_avalon_universal_master_0_agent_cp_valid),         //        cp.valid
		.cp_data                 (tt_core_instruction_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.cp_startofpacket        (tt_core_instruction_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.cp_endofpacket          (tt_core_instruction_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.cp_ready                (tt_core_instruction_master_translator_avalon_universal_master_0_agent_cp_ready),         //          .ready
		.rp_valid                (rsp_xbar_mux_003_src_valid),                                                             //        rp.valid
		.rp_data                 (rsp_xbar_mux_003_src_data),                                                              //          .data
		.rp_channel              (rsp_xbar_mux_003_src_channel),                                                           //          .channel
		.rp_startofpacket        (rsp_xbar_mux_003_src_startofpacket),                                                     //          .startofpacket
		.rp_endofpacket          (rsp_xbar_mux_003_src_endofpacket),                                                       //          .endofpacket
		.rp_ready                (rsp_xbar_mux_003_src_ready),                                                             //          .ready
		.av_response             (),                                                                                       // (terminated)
		.av_writeresponserequest (1'b0),                                                                                   // (terminated)
		.av_writeresponsevalid   ()                                                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (71),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_TRANS_LOCK            (56),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_ORI_BURST_SIZE_H      (95),
		.ST_CHANNEL_W              (17),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                                  //             clk.clk
		.reset                   (ET_Core_reset_n_reset_bridge_in_reset_reset),                                                    //       clk_reset.reset
		.m0_address              (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_src_ready),                                                                         //              cp.ready
		.cp_valid                (cmd_xbar_mux_src_valid),                                                                         //                .valid
		.cp_data                 (cmd_xbar_mux_src_data),                                                                          //                .data
		.cp_startofpacket        (cmd_xbar_mux_src_startofpacket),                                                                 //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_src_endofpacket),                                                                   //                .endofpacket
		.cp_channel              (cmd_xbar_mux_src_channel),                                                                       //                .channel
		.rf_sink_ready           (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                          //     (terminated)
		.m0_writeresponserequest (),                                                                                               //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                            //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                                  //       clk.clk
		.reset             (ET_Core_reset_n_reset_bridge_in_reset_reset),                                                    // clk_reset.reset
		.in_data           (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                          // (terminated)
		.csr_read          (1'b0),                                                                                           // (terminated)
		.csr_write         (1'b0),                                                                                           // (terminated)
		.csr_readdata      (),                                                                                               // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                           // (terminated)
		.almost_full_data  (),                                                                                               // (terminated)
		.almost_empty_data (),                                                                                               // (terminated)
		.in_empty          (1'b0),                                                                                           // (terminated)
		.out_empty         (),                                                                                               // (terminated)
		.in_error          (1'b0),                                                                                           // (terminated)
		.out_error         (),                                                                                               // (terminated)
		.in_channel        (1'b0),                                                                                           // (terminated)
		.out_channel       ()                                                                                                // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (71),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_TRANS_LOCK            (56),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_ORI_BURST_SIZE_H      (95),
		.ST_CHANNEL_W              (17),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) et_core_memory_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                          //             clk.clk
		.reset                   (ET_Core_reset_n_reset_bridge_in_reset_reset),                                            //       clk_reset.reset
		.m0_address              (et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (et_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_001_src_ready),                                                             //              cp.ready
		.cp_valid                (cmd_xbar_mux_001_src_valid),                                                             //                .valid
		.cp_data                 (cmd_xbar_mux_001_src_data),                                                              //                .data
		.cp_startofpacket        (cmd_xbar_mux_001_src_startofpacket),                                                     //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_001_src_endofpacket),                                                       //                .endofpacket
		.cp_channel              (cmd_xbar_mux_001_src_channel),                                                           //                .channel
		.rf_sink_ready           (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                  //     (terminated)
		.m0_writeresponserequest (),                                                                                       //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) et_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                          //       clk.clk
		.reset             (ET_Core_reset_n_reset_bridge_in_reset_reset),                                            // clk_reset.reset
		.in_data           (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                  // (terminated)
		.csr_read          (1'b0),                                                                                   // (terminated)
		.csr_write         (1'b0),                                                                                   // (terminated)
		.csr_readdata      (),                                                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                   // (terminated)
		.almost_full_data  (),                                                                                       // (terminated)
		.almost_empty_data (),                                                                                       // (terminated)
		.in_empty          (1'b0),                                                                                   // (terminated)
		.out_empty         (),                                                                                       // (terminated)
		.in_error          (1'b0),                                                                                   // (terminated)
		.out_error         (),                                                                                       // (terminated)
		.in_channel        (1'b0),                                                                                   // (terminated)
		.out_channel       ()                                                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (71),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_TRANS_LOCK            (56),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_ORI_BURST_SIZE_H      (95),
		.ST_CHANNEL_W              (17),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) msg_buf_ram_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                       //             clk.clk
		.reset                   (ET_Core_reset_n_reset_bridge_in_reset_reset),                                         //       clk_reset.reset
		.m0_address              (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_002_src_ready),                                                          //              cp.ready
		.cp_valid                (cmd_xbar_mux_002_src_valid),                                                          //                .valid
		.cp_data                 (cmd_xbar_mux_002_src_data),                                                           //                .data
		.cp_startofpacket        (cmd_xbar_mux_002_src_startofpacket),                                                  //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_002_src_endofpacket),                                                    //                .endofpacket
		.cp_channel              (cmd_xbar_mux_002_src_channel),                                                        //                .channel
		.rf_sink_ready           (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                               //     (terminated)
		.m0_writeresponserequest (),                                                                                    //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                 //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                       //       clk.clk
		.reset             (ET_Core_reset_n_reset_bridge_in_reset_reset),                                         // clk_reset.reset
		.in_data           (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                               // (terminated)
		.csr_read          (1'b0),                                                                                // (terminated)
		.csr_write         (1'b0),                                                                                // (terminated)
		.csr_readdata      (),                                                                                    // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                // (terminated)
		.almost_full_data  (),                                                                                    // (terminated)
		.almost_empty_data (),                                                                                    // (terminated)
		.in_empty          (1'b0),                                                                                // (terminated)
		.out_empty         (),                                                                                    // (terminated)
		.in_error          (1'b0),                                                                                // (terminated)
		.out_error         (),                                                                                    // (terminated)
		.in_channel        (1'b0),                                                                                // (terminated)
		.out_channel       ()                                                                                     // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (71),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_TRANS_LOCK            (56),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_ORI_BURST_SIZE_H      (95),
		.ST_CHANNEL_W              (17),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                         //             clk.clk
		.reset                   (ET_Core_reset_n_reset_bridge_in_reset_reset),                                           //       clk_reset.reset
		.m0_address              (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_003_src_ready),                                                            //              cp.ready
		.cp_valid                (cmd_xbar_mux_003_src_valid),                                                            //                .valid
		.cp_data                 (cmd_xbar_mux_003_src_data),                                                             //                .data
		.cp_startofpacket        (cmd_xbar_mux_003_src_startofpacket),                                                    //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_003_src_endofpacket),                                                      //                .endofpacket
		.cp_channel              (cmd_xbar_mux_003_src_channel),                                                          //                .channel
		.rf_sink_ready           (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                 //     (terminated)
		.m0_writeresponserequest (),                                                                                      //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                   //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                         //       clk.clk
		.reset             (ET_Core_reset_n_reset_bridge_in_reset_reset),                                           // clk_reset.reset
		.in_data           (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                 // (terminated)
		.csr_read          (1'b0),                                                                                  // (terminated)
		.csr_write         (1'b0),                                                                                  // (terminated)
		.csr_readdata      (),                                                                                      // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                  // (terminated)
		.almost_full_data  (),                                                                                      // (terminated)
		.almost_empty_data (),                                                                                      // (terminated)
		.in_empty          (1'b0),                                                                                  // (terminated)
		.out_empty         (),                                                                                      // (terminated)
		.in_error          (1'b0),                                                                                  // (terminated)
		.out_error         (),                                                                                      // (terminated)
		.in_channel        (1'b0),                                                                                  // (terminated)
		.out_channel       ()                                                                                       // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (71),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_TRANS_LOCK            (56),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_ORI_BURST_SIZE_H      (95),
		.ST_CHANNEL_W              (17),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) pio_0_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                 //             clk.clk
		.reset                   (ET_Core_reset_n_reset_bridge_in_reset_reset),                                   //       clk_reset.reset
		.m0_address              (pio_0_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (pio_0_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (pio_0_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (pio_0_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (pio_0_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (pio_0_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (pio_0_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (pio_0_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (pio_0_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (pio_0_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (pio_0_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (pio_0_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (pio_0_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (pio_0_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (pio_0_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (pio_0_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_004_src_ready),                                                    //              cp.ready
		.cp_valid                (cmd_xbar_mux_004_src_valid),                                                    //                .valid
		.cp_data                 (cmd_xbar_mux_004_src_data),                                                     //                .data
		.cp_startofpacket        (cmd_xbar_mux_004_src_startofpacket),                                            //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_004_src_endofpacket),                                              //                .endofpacket
		.cp_channel              (cmd_xbar_mux_004_src_channel),                                                  //                .channel
		.rf_sink_ready           (pio_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (pio_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (pio_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (pio_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (pio_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (pio_0_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (pio_0_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (pio_0_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (pio_0_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (pio_0_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (pio_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (pio_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (pio_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (pio_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (pio_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (pio_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                         //     (terminated)
		.m0_writeresponserequest (),                                                                              //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                           //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) pio_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                 //       clk.clk
		.reset             (ET_Core_reset_n_reset_bridge_in_reset_reset),                                   // clk_reset.reset
		.in_data           (pio_0_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (pio_0_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (pio_0_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (pio_0_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (pio_0_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (pio_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (pio_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (pio_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (pio_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (pio_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                         // (terminated)
		.csr_read          (1'b0),                                                                          // (terminated)
		.csr_write         (1'b0),                                                                          // (terminated)
		.csr_readdata      (),                                                                              // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                          // (terminated)
		.almost_full_data  (),                                                                              // (terminated)
		.almost_empty_data (),                                                                              // (terminated)
		.in_empty          (1'b0),                                                                          // (terminated)
		.out_empty         (),                                                                              // (terminated)
		.in_error          (1'b0),                                                                          // (terminated)
		.out_error         (),                                                                              // (terminated)
		.in_channel        (1'b0),                                                                          // (terminated)
		.out_channel       ()                                                                               // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (71),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_TRANS_LOCK            (56),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_ORI_BURST_SIZE_H      (95),
		.ST_CHANNEL_W              (17),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) et_pb_2_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                   //             clk.clk
		.reset                   (ET_Core_reset_n_reset_bridge_in_reset_reset),                                     //       clk_reset.reset
		.m0_address              (et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (et_pb_2_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_005_src_ready),                                                      //              cp.ready
		.cp_valid                (cmd_xbar_mux_005_src_valid),                                                      //                .valid
		.cp_data                 (cmd_xbar_mux_005_src_data),                                                       //                .data
		.cp_startofpacket        (cmd_xbar_mux_005_src_startofpacket),                                              //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_005_src_endofpacket),                                                //                .endofpacket
		.cp_channel              (cmd_xbar_mux_005_src_channel),                                                    //                .channel
		.rf_sink_ready           (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                           //     (terminated)
		.m0_writeresponserequest (),                                                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                             //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) et_pb_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                   //       clk.clk
		.reset             (ET_Core_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.in_data           (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                           // (terminated)
		.csr_read          (1'b0),                                                                            // (terminated)
		.csr_write         (1'b0),                                                                            // (terminated)
		.csr_readdata      (),                                                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                            // (terminated)
		.almost_full_data  (),                                                                                // (terminated)
		.almost_empty_data (),                                                                                // (terminated)
		.in_empty          (1'b0),                                                                            // (terminated)
		.out_empty         (),                                                                                // (terminated)
		.in_error          (1'b0),                                                                            // (terminated)
		.out_error         (),                                                                                // (terminated)
		.in_channel        (1'b0),                                                                            // (terminated)
		.out_channel       ()                                                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (71),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_TRANS_LOCK            (56),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_ORI_BURST_SIZE_H      (95),
		.ST_CHANNEL_W              (17),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) et_pb_1_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                   //             clk.clk
		.reset                   (ET_Core_reset_n_reset_bridge_in_reset_reset),                                     //       clk_reset.reset
		.m0_address              (et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (et_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_006_src_ready),                                                      //              cp.ready
		.cp_valid                (cmd_xbar_mux_006_src_valid),                                                      //                .valid
		.cp_data                 (cmd_xbar_mux_006_src_data),                                                       //                .data
		.cp_startofpacket        (cmd_xbar_mux_006_src_startofpacket),                                              //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_006_src_endofpacket),                                                //                .endofpacket
		.cp_channel              (cmd_xbar_mux_006_src_channel),                                                    //                .channel
		.rf_sink_ready           (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                           //     (terminated)
		.m0_writeresponserequest (),                                                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                             //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) et_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                   //       clk.clk
		.reset             (ET_Core_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.in_data           (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                           // (terminated)
		.csr_read          (1'b0),                                                                            // (terminated)
		.csr_write         (1'b0),                                                                            // (terminated)
		.csr_readdata      (),                                                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                            // (terminated)
		.almost_full_data  (),                                                                                // (terminated)
		.almost_empty_data (),                                                                                // (terminated)
		.in_empty          (1'b0),                                                                            // (terminated)
		.out_empty         (),                                                                                // (terminated)
		.in_error          (1'b0),                                                                            // (terminated)
		.out_error         (),                                                                                // (terminated)
		.in_channel        (1'b0),                                                                            // (terminated)
		.out_channel       ()                                                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (71),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_TRANS_LOCK            (56),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_ORI_BURST_SIZE_H      (95),
		.ST_CHANNEL_W              (17),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                                      //             clk.clk
		.reset                   (ET_Core_reset_n_reset_bridge_in_reset_reset),                                                        //       clk_reset.reset
		.m0_address              (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_007_src_ready),                                                                         //              cp.ready
		.cp_valid                (cmd_xbar_mux_007_src_valid),                                                                         //                .valid
		.cp_data                 (cmd_xbar_mux_007_src_data),                                                                          //                .data
		.cp_startofpacket        (cmd_xbar_mux_007_src_startofpacket),                                                                 //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_007_src_endofpacket),                                                                   //                .endofpacket
		.cp_channel              (cmd_xbar_mux_007_src_channel),                                                                       //                .channel
		.rf_sink_ready           (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                              //     (terminated)
		.m0_writeresponserequest (),                                                                                                   //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                                //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                                      //       clk.clk
		.reset             (ET_Core_reset_n_reset_bridge_in_reset_reset),                                                        // clk_reset.reset
		.in_data           (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                              // (terminated)
		.csr_read          (1'b0),                                                                                               // (terminated)
		.csr_write         (1'b0),                                                                                               // (terminated)
		.csr_readdata      (),                                                                                                   // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                               // (terminated)
		.almost_full_data  (),                                                                                                   // (terminated)
		.almost_empty_data (),                                                                                                   // (terminated)
		.in_empty          (1'b0),                                                                                               // (terminated)
		.out_empty         (),                                                                                                   // (terminated)
		.in_error          (1'b0),                                                                                               // (terminated)
		.out_error         (),                                                                                                   // (terminated)
		.in_channel        (1'b0),                                                                                               // (terminated)
		.out_channel       ()                                                                                                    // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (71),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_TRANS_LOCK            (56),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_ORI_BURST_SIZE_H      (95),
		.ST_CHANNEL_W              (17),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                                  //             clk.clk
		.reset                   (ET_Core_reset_n_reset_bridge_in_reset_reset),                                                    //       clk_reset.reset
		.m0_address              (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_008_src_ready),                                                                     //              cp.ready
		.cp_valid                (cmd_xbar_mux_008_src_valid),                                                                     //                .valid
		.cp_data                 (cmd_xbar_mux_008_src_data),                                                                      //                .data
		.cp_startofpacket        (cmd_xbar_mux_008_src_startofpacket),                                                             //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_008_src_endofpacket),                                                               //                .endofpacket
		.cp_channel              (cmd_xbar_mux_008_src_channel),                                                                   //                .channel
		.rf_sink_ready           (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                          //     (terminated)
		.m0_writeresponserequest (),                                                                                               //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                            //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                                  //       clk.clk
		.reset             (ET_Core_reset_n_reset_bridge_in_reset_reset),                                                    // clk_reset.reset
		.in_data           (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                          // (terminated)
		.csr_read          (1'b0),                                                                                           // (terminated)
		.csr_write         (1'b0),                                                                                           // (terminated)
		.csr_readdata      (),                                                                                               // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                           // (terminated)
		.almost_full_data  (),                                                                                               // (terminated)
		.almost_empty_data (),                                                                                               // (terminated)
		.in_empty          (1'b0),                                                                                           // (terminated)
		.out_empty         (),                                                                                               // (terminated)
		.in_error          (1'b0),                                                                                           // (terminated)
		.out_error         (),                                                                                               // (terminated)
		.in_channel        (1'b0),                                                                                           // (terminated)
		.out_channel       ()                                                                                                // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (71),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_TRANS_LOCK            (56),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_ORI_BURST_SIZE_H      (95),
		.ST_CHANNEL_W              (17),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) et_leds2_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                    //             clk.clk
		.reset                   (ET_Core_reset_n_reset_bridge_in_reset_reset),                                      //       clk_reset.reset
		.m0_address              (et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (et_leds2_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (et_leds2_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (et_leds2_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (et_leds2_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (et_leds2_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (et_leds2_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_009_src_ready),                                                       //              cp.ready
		.cp_valid                (cmd_xbar_mux_009_src_valid),                                                       //                .valid
		.cp_data                 (cmd_xbar_mux_009_src_data),                                                        //                .data
		.cp_startofpacket        (cmd_xbar_mux_009_src_startofpacket),                                               //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_009_src_endofpacket),                                                 //                .endofpacket
		.cp_channel              (cmd_xbar_mux_009_src_channel),                                                     //                .channel
		.rf_sink_ready           (et_leds2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (et_leds2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (et_leds2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (et_leds2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (et_leds2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (et_leds2_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (et_leds2_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (et_leds2_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (et_leds2_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (et_leds2_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (et_leds2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (et_leds2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (et_leds2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (et_leds2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (et_leds2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (et_leds2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                            //     (terminated)
		.m0_writeresponserequest (),                                                                                 //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                              //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) et_leds2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                    //       clk.clk
		.reset             (ET_Core_reset_n_reset_bridge_in_reset_reset),                                      // clk_reset.reset
		.in_data           (et_leds2_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (et_leds2_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (et_leds2_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (et_leds2_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (et_leds2_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (et_leds2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (et_leds2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (et_leds2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (et_leds2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (et_leds2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                            // (terminated)
		.csr_read          (1'b0),                                                                             // (terminated)
		.csr_write         (1'b0),                                                                             // (terminated)
		.csr_readdata      (),                                                                                 // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                             // (terminated)
		.almost_full_data  (),                                                                                 // (terminated)
		.almost_empty_data (),                                                                                 // (terminated)
		.in_empty          (1'b0),                                                                             // (terminated)
		.out_empty         (),                                                                                 // (terminated)
		.in_error          (1'b0),                                                                             // (terminated)
		.out_error         (),                                                                                 // (terminated)
		.in_channel        (1'b0),                                                                             // (terminated)
		.out_channel       ()                                                                                  // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (71),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_TRANS_LOCK            (56),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_ORI_BURST_SIZE_H      (95),
		.ST_CHANNEL_W              (17),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) et_leds1_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                    //             clk.clk
		.reset                   (ET_Core_reset_n_reset_bridge_in_reset_reset),                                      //       clk_reset.reset
		.m0_address              (et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (et_leds1_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (et_leds1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (et_leds1_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (et_leds1_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (et_leds1_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (et_leds1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_010_src_ready),                                                       //              cp.ready
		.cp_valid                (cmd_xbar_mux_010_src_valid),                                                       //                .valid
		.cp_data                 (cmd_xbar_mux_010_src_data),                                                        //                .data
		.cp_startofpacket        (cmd_xbar_mux_010_src_startofpacket),                                               //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_010_src_endofpacket),                                                 //                .endofpacket
		.cp_channel              (cmd_xbar_mux_010_src_channel),                                                     //                .channel
		.rf_sink_ready           (et_leds1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (et_leds1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (et_leds1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (et_leds1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (et_leds1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (et_leds1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (et_leds1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (et_leds1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (et_leds1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (et_leds1_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (et_leds1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (et_leds1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (et_leds1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (et_leds1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (et_leds1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (et_leds1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                            //     (terminated)
		.m0_writeresponserequest (),                                                                                 //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                              //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) et_leds1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                    //       clk.clk
		.reset             (ET_Core_reset_n_reset_bridge_in_reset_reset),                                      // clk_reset.reset
		.in_data           (et_leds1_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (et_leds1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (et_leds1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (et_leds1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (et_leds1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (et_leds1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (et_leds1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (et_leds1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (et_leds1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (et_leds1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                            // (terminated)
		.csr_read          (1'b0),                                                                             // (terminated)
		.csr_write         (1'b0),                                                                             // (terminated)
		.csr_readdata      (),                                                                                 // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                             // (terminated)
		.almost_full_data  (),                                                                                 // (terminated)
		.almost_empty_data (),                                                                                 // (terminated)
		.in_empty          (1'b0),                                                                             // (terminated)
		.out_empty         (),                                                                                 // (terminated)
		.in_error          (1'b0),                                                                             // (terminated)
		.out_error         (),                                                                                 // (terminated)
		.in_channel        (1'b0),                                                                             // (terminated)
		.out_channel       ()                                                                                  // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (71),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_TRANS_LOCK            (56),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_ORI_BURST_SIZE_H      (95),
		.ST_CHANNEL_W              (17),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) et_spican_int_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                         //             clk.clk
		.reset                   (ET_Core_reset_n_reset_bridge_in_reset_reset),                                           //       clk_reset.reset
		.m0_address              (et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (et_spican_int_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_011_src_ready),                                                            //              cp.ready
		.cp_valid                (cmd_xbar_mux_011_src_valid),                                                            //                .valid
		.cp_data                 (cmd_xbar_mux_011_src_data),                                                             //                .data
		.cp_startofpacket        (cmd_xbar_mux_011_src_startofpacket),                                                    //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_011_src_endofpacket),                                                      //                .endofpacket
		.cp_channel              (cmd_xbar_mux_011_src_channel),                                                          //                .channel
		.rf_sink_ready           (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                 //     (terminated)
		.m0_writeresponserequest (),                                                                                      //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                   //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) et_spican_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                         //       clk.clk
		.reset             (ET_Core_reset_n_reset_bridge_in_reset_reset),                                           // clk_reset.reset
		.in_data           (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                 // (terminated)
		.csr_read          (1'b0),                                                                                  // (terminated)
		.csr_write         (1'b0),                                                                                  // (terminated)
		.csr_readdata      (),                                                                                      // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                  // (terminated)
		.almost_full_data  (),                                                                                      // (terminated)
		.almost_empty_data (),                                                                                      // (terminated)
		.in_empty          (1'b0),                                                                                  // (terminated)
		.out_empty         (),                                                                                      // (terminated)
		.in_error          (1'b0),                                                                                  // (terminated)
		.out_error         (),                                                                                      // (terminated)
		.in_channel        (1'b0),                                                                                  // (terminated)
		.out_channel       ()                                                                                       // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (71),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_TRANS_LOCK            (56),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_ORI_BURST_SIZE_H      (95),
		.ST_CHANNEL_W              (17),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                                  //             clk.clk
		.reset                   (ET_Core_reset_n_reset_bridge_in_reset_reset),                                                    //       clk_reset.reset
		.m0_address              (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_012_src_ready),                                                                     //              cp.ready
		.cp_valid                (cmd_xbar_mux_012_src_valid),                                                                     //                .valid
		.cp_data                 (cmd_xbar_mux_012_src_data),                                                                      //                .data
		.cp_startofpacket        (cmd_xbar_mux_012_src_startofpacket),                                                             //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_012_src_endofpacket),                                                               //                .endofpacket
		.cp_channel              (cmd_xbar_mux_012_src_channel),                                                                   //                .channel
		.rf_sink_ready           (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                          //     (terminated)
		.m0_writeresponserequest (),                                                                                               //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                            //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                                  //       clk.clk
		.reset             (ET_Core_reset_n_reset_bridge_in_reset_reset),                                                    // clk_reset.reset
		.in_data           (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                          // (terminated)
		.csr_read          (1'b0),                                                                                           // (terminated)
		.csr_write         (1'b0),                                                                                           // (terminated)
		.csr_readdata      (),                                                                                               // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                           // (terminated)
		.almost_full_data  (),                                                                                               // (terminated)
		.almost_empty_data (),                                                                                               // (terminated)
		.in_empty          (1'b0),                                                                                           // (terminated)
		.out_empty         (),                                                                                               // (terminated)
		.in_error          (1'b0),                                                                                           // (terminated)
		.out_error         (),                                                                                               // (terminated)
		.in_channel        (1'b0),                                                                                           // (terminated)
		.out_channel       ()                                                                                                // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (71),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_TRANS_LOCK            (56),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_ORI_BURST_SIZE_H      (95),
		.ST_CHANNEL_W              (17),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) tt_pb_1_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                   //             clk.clk
		.reset                   (ET_Core_reset_n_reset_bridge_in_reset_reset),                                     //       clk_reset.reset
		.m0_address              (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_013_src_ready),                                                      //              cp.ready
		.cp_valid                (cmd_xbar_mux_013_src_valid),                                                      //                .valid
		.cp_data                 (cmd_xbar_mux_013_src_data),                                                       //                .data
		.cp_startofpacket        (cmd_xbar_mux_013_src_startofpacket),                                              //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_013_src_endofpacket),                                                //                .endofpacket
		.cp_channel              (cmd_xbar_mux_013_src_channel),                                                    //                .channel
		.rf_sink_ready           (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                           //     (terminated)
		.m0_writeresponserequest (),                                                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                             //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                   //       clk.clk
		.reset             (ET_Core_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.in_data           (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                           // (terminated)
		.csr_read          (1'b0),                                                                            // (terminated)
		.csr_write         (1'b0),                                                                            // (terminated)
		.csr_readdata      (),                                                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                            // (terminated)
		.almost_full_data  (),                                                                                // (terminated)
		.almost_empty_data (),                                                                                // (terminated)
		.in_empty          (1'b0),                                                                            // (terminated)
		.out_empty         (),                                                                                // (terminated)
		.in_error          (1'b0),                                                                            // (terminated)
		.out_error         (),                                                                                // (terminated)
		.in_channel        (1'b0),                                                                            // (terminated)
		.out_channel       ()                                                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (71),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_TRANS_LOCK            (56),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_ORI_BURST_SIZE_H      (95),
		.ST_CHANNEL_W              (17),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) tt_leds_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                   //             clk.clk
		.reset                   (ET_Core_reset_n_reset_bridge_in_reset_reset),                                     //       clk_reset.reset
		.m0_address              (tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (tt_leds_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (tt_leds_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (tt_leds_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (tt_leds_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (tt_leds_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (tt_leds_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_014_src_ready),                                                      //              cp.ready
		.cp_valid                (cmd_xbar_mux_014_src_valid),                                                      //                .valid
		.cp_data                 (cmd_xbar_mux_014_src_data),                                                       //                .data
		.cp_startofpacket        (cmd_xbar_mux_014_src_startofpacket),                                              //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_014_src_endofpacket),                                                //                .endofpacket
		.cp_channel              (cmd_xbar_mux_014_src_channel),                                                    //                .channel
		.rf_sink_ready           (tt_leds_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (tt_leds_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (tt_leds_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (tt_leds_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (tt_leds_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (tt_leds_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (tt_leds_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (tt_leds_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (tt_leds_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (tt_leds_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (tt_leds_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (tt_leds_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (tt_leds_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (tt_leds_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (tt_leds_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (tt_leds_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                           //     (terminated)
		.m0_writeresponserequest (),                                                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                             //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) tt_leds_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                   //       clk.clk
		.reset             (ET_Core_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.in_data           (tt_leds_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (tt_leds_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (tt_leds_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (tt_leds_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (tt_leds_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (tt_leds_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (tt_leds_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (tt_leds_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (tt_leds_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (tt_leds_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                           // (terminated)
		.csr_read          (1'b0),                                                                            // (terminated)
		.csr_write         (1'b0),                                                                            // (terminated)
		.csr_readdata      (),                                                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                            // (terminated)
		.almost_full_data  (),                                                                                // (terminated)
		.almost_empty_data (),                                                                                // (terminated)
		.in_empty          (1'b0),                                                                            // (terminated)
		.out_empty         (),                                                                                // (terminated)
		.in_error          (1'b0),                                                                            // (terminated)
		.out_error         (),                                                                                // (terminated)
		.in_channel        (1'b0),                                                                            // (terminated)
		.out_channel       ()                                                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (71),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_TRANS_LOCK            (56),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_ORI_BURST_SIZE_H      (95),
		.ST_CHANNEL_W              (17),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) tt_core_memory_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                          //             clk.clk
		.reset                   (ET_Core_reset_n_reset_bridge_in_reset_reset),                                            //       clk_reset.reset
		.m0_address              (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_015_src_ready),                                                             //              cp.ready
		.cp_valid                (cmd_xbar_mux_015_src_valid),                                                             //                .valid
		.cp_data                 (cmd_xbar_mux_015_src_data),                                                              //                .data
		.cp_startofpacket        (cmd_xbar_mux_015_src_startofpacket),                                                     //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_015_src_endofpacket),                                                       //                .endofpacket
		.cp_channel              (cmd_xbar_mux_015_src_channel),                                                           //                .channel
		.rf_sink_ready           (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                  //     (terminated)
		.m0_writeresponserequest (),                                                                                       //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                          //       clk.clk
		.reset             (ET_Core_reset_n_reset_bridge_in_reset_reset),                                            // clk_reset.reset
		.in_data           (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                  // (terminated)
		.csr_read          (1'b0),                                                                                   // (terminated)
		.csr_write         (1'b0),                                                                                   // (terminated)
		.csr_readdata      (),                                                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                   // (terminated)
		.almost_full_data  (),                                                                                       // (terminated)
		.almost_empty_data (),                                                                                       // (terminated)
		.in_empty          (1'b0),                                                                                   // (terminated)
		.out_empty         (),                                                                                       // (terminated)
		.in_error          (1'b0),                                                                                   // (terminated)
		.out_error         (),                                                                                       // (terminated)
		.in_channel        (1'b0),                                                                                   // (terminated)
		.out_channel       ()                                                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (71),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (51),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (52),
		.PKT_TRANS_POSTED          (53),
		.PKT_TRANS_WRITE           (54),
		.PKT_TRANS_READ            (55),
		.PKT_TRANS_LOCK            (56),
		.PKT_SRC_ID_H              (77),
		.PKT_SRC_ID_L              (73),
		.PKT_DEST_ID_H             (82),
		.PKT_DEST_ID_L             (78),
		.PKT_BURSTWRAP_H           (63),
		.PKT_BURSTWRAP_L           (61),
		.PKT_BYTE_CNT_H            (60),
		.PKT_BYTE_CNT_L            (58),
		.PKT_PROTECTION_H          (86),
		.PKT_PROTECTION_L          (84),
		.PKT_RESPONSE_STATUS_H     (92),
		.PKT_RESPONSE_STATUS_L     (91),
		.PKT_BURST_SIZE_H          (66),
		.PKT_BURST_SIZE_L          (64),
		.PKT_ORI_BURST_SIZE_L      (93),
		.PKT_ORI_BURST_SIZE_H      (95),
		.ST_CHANNEL_W              (17),
		.ST_DATA_W                 (96),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) tt_timer_1_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_0_clk_clk),                                                                      //             clk.clk
		.reset                   (ET_Core_reset_n_reset_bridge_in_reset_reset),                                        //       clk_reset.reset
		.m0_address              (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_016_src_ready),                                                         //              cp.ready
		.cp_valid                (cmd_xbar_mux_016_src_valid),                                                         //                .valid
		.cp_data                 (cmd_xbar_mux_016_src_data),                                                          //                .data
		.cp_startofpacket        (cmd_xbar_mux_016_src_startofpacket),                                                 //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_016_src_endofpacket),                                                   //                .endofpacket
		.cp_channel              (cmd_xbar_mux_016_src_channel),                                                       //                .channel
		.rf_sink_ready           (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                              //     (terminated)
		.m0_writeresponserequest (),                                                                                   //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (97),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_0_clk_clk),                                                                      //       clk.clk
		.reset             (ET_Core_reset_n_reset_bridge_in_reset_reset),                                        // clk_reset.reset
		.in_data           (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                              // (terminated)
		.csr_read          (1'b0),                                                                               // (terminated)
		.csr_write         (1'b0),                                                                               // (terminated)
		.csr_readdata      (),                                                                                   // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                               // (terminated)
		.almost_full_data  (),                                                                                   // (terminated)
		.almost_empty_data (),                                                                                   // (terminated)
		.in_empty          (1'b0),                                                                               // (terminated)
		.out_empty         (),                                                                                   // (terminated)
		.in_error          (1'b0),                                                                               // (terminated)
		.out_error         (),                                                                                   // (terminated)
		.in_channel        (1'b0),                                                                               // (terminated)
		.out_channel       ()                                                                                    // (terminated)
	);

	slave_mm_interconnect_0_addr_router addr_router (
		.sink_ready         (et_core_instruction_master_translator_avalon_universal_master_0_agent_cp_ready),         //      sink.ready
		.sink_valid         (et_core_instruction_master_translator_avalon_universal_master_0_agent_cp_valid),         //          .valid
		.sink_data          (et_core_instruction_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.sink_startofpacket (et_core_instruction_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (et_core_instruction_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                          //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset),                                            // clk_reset.reset
		.src_ready          (addr_router_src_ready),                                                                  //       src.ready
		.src_valid          (addr_router_src_valid),                                                                  //          .valid
		.src_data           (addr_router_src_data),                                                                   //          .data
		.src_channel        (addr_router_src_channel),                                                                //          .channel
		.src_startofpacket  (addr_router_src_startofpacket),                                                          //          .startofpacket
		.src_endofpacket    (addr_router_src_endofpacket)                                                             //          .endofpacket
	);

	slave_mm_interconnect_0_addr_router_001 addr_router_001 (
		.sink_ready         (et_core_data_master_translator_avalon_universal_master_0_agent_cp_ready),         //      sink.ready
		.sink_valid         (et_core_data_master_translator_avalon_universal_master_0_agent_cp_valid),         //          .valid
		.sink_data          (et_core_data_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.sink_startofpacket (et_core_data_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (et_core_data_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                   //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.src_ready          (addr_router_001_src_ready),                                                       //       src.ready
		.src_valid          (addr_router_001_src_valid),                                                       //          .valid
		.src_data           (addr_router_001_src_data),                                                        //          .data
		.src_channel        (addr_router_001_src_channel),                                                     //          .channel
		.src_startofpacket  (addr_router_001_src_startofpacket),                                               //          .startofpacket
		.src_endofpacket    (addr_router_001_src_endofpacket)                                                  //          .endofpacket
	);

	slave_mm_interconnect_0_addr_router_002 addr_router_002 (
		.sink_ready         (tt_core_data_master_translator_avalon_universal_master_0_agent_cp_ready),         //      sink.ready
		.sink_valid         (tt_core_data_master_translator_avalon_universal_master_0_agent_cp_valid),         //          .valid
		.sink_data          (tt_core_data_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.sink_startofpacket (tt_core_data_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (tt_core_data_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                   //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.src_ready          (addr_router_002_src_ready),                                                       //       src.ready
		.src_valid          (addr_router_002_src_valid),                                                       //          .valid
		.src_data           (addr_router_002_src_data),                                                        //          .data
		.src_channel        (addr_router_002_src_channel),                                                     //          .channel
		.src_startofpacket  (addr_router_002_src_startofpacket),                                               //          .startofpacket
		.src_endofpacket    (addr_router_002_src_endofpacket)                                                  //          .endofpacket
	);

	slave_mm_interconnect_0_addr_router_003 addr_router_003 (
		.sink_ready         (tt_core_instruction_master_translator_avalon_universal_master_0_agent_cp_ready),         //      sink.ready
		.sink_valid         (tt_core_instruction_master_translator_avalon_universal_master_0_agent_cp_valid),         //          .valid
		.sink_data          (tt_core_instruction_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.sink_startofpacket (tt_core_instruction_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (tt_core_instruction_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                          //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset),                                            // clk_reset.reset
		.src_ready          (addr_router_003_src_ready),                                                              //       src.ready
		.src_valid          (addr_router_003_src_valid),                                                              //          .valid
		.src_data           (addr_router_003_src_data),                                                               //          .data
		.src_channel        (addr_router_003_src_channel),                                                            //          .channel
		.src_startofpacket  (addr_router_003_src_startofpacket),                                                      //          .startofpacket
		.src_endofpacket    (addr_router_003_src_endofpacket)                                                         //          .endofpacket
	);

	slave_mm_interconnect_0_id_router id_router (
		.sink_ready         (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (et_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                        //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset),                                          // clk_reset.reset
		.src_ready          (id_router_src_ready),                                                                  //       src.ready
		.src_valid          (id_router_src_valid),                                                                  //          .valid
		.src_data           (id_router_src_data),                                                                   //          .data
		.src_channel        (id_router_src_channel),                                                                //          .channel
		.src_startofpacket  (id_router_src_startofpacket),                                                          //          .startofpacket
		.src_endofpacket    (id_router_src_endofpacket)                                                             //          .endofpacket
	);

	slave_mm_interconnect_0_id_router id_router_001 (
		.sink_ready         (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (et_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset),                                  // clk_reset.reset
		.src_ready          (id_router_001_src_ready),                                                      //       src.ready
		.src_valid          (id_router_001_src_valid),                                                      //          .valid
		.src_data           (id_router_001_src_data),                                                       //          .data
		.src_channel        (id_router_001_src_channel),                                                    //          .channel
		.src_startofpacket  (id_router_001_src_startofpacket),                                              //          .startofpacket
		.src_endofpacket    (id_router_001_src_endofpacket)                                                 //          .endofpacket
	);

	slave_mm_interconnect_0_id_router_002 id_router_002 (
		.sink_ready         (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (msg_buf_ram_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                             //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset),                               // clk_reset.reset
		.src_ready          (id_router_002_src_ready),                                                   //       src.ready
		.src_valid          (id_router_002_src_valid),                                                   //          .valid
		.src_data           (id_router_002_src_data),                                                    //          .data
		.src_channel        (id_router_002_src_channel),                                                 //          .channel
		.src_startofpacket  (id_router_002_src_startofpacket),                                           //          .startofpacket
		.src_endofpacket    (id_router_002_src_endofpacket)                                              //          .endofpacket
	);

	slave_mm_interconnect_0_id_router_002 id_router_003 (
		.sink_ready         (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (msg_buf_mutex_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                               //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.src_ready          (id_router_003_src_ready),                                                     //       src.ready
		.src_valid          (id_router_003_src_valid),                                                     //          .valid
		.src_data           (id_router_003_src_data),                                                      //          .data
		.src_channel        (id_router_003_src_channel),                                                   //          .channel
		.src_startofpacket  (id_router_003_src_startofpacket),                                             //          .startofpacket
		.src_endofpacket    (id_router_003_src_endofpacket)                                                //          .endofpacket
	);

	slave_mm_interconnect_0_id_router_004 id_router_004 (
		.sink_ready         (pio_0_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (pio_0_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (pio_0_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (pio_0_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (pio_0_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                       //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset),                         // clk_reset.reset
		.src_ready          (id_router_004_src_ready),                                             //       src.ready
		.src_valid          (id_router_004_src_valid),                                             //          .valid
		.src_data           (id_router_004_src_data),                                              //          .data
		.src_channel        (id_router_004_src_channel),                                           //          .channel
		.src_startofpacket  (id_router_004_src_startofpacket),                                     //          .startofpacket
		.src_endofpacket    (id_router_004_src_endofpacket)                                        //          .endofpacket
	);

	slave_mm_interconnect_0_id_router_004 id_router_005 (
		.sink_ready         (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (et_pb_2_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                         //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.src_ready          (id_router_005_src_ready),                                               //       src.ready
		.src_valid          (id_router_005_src_valid),                                               //          .valid
		.src_data           (id_router_005_src_data),                                                //          .data
		.src_channel        (id_router_005_src_channel),                                             //          .channel
		.src_startofpacket  (id_router_005_src_startofpacket),                                       //          .startofpacket
		.src_endofpacket    (id_router_005_src_endofpacket)                                          //          .endofpacket
	);

	slave_mm_interconnect_0_id_router_004 id_router_006 (
		.sink_ready         (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (et_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                         //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.src_ready          (id_router_006_src_ready),                                               //       src.ready
		.src_valid          (id_router_006_src_valid),                                               //          .valid
		.src_data           (id_router_006_src_data),                                                //          .data
		.src_channel        (id_router_006_src_channel),                                             //          .channel
		.src_startofpacket  (id_router_006_src_startofpacket),                                       //          .startofpacket
		.src_endofpacket    (id_router_006_src_endofpacket)                                          //          .endofpacket
	);

	slave_mm_interconnect_0_id_router_004 id_router_007 (
		.sink_ready         (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (jtag_uart_0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                            //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset),                                              // clk_reset.reset
		.src_ready          (id_router_007_src_ready),                                                                  //       src.ready
		.src_valid          (id_router_007_src_valid),                                                                  //          .valid
		.src_data           (id_router_007_src_data),                                                                   //          .data
		.src_channel        (id_router_007_src_channel),                                                                //          .channel
		.src_startofpacket  (id_router_007_src_startofpacket),                                                          //          .startofpacket
		.src_endofpacket    (id_router_007_src_endofpacket)                                                             //          .endofpacket
	);

	slave_mm_interconnect_0_id_router_004 id_router_008 (
		.sink_ready         (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (et_spi_0_spi_control_port_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                        //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset),                                          // clk_reset.reset
		.src_ready          (id_router_008_src_ready),                                                              //       src.ready
		.src_valid          (id_router_008_src_valid),                                                              //          .valid
		.src_data           (id_router_008_src_data),                                                               //          .data
		.src_channel        (id_router_008_src_channel),                                                            //          .channel
		.src_startofpacket  (id_router_008_src_startofpacket),                                                      //          .startofpacket
		.src_endofpacket    (id_router_008_src_endofpacket)                                                         //          .endofpacket
	);

	slave_mm_interconnect_0_id_router_004 id_router_009 (
		.sink_ready         (et_leds2_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (et_leds2_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (et_leds2_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (et_leds2_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (et_leds2_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                          //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset),                            // clk_reset.reset
		.src_ready          (id_router_009_src_ready),                                                //       src.ready
		.src_valid          (id_router_009_src_valid),                                                //          .valid
		.src_data           (id_router_009_src_data),                                                 //          .data
		.src_channel        (id_router_009_src_channel),                                              //          .channel
		.src_startofpacket  (id_router_009_src_startofpacket),                                        //          .startofpacket
		.src_endofpacket    (id_router_009_src_endofpacket)                                           //          .endofpacket
	);

	slave_mm_interconnect_0_id_router_004 id_router_010 (
		.sink_ready         (et_leds1_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (et_leds1_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (et_leds1_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (et_leds1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (et_leds1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                          //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset),                            // clk_reset.reset
		.src_ready          (id_router_010_src_ready),                                                //       src.ready
		.src_valid          (id_router_010_src_valid),                                                //          .valid
		.src_data           (id_router_010_src_data),                                                 //          .data
		.src_channel        (id_router_010_src_channel),                                              //          .channel
		.src_startofpacket  (id_router_010_src_startofpacket),                                        //          .startofpacket
		.src_endofpacket    (id_router_010_src_endofpacket)                                           //          .endofpacket
	);

	slave_mm_interconnect_0_id_router_004 id_router_011 (
		.sink_ready         (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (et_spican_int_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                               //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.src_ready          (id_router_011_src_ready),                                                     //       src.ready
		.src_valid          (id_router_011_src_valid),                                                     //          .valid
		.src_data           (id_router_011_src_data),                                                      //          .data
		.src_channel        (id_router_011_src_channel),                                                   //          .channel
		.src_startofpacket  (id_router_011_src_startofpacket),                                             //          .startofpacket
		.src_endofpacket    (id_router_011_src_endofpacket)                                                //          .endofpacket
	);

	slave_mm_interconnect_0_id_router_012 id_router_012 (
		.sink_ready         (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (tt_core_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                        //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset),                                          // clk_reset.reset
		.src_ready          (id_router_012_src_ready),                                                              //       src.ready
		.src_valid          (id_router_012_src_valid),                                                              //          .valid
		.src_data           (id_router_012_src_data),                                                               //          .data
		.src_channel        (id_router_012_src_channel),                                                            //          .channel
		.src_startofpacket  (id_router_012_src_startofpacket),                                                      //          .startofpacket
		.src_endofpacket    (id_router_012_src_endofpacket)                                                         //          .endofpacket
	);

	slave_mm_interconnect_0_id_router_013 id_router_013 (
		.sink_ready         (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (tt_pb_1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                         //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.src_ready          (id_router_013_src_ready),                                               //       src.ready
		.src_valid          (id_router_013_src_valid),                                               //          .valid
		.src_data           (id_router_013_src_data),                                                //          .data
		.src_channel        (id_router_013_src_channel),                                             //          .channel
		.src_startofpacket  (id_router_013_src_startofpacket),                                       //          .startofpacket
		.src_endofpacket    (id_router_013_src_endofpacket)                                          //          .endofpacket
	);

	slave_mm_interconnect_0_id_router_013 id_router_014 (
		.sink_ready         (tt_leds_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (tt_leds_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (tt_leds_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (tt_leds_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (tt_leds_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                         //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.src_ready          (id_router_014_src_ready),                                               //       src.ready
		.src_valid          (id_router_014_src_valid),                                               //          .valid
		.src_data           (id_router_014_src_data),                                                //          .data
		.src_channel        (id_router_014_src_channel),                                             //          .channel
		.src_startofpacket  (id_router_014_src_startofpacket),                                       //          .startofpacket
		.src_endofpacket    (id_router_014_src_endofpacket)                                          //          .endofpacket
	);

	slave_mm_interconnect_0_id_router_012 id_router_015 (
		.sink_ready         (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (tt_core_memory_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                                //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset),                                  // clk_reset.reset
		.src_ready          (id_router_015_src_ready),                                                      //       src.ready
		.src_valid          (id_router_015_src_valid),                                                      //          .valid
		.src_data           (id_router_015_src_data),                                                       //          .data
		.src_channel        (id_router_015_src_channel),                                                    //          .channel
		.src_startofpacket  (id_router_015_src_startofpacket),                                              //          .startofpacket
		.src_endofpacket    (id_router_015_src_endofpacket)                                                 //          .endofpacket
	);

	slave_mm_interconnect_0_id_router_013 id_router_016 (
		.sink_ready         (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (tt_timer_1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                            //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset),                              // clk_reset.reset
		.src_ready          (id_router_016_src_ready),                                                  //       src.ready
		.src_valid          (id_router_016_src_valid),                                                  //          .valid
		.src_data           (id_router_016_src_data),                                                   //          .data
		.src_channel        (id_router_016_src_channel),                                                //          .channel
		.src_startofpacket  (id_router_016_src_startofpacket),                                          //          .startofpacket
		.src_endofpacket    (id_router_016_src_endofpacket)                                             //          .endofpacket
	);

	slave_mm_interconnect_0_cmd_xbar_demux cmd_xbar_demux (
		.clk                (clk_0_clk_clk),                               //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (addr_router_src_ready),                       //      sink.ready
		.sink_channel       (addr_router_src_channel),                     //          .channel
		.sink_data          (addr_router_src_data),                        //          .data
		.sink_startofpacket (addr_router_src_startofpacket),               //          .startofpacket
		.sink_endofpacket   (addr_router_src_endofpacket),                 //          .endofpacket
		.sink_valid         (addr_router_src_valid),                       //          .valid
		.src0_ready         (cmd_xbar_demux_src0_ready),                   //      src0.ready
		.src0_valid         (cmd_xbar_demux_src0_valid),                   //          .valid
		.src0_data          (cmd_xbar_demux_src0_data),                    //          .data
		.src0_channel       (cmd_xbar_demux_src0_channel),                 //          .channel
		.src0_startofpacket (cmd_xbar_demux_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (cmd_xbar_demux_src0_endofpacket),             //          .endofpacket
		.src1_ready         (cmd_xbar_demux_src1_ready),                   //      src1.ready
		.src1_valid         (cmd_xbar_demux_src1_valid),                   //          .valid
		.src1_data          (cmd_xbar_demux_src1_data),                    //          .data
		.src1_channel       (cmd_xbar_demux_src1_channel),                 //          .channel
		.src1_startofpacket (cmd_xbar_demux_src1_startofpacket),           //          .startofpacket
		.src1_endofpacket   (cmd_xbar_demux_src1_endofpacket)              //          .endofpacket
	);

	slave_mm_interconnect_0_cmd_xbar_demux_001 cmd_xbar_demux_001 (
		.clk                 (clk_0_clk_clk),                               //       clk.clk
		.reset               (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready          (addr_router_001_src_ready),                   //      sink.ready
		.sink_channel        (addr_router_001_src_channel),                 //          .channel
		.sink_data           (addr_router_001_src_data),                    //          .data
		.sink_startofpacket  (addr_router_001_src_startofpacket),           //          .startofpacket
		.sink_endofpacket    (addr_router_001_src_endofpacket),             //          .endofpacket
		.sink_valid          (addr_router_001_src_valid),                   //          .valid
		.src0_ready          (cmd_xbar_demux_001_src0_ready),               //      src0.ready
		.src0_valid          (cmd_xbar_demux_001_src0_valid),               //          .valid
		.src0_data           (cmd_xbar_demux_001_src0_data),                //          .data
		.src0_channel        (cmd_xbar_demux_001_src0_channel),             //          .channel
		.src0_startofpacket  (cmd_xbar_demux_001_src0_startofpacket),       //          .startofpacket
		.src0_endofpacket    (cmd_xbar_demux_001_src0_endofpacket),         //          .endofpacket
		.src1_ready          (cmd_xbar_demux_001_src1_ready),               //      src1.ready
		.src1_valid          (cmd_xbar_demux_001_src1_valid),               //          .valid
		.src1_data           (cmd_xbar_demux_001_src1_data),                //          .data
		.src1_channel        (cmd_xbar_demux_001_src1_channel),             //          .channel
		.src1_startofpacket  (cmd_xbar_demux_001_src1_startofpacket),       //          .startofpacket
		.src1_endofpacket    (cmd_xbar_demux_001_src1_endofpacket),         //          .endofpacket
		.src2_ready          (cmd_xbar_demux_001_src2_ready),               //      src2.ready
		.src2_valid          (cmd_xbar_demux_001_src2_valid),               //          .valid
		.src2_data           (cmd_xbar_demux_001_src2_data),                //          .data
		.src2_channel        (cmd_xbar_demux_001_src2_channel),             //          .channel
		.src2_startofpacket  (cmd_xbar_demux_001_src2_startofpacket),       //          .startofpacket
		.src2_endofpacket    (cmd_xbar_demux_001_src2_endofpacket),         //          .endofpacket
		.src3_ready          (cmd_xbar_demux_001_src3_ready),               //      src3.ready
		.src3_valid          (cmd_xbar_demux_001_src3_valid),               //          .valid
		.src3_data           (cmd_xbar_demux_001_src3_data),                //          .data
		.src3_channel        (cmd_xbar_demux_001_src3_channel),             //          .channel
		.src3_startofpacket  (cmd_xbar_demux_001_src3_startofpacket),       //          .startofpacket
		.src3_endofpacket    (cmd_xbar_demux_001_src3_endofpacket),         //          .endofpacket
		.src4_ready          (cmd_xbar_demux_001_src4_ready),               //      src4.ready
		.src4_valid          (cmd_xbar_demux_001_src4_valid),               //          .valid
		.src4_data           (cmd_xbar_demux_001_src4_data),                //          .data
		.src4_channel        (cmd_xbar_demux_001_src4_channel),             //          .channel
		.src4_startofpacket  (cmd_xbar_demux_001_src4_startofpacket),       //          .startofpacket
		.src4_endofpacket    (cmd_xbar_demux_001_src4_endofpacket),         //          .endofpacket
		.src5_ready          (cmd_xbar_demux_001_src5_ready),               //      src5.ready
		.src5_valid          (cmd_xbar_demux_001_src5_valid),               //          .valid
		.src5_data           (cmd_xbar_demux_001_src5_data),                //          .data
		.src5_channel        (cmd_xbar_demux_001_src5_channel),             //          .channel
		.src5_startofpacket  (cmd_xbar_demux_001_src5_startofpacket),       //          .startofpacket
		.src5_endofpacket    (cmd_xbar_demux_001_src5_endofpacket),         //          .endofpacket
		.src6_ready          (cmd_xbar_demux_001_src6_ready),               //      src6.ready
		.src6_valid          (cmd_xbar_demux_001_src6_valid),               //          .valid
		.src6_data           (cmd_xbar_demux_001_src6_data),                //          .data
		.src6_channel        (cmd_xbar_demux_001_src6_channel),             //          .channel
		.src6_startofpacket  (cmd_xbar_demux_001_src6_startofpacket),       //          .startofpacket
		.src6_endofpacket    (cmd_xbar_demux_001_src6_endofpacket),         //          .endofpacket
		.src7_ready          (cmd_xbar_demux_001_src7_ready),               //      src7.ready
		.src7_valid          (cmd_xbar_demux_001_src7_valid),               //          .valid
		.src7_data           (cmd_xbar_demux_001_src7_data),                //          .data
		.src7_channel        (cmd_xbar_demux_001_src7_channel),             //          .channel
		.src7_startofpacket  (cmd_xbar_demux_001_src7_startofpacket),       //          .startofpacket
		.src7_endofpacket    (cmd_xbar_demux_001_src7_endofpacket),         //          .endofpacket
		.src8_ready          (cmd_xbar_demux_001_src8_ready),               //      src8.ready
		.src8_valid          (cmd_xbar_demux_001_src8_valid),               //          .valid
		.src8_data           (cmd_xbar_demux_001_src8_data),                //          .data
		.src8_channel        (cmd_xbar_demux_001_src8_channel),             //          .channel
		.src8_startofpacket  (cmd_xbar_demux_001_src8_startofpacket),       //          .startofpacket
		.src8_endofpacket    (cmd_xbar_demux_001_src8_endofpacket),         //          .endofpacket
		.src9_ready          (cmd_xbar_demux_001_src9_ready),               //      src9.ready
		.src9_valid          (cmd_xbar_demux_001_src9_valid),               //          .valid
		.src9_data           (cmd_xbar_demux_001_src9_data),                //          .data
		.src9_channel        (cmd_xbar_demux_001_src9_channel),             //          .channel
		.src9_startofpacket  (cmd_xbar_demux_001_src9_startofpacket),       //          .startofpacket
		.src9_endofpacket    (cmd_xbar_demux_001_src9_endofpacket),         //          .endofpacket
		.src10_ready         (cmd_xbar_demux_001_src10_ready),              //     src10.ready
		.src10_valid         (cmd_xbar_demux_001_src10_valid),              //          .valid
		.src10_data          (cmd_xbar_demux_001_src10_data),               //          .data
		.src10_channel       (cmd_xbar_demux_001_src10_channel),            //          .channel
		.src10_startofpacket (cmd_xbar_demux_001_src10_startofpacket),      //          .startofpacket
		.src10_endofpacket   (cmd_xbar_demux_001_src10_endofpacket),        //          .endofpacket
		.src11_ready         (cmd_xbar_demux_001_src11_ready),              //     src11.ready
		.src11_valid         (cmd_xbar_demux_001_src11_valid),              //          .valid
		.src11_data          (cmd_xbar_demux_001_src11_data),               //          .data
		.src11_channel       (cmd_xbar_demux_001_src11_channel),            //          .channel
		.src11_startofpacket (cmd_xbar_demux_001_src11_startofpacket),      //          .startofpacket
		.src11_endofpacket   (cmd_xbar_demux_001_src11_endofpacket)         //          .endofpacket
	);

	slave_mm_interconnect_0_cmd_xbar_demux_002 cmd_xbar_demux_002 (
		.clk                (clk_0_clk_clk),                               //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (addr_router_002_src_ready),                   //      sink.ready
		.sink_channel       (addr_router_002_src_channel),                 //          .channel
		.sink_data          (addr_router_002_src_data),                    //          .data
		.sink_startofpacket (addr_router_002_src_startofpacket),           //          .startofpacket
		.sink_endofpacket   (addr_router_002_src_endofpacket),             //          .endofpacket
		.sink_valid         (addr_router_002_src_valid),                   //          .valid
		.src0_ready         (cmd_xbar_demux_002_src0_ready),               //      src0.ready
		.src0_valid         (cmd_xbar_demux_002_src0_valid),               //          .valid
		.src0_data          (cmd_xbar_demux_002_src0_data),                //          .data
		.src0_channel       (cmd_xbar_demux_002_src0_channel),             //          .channel
		.src0_startofpacket (cmd_xbar_demux_002_src0_startofpacket),       //          .startofpacket
		.src0_endofpacket   (cmd_xbar_demux_002_src0_endofpacket),         //          .endofpacket
		.src1_ready         (cmd_xbar_demux_002_src1_ready),               //      src1.ready
		.src1_valid         (cmd_xbar_demux_002_src1_valid),               //          .valid
		.src1_data          (cmd_xbar_demux_002_src1_data),                //          .data
		.src1_channel       (cmd_xbar_demux_002_src1_channel),             //          .channel
		.src1_startofpacket (cmd_xbar_demux_002_src1_startofpacket),       //          .startofpacket
		.src1_endofpacket   (cmd_xbar_demux_002_src1_endofpacket),         //          .endofpacket
		.src2_ready         (cmd_xbar_demux_002_src2_ready),               //      src2.ready
		.src2_valid         (cmd_xbar_demux_002_src2_valid),               //          .valid
		.src2_data          (cmd_xbar_demux_002_src2_data),                //          .data
		.src2_channel       (cmd_xbar_demux_002_src2_channel),             //          .channel
		.src2_startofpacket (cmd_xbar_demux_002_src2_startofpacket),       //          .startofpacket
		.src2_endofpacket   (cmd_xbar_demux_002_src2_endofpacket),         //          .endofpacket
		.src3_ready         (cmd_xbar_demux_002_src3_ready),               //      src3.ready
		.src3_valid         (cmd_xbar_demux_002_src3_valid),               //          .valid
		.src3_data          (cmd_xbar_demux_002_src3_data),                //          .data
		.src3_channel       (cmd_xbar_demux_002_src3_channel),             //          .channel
		.src3_startofpacket (cmd_xbar_demux_002_src3_startofpacket),       //          .startofpacket
		.src3_endofpacket   (cmd_xbar_demux_002_src3_endofpacket),         //          .endofpacket
		.src4_ready         (cmd_xbar_demux_002_src4_ready),               //      src4.ready
		.src4_valid         (cmd_xbar_demux_002_src4_valid),               //          .valid
		.src4_data          (cmd_xbar_demux_002_src4_data),                //          .data
		.src4_channel       (cmd_xbar_demux_002_src4_channel),             //          .channel
		.src4_startofpacket (cmd_xbar_demux_002_src4_startofpacket),       //          .startofpacket
		.src4_endofpacket   (cmd_xbar_demux_002_src4_endofpacket),         //          .endofpacket
		.src5_ready         (cmd_xbar_demux_002_src5_ready),               //      src5.ready
		.src5_valid         (cmd_xbar_demux_002_src5_valid),               //          .valid
		.src5_data          (cmd_xbar_demux_002_src5_data),                //          .data
		.src5_channel       (cmd_xbar_demux_002_src5_channel),             //          .channel
		.src5_startofpacket (cmd_xbar_demux_002_src5_startofpacket),       //          .startofpacket
		.src5_endofpacket   (cmd_xbar_demux_002_src5_endofpacket),         //          .endofpacket
		.src6_ready         (cmd_xbar_demux_002_src6_ready),               //      src6.ready
		.src6_valid         (cmd_xbar_demux_002_src6_valid),               //          .valid
		.src6_data          (cmd_xbar_demux_002_src6_data),                //          .data
		.src6_channel       (cmd_xbar_demux_002_src6_channel),             //          .channel
		.src6_startofpacket (cmd_xbar_demux_002_src6_startofpacket),       //          .startofpacket
		.src6_endofpacket   (cmd_xbar_demux_002_src6_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_cmd_xbar_demux cmd_xbar_demux_003 (
		.clk                (clk_0_clk_clk),                               //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (addr_router_003_src_ready),                   //      sink.ready
		.sink_channel       (addr_router_003_src_channel),                 //          .channel
		.sink_data          (addr_router_003_src_data),                    //          .data
		.sink_startofpacket (addr_router_003_src_startofpacket),           //          .startofpacket
		.sink_endofpacket   (addr_router_003_src_endofpacket),             //          .endofpacket
		.sink_valid         (addr_router_003_src_valid),                   //          .valid
		.src0_ready         (cmd_xbar_demux_003_src0_ready),               //      src0.ready
		.src0_valid         (cmd_xbar_demux_003_src0_valid),               //          .valid
		.src0_data          (cmd_xbar_demux_003_src0_data),                //          .data
		.src0_channel       (cmd_xbar_demux_003_src0_channel),             //          .channel
		.src0_startofpacket (cmd_xbar_demux_003_src0_startofpacket),       //          .startofpacket
		.src0_endofpacket   (cmd_xbar_demux_003_src0_endofpacket),         //          .endofpacket
		.src1_ready         (cmd_xbar_demux_003_src1_ready),               //      src1.ready
		.src1_valid         (cmd_xbar_demux_003_src1_valid),               //          .valid
		.src1_data          (cmd_xbar_demux_003_src1_data),                //          .data
		.src1_channel       (cmd_xbar_demux_003_src1_channel),             //          .channel
		.src1_startofpacket (cmd_xbar_demux_003_src1_startofpacket),       //          .startofpacket
		.src1_endofpacket   (cmd_xbar_demux_003_src1_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_cmd_xbar_mux cmd_xbar_mux (
		.clk                 (clk_0_clk_clk),                               //       clk.clk
		.reset               (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_src_ready),                      //       src.ready
		.src_valid           (cmd_xbar_mux_src_valid),                      //          .valid
		.src_data            (cmd_xbar_mux_src_data),                       //          .data
		.src_channel         (cmd_xbar_mux_src_channel),                    //          .channel
		.src_startofpacket   (cmd_xbar_mux_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_src_endofpacket),                //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src0_ready),                   //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src0_valid),                   //          .valid
		.sink0_channel       (cmd_xbar_demux_src0_channel),                 //          .channel
		.sink0_data          (cmd_xbar_demux_src0_data),                    //          .data
		.sink0_startofpacket (cmd_xbar_demux_src0_startofpacket),           //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src0_endofpacket),             //          .endofpacket
		.sink1_ready         (cmd_xbar_demux_001_src0_ready),               //     sink1.ready
		.sink1_valid         (cmd_xbar_demux_001_src0_valid),               //          .valid
		.sink1_channel       (cmd_xbar_demux_001_src0_channel),             //          .channel
		.sink1_data          (cmd_xbar_demux_001_src0_data),                //          .data
		.sink1_startofpacket (cmd_xbar_demux_001_src0_startofpacket),       //          .startofpacket
		.sink1_endofpacket   (cmd_xbar_demux_001_src0_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_cmd_xbar_mux cmd_xbar_mux_001 (
		.clk                 (clk_0_clk_clk),                               //       clk.clk
		.reset               (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_001_src_ready),                  //       src.ready
		.src_valid           (cmd_xbar_mux_001_src_valid),                  //          .valid
		.src_data            (cmd_xbar_mux_001_src_data),                   //          .data
		.src_channel         (cmd_xbar_mux_001_src_channel),                //          .channel
		.src_startofpacket   (cmd_xbar_mux_001_src_startofpacket),          //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_001_src_endofpacket),            //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src1_ready),                   //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src1_valid),                   //          .valid
		.sink0_channel       (cmd_xbar_demux_src1_channel),                 //          .channel
		.sink0_data          (cmd_xbar_demux_src1_data),                    //          .data
		.sink0_startofpacket (cmd_xbar_demux_src1_startofpacket),           //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src1_endofpacket),             //          .endofpacket
		.sink1_ready         (cmd_xbar_demux_001_src1_ready),               //     sink1.ready
		.sink1_valid         (cmd_xbar_demux_001_src1_valid),               //          .valid
		.sink1_channel       (cmd_xbar_demux_001_src1_channel),             //          .channel
		.sink1_data          (cmd_xbar_demux_001_src1_data),                //          .data
		.sink1_startofpacket (cmd_xbar_demux_001_src1_startofpacket),       //          .startofpacket
		.sink1_endofpacket   (cmd_xbar_demux_001_src1_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_cmd_xbar_mux cmd_xbar_mux_002 (
		.clk                 (clk_0_clk_clk),                               //       clk.clk
		.reset               (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_002_src_ready),                  //       src.ready
		.src_valid           (cmd_xbar_mux_002_src_valid),                  //          .valid
		.src_data            (cmd_xbar_mux_002_src_data),                   //          .data
		.src_channel         (cmd_xbar_mux_002_src_channel),                //          .channel
		.src_startofpacket   (cmd_xbar_mux_002_src_startofpacket),          //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_002_src_endofpacket),            //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src2_ready),               //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src2_valid),               //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src2_channel),             //          .channel
		.sink0_data          (cmd_xbar_demux_001_src2_data),                //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src2_startofpacket),       //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src2_endofpacket),         //          .endofpacket
		.sink1_ready         (cmd_xbar_demux_002_src0_ready),               //     sink1.ready
		.sink1_valid         (cmd_xbar_demux_002_src0_valid),               //          .valid
		.sink1_channel       (cmd_xbar_demux_002_src0_channel),             //          .channel
		.sink1_data          (cmd_xbar_demux_002_src0_data),                //          .data
		.sink1_startofpacket (cmd_xbar_demux_002_src0_startofpacket),       //          .startofpacket
		.sink1_endofpacket   (cmd_xbar_demux_002_src0_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_cmd_xbar_mux cmd_xbar_mux_003 (
		.clk                 (clk_0_clk_clk),                               //       clk.clk
		.reset               (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_003_src_ready),                  //       src.ready
		.src_valid           (cmd_xbar_mux_003_src_valid),                  //          .valid
		.src_data            (cmd_xbar_mux_003_src_data),                   //          .data
		.src_channel         (cmd_xbar_mux_003_src_channel),                //          .channel
		.src_startofpacket   (cmd_xbar_mux_003_src_startofpacket),          //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_003_src_endofpacket),            //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src3_ready),               //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src3_valid),               //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src3_channel),             //          .channel
		.sink0_data          (cmd_xbar_demux_001_src3_data),                //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src3_startofpacket),       //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src3_endofpacket),         //          .endofpacket
		.sink1_ready         (cmd_xbar_demux_002_src1_ready),               //     sink1.ready
		.sink1_valid         (cmd_xbar_demux_002_src1_valid),               //          .valid
		.sink1_channel       (cmd_xbar_demux_002_src1_channel),             //          .channel
		.sink1_data          (cmd_xbar_demux_002_src1_data),                //          .data
		.sink1_startofpacket (cmd_xbar_demux_002_src1_startofpacket),       //          .startofpacket
		.sink1_endofpacket   (cmd_xbar_demux_002_src1_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_cmd_xbar_mux_004 cmd_xbar_mux_004 (
		.clk                 (clk_0_clk_clk),                               //       clk.clk
		.reset               (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_004_src_ready),                  //       src.ready
		.src_valid           (cmd_xbar_mux_004_src_valid),                  //          .valid
		.src_data            (cmd_xbar_mux_004_src_data),                   //          .data
		.src_channel         (cmd_xbar_mux_004_src_channel),                //          .channel
		.src_startofpacket   (cmd_xbar_mux_004_src_startofpacket),          //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_004_src_endofpacket),            //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src4_ready),               //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src4_valid),               //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src4_channel),             //          .channel
		.sink0_data          (cmd_xbar_demux_001_src4_data),                //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src4_startofpacket),       //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src4_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_cmd_xbar_mux_004 cmd_xbar_mux_005 (
		.clk                 (clk_0_clk_clk),                               //       clk.clk
		.reset               (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_005_src_ready),                  //       src.ready
		.src_valid           (cmd_xbar_mux_005_src_valid),                  //          .valid
		.src_data            (cmd_xbar_mux_005_src_data),                   //          .data
		.src_channel         (cmd_xbar_mux_005_src_channel),                //          .channel
		.src_startofpacket   (cmd_xbar_mux_005_src_startofpacket),          //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_005_src_endofpacket),            //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src5_ready),               //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src5_valid),               //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src5_channel),             //          .channel
		.sink0_data          (cmd_xbar_demux_001_src5_data),                //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src5_startofpacket),       //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src5_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_cmd_xbar_mux_004 cmd_xbar_mux_006 (
		.clk                 (clk_0_clk_clk),                               //       clk.clk
		.reset               (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_006_src_ready),                  //       src.ready
		.src_valid           (cmd_xbar_mux_006_src_valid),                  //          .valid
		.src_data            (cmd_xbar_mux_006_src_data),                   //          .data
		.src_channel         (cmd_xbar_mux_006_src_channel),                //          .channel
		.src_startofpacket   (cmd_xbar_mux_006_src_startofpacket),          //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_006_src_endofpacket),            //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src6_ready),               //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src6_valid),               //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src6_channel),             //          .channel
		.sink0_data          (cmd_xbar_demux_001_src6_data),                //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src6_startofpacket),       //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src6_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_cmd_xbar_mux_004 cmd_xbar_mux_007 (
		.clk                 (clk_0_clk_clk),                               //       clk.clk
		.reset               (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_007_src_ready),                  //       src.ready
		.src_valid           (cmd_xbar_mux_007_src_valid),                  //          .valid
		.src_data            (cmd_xbar_mux_007_src_data),                   //          .data
		.src_channel         (cmd_xbar_mux_007_src_channel),                //          .channel
		.src_startofpacket   (cmd_xbar_mux_007_src_startofpacket),          //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_007_src_endofpacket),            //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src7_ready),               //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src7_valid),               //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src7_channel),             //          .channel
		.sink0_data          (cmd_xbar_demux_001_src7_data),                //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src7_startofpacket),       //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src7_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_cmd_xbar_mux_004 cmd_xbar_mux_008 (
		.clk                 (clk_0_clk_clk),                               //       clk.clk
		.reset               (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_008_src_ready),                  //       src.ready
		.src_valid           (cmd_xbar_mux_008_src_valid),                  //          .valid
		.src_data            (cmd_xbar_mux_008_src_data),                   //          .data
		.src_channel         (cmd_xbar_mux_008_src_channel),                //          .channel
		.src_startofpacket   (cmd_xbar_mux_008_src_startofpacket),          //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_008_src_endofpacket),            //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src8_ready),               //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src8_valid),               //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src8_channel),             //          .channel
		.sink0_data          (cmd_xbar_demux_001_src8_data),                //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src8_startofpacket),       //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src8_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_cmd_xbar_mux_004 cmd_xbar_mux_009 (
		.clk                 (clk_0_clk_clk),                               //       clk.clk
		.reset               (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_009_src_ready),                  //       src.ready
		.src_valid           (cmd_xbar_mux_009_src_valid),                  //          .valid
		.src_data            (cmd_xbar_mux_009_src_data),                   //          .data
		.src_channel         (cmd_xbar_mux_009_src_channel),                //          .channel
		.src_startofpacket   (cmd_xbar_mux_009_src_startofpacket),          //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_009_src_endofpacket),            //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src9_ready),               //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src9_valid),               //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src9_channel),             //          .channel
		.sink0_data          (cmd_xbar_demux_001_src9_data),                //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src9_startofpacket),       //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src9_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_cmd_xbar_mux_004 cmd_xbar_mux_010 (
		.clk                 (clk_0_clk_clk),                               //       clk.clk
		.reset               (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_010_src_ready),                  //       src.ready
		.src_valid           (cmd_xbar_mux_010_src_valid),                  //          .valid
		.src_data            (cmd_xbar_mux_010_src_data),                   //          .data
		.src_channel         (cmd_xbar_mux_010_src_channel),                //          .channel
		.src_startofpacket   (cmd_xbar_mux_010_src_startofpacket),          //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_010_src_endofpacket),            //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src10_ready),              //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src10_valid),              //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src10_channel),            //          .channel
		.sink0_data          (cmd_xbar_demux_001_src10_data),               //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src10_startofpacket),      //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src10_endofpacket)         //          .endofpacket
	);

	slave_mm_interconnect_0_cmd_xbar_mux_004 cmd_xbar_mux_011 (
		.clk                 (clk_0_clk_clk),                               //       clk.clk
		.reset               (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_011_src_ready),                  //       src.ready
		.src_valid           (cmd_xbar_mux_011_src_valid),                  //          .valid
		.src_data            (cmd_xbar_mux_011_src_data),                   //          .data
		.src_channel         (cmd_xbar_mux_011_src_channel),                //          .channel
		.src_startofpacket   (cmd_xbar_mux_011_src_startofpacket),          //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_011_src_endofpacket),            //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src11_ready),              //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src11_valid),              //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src11_channel),            //          .channel
		.sink0_data          (cmd_xbar_demux_001_src11_data),               //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src11_startofpacket),      //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src11_endofpacket)         //          .endofpacket
	);

	slave_mm_interconnect_0_cmd_xbar_mux cmd_xbar_mux_012 (
		.clk                 (clk_0_clk_clk),                               //       clk.clk
		.reset               (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_012_src_ready),                  //       src.ready
		.src_valid           (cmd_xbar_mux_012_src_valid),                  //          .valid
		.src_data            (cmd_xbar_mux_012_src_data),                   //          .data
		.src_channel         (cmd_xbar_mux_012_src_channel),                //          .channel
		.src_startofpacket   (cmd_xbar_mux_012_src_startofpacket),          //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_012_src_endofpacket),            //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_002_src2_ready),               //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_002_src2_valid),               //          .valid
		.sink0_channel       (cmd_xbar_demux_002_src2_channel),             //          .channel
		.sink0_data          (cmd_xbar_demux_002_src2_data),                //          .data
		.sink0_startofpacket (cmd_xbar_demux_002_src2_startofpacket),       //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_002_src2_endofpacket),         //          .endofpacket
		.sink1_ready         (cmd_xbar_demux_003_src0_ready),               //     sink1.ready
		.sink1_valid         (cmd_xbar_demux_003_src0_valid),               //          .valid
		.sink1_channel       (cmd_xbar_demux_003_src0_channel),             //          .channel
		.sink1_data          (cmd_xbar_demux_003_src0_data),                //          .data
		.sink1_startofpacket (cmd_xbar_demux_003_src0_startofpacket),       //          .startofpacket
		.sink1_endofpacket   (cmd_xbar_demux_003_src0_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_cmd_xbar_mux_004 cmd_xbar_mux_013 (
		.clk                 (clk_0_clk_clk),                               //       clk.clk
		.reset               (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_013_src_ready),                  //       src.ready
		.src_valid           (cmd_xbar_mux_013_src_valid),                  //          .valid
		.src_data            (cmd_xbar_mux_013_src_data),                   //          .data
		.src_channel         (cmd_xbar_mux_013_src_channel),                //          .channel
		.src_startofpacket   (cmd_xbar_mux_013_src_startofpacket),          //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_013_src_endofpacket),            //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_002_src3_ready),               //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_002_src3_valid),               //          .valid
		.sink0_channel       (cmd_xbar_demux_002_src3_channel),             //          .channel
		.sink0_data          (cmd_xbar_demux_002_src3_data),                //          .data
		.sink0_startofpacket (cmd_xbar_demux_002_src3_startofpacket),       //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_002_src3_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_cmd_xbar_mux_004 cmd_xbar_mux_014 (
		.clk                 (clk_0_clk_clk),                               //       clk.clk
		.reset               (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_014_src_ready),                  //       src.ready
		.src_valid           (cmd_xbar_mux_014_src_valid),                  //          .valid
		.src_data            (cmd_xbar_mux_014_src_data),                   //          .data
		.src_channel         (cmd_xbar_mux_014_src_channel),                //          .channel
		.src_startofpacket   (cmd_xbar_mux_014_src_startofpacket),          //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_014_src_endofpacket),            //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_002_src4_ready),               //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_002_src4_valid),               //          .valid
		.sink0_channel       (cmd_xbar_demux_002_src4_channel),             //          .channel
		.sink0_data          (cmd_xbar_demux_002_src4_data),                //          .data
		.sink0_startofpacket (cmd_xbar_demux_002_src4_startofpacket),       //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_002_src4_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_cmd_xbar_mux cmd_xbar_mux_015 (
		.clk                 (clk_0_clk_clk),                               //       clk.clk
		.reset               (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_015_src_ready),                  //       src.ready
		.src_valid           (cmd_xbar_mux_015_src_valid),                  //          .valid
		.src_data            (cmd_xbar_mux_015_src_data),                   //          .data
		.src_channel         (cmd_xbar_mux_015_src_channel),                //          .channel
		.src_startofpacket   (cmd_xbar_mux_015_src_startofpacket),          //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_015_src_endofpacket),            //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_002_src5_ready),               //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_002_src5_valid),               //          .valid
		.sink0_channel       (cmd_xbar_demux_002_src5_channel),             //          .channel
		.sink0_data          (cmd_xbar_demux_002_src5_data),                //          .data
		.sink0_startofpacket (cmd_xbar_demux_002_src5_startofpacket),       //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_002_src5_endofpacket),         //          .endofpacket
		.sink1_ready         (cmd_xbar_demux_003_src1_ready),               //     sink1.ready
		.sink1_valid         (cmd_xbar_demux_003_src1_valid),               //          .valid
		.sink1_channel       (cmd_xbar_demux_003_src1_channel),             //          .channel
		.sink1_data          (cmd_xbar_demux_003_src1_data),                //          .data
		.sink1_startofpacket (cmd_xbar_demux_003_src1_startofpacket),       //          .startofpacket
		.sink1_endofpacket   (cmd_xbar_demux_003_src1_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_cmd_xbar_mux_004 cmd_xbar_mux_016 (
		.clk                 (clk_0_clk_clk),                               //       clk.clk
		.reset               (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_016_src_ready),                  //       src.ready
		.src_valid           (cmd_xbar_mux_016_src_valid),                  //          .valid
		.src_data            (cmd_xbar_mux_016_src_data),                   //          .data
		.src_channel         (cmd_xbar_mux_016_src_channel),                //          .channel
		.src_startofpacket   (cmd_xbar_mux_016_src_startofpacket),          //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_016_src_endofpacket),            //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_002_src6_ready),               //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_002_src6_valid),               //          .valid
		.sink0_channel       (cmd_xbar_demux_002_src6_channel),             //          .channel
		.sink0_data          (cmd_xbar_demux_002_src6_data),                //          .data
		.sink0_startofpacket (cmd_xbar_demux_002_src6_startofpacket),       //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_002_src6_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_cmd_xbar_demux rsp_xbar_demux (
		.clk                (clk_0_clk_clk),                               //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_src_ready),                         //      sink.ready
		.sink_channel       (id_router_src_channel),                       //          .channel
		.sink_data          (id_router_src_data),                          //          .data
		.sink_startofpacket (id_router_src_startofpacket),                 //          .startofpacket
		.sink_endofpacket   (id_router_src_endofpacket),                   //          .endofpacket
		.sink_valid         (id_router_src_valid),                         //          .valid
		.src0_ready         (rsp_xbar_demux_src0_ready),                   //      src0.ready
		.src0_valid         (rsp_xbar_demux_src0_valid),                   //          .valid
		.src0_data          (rsp_xbar_demux_src0_data),                    //          .data
		.src0_channel       (rsp_xbar_demux_src0_channel),                 //          .channel
		.src0_startofpacket (rsp_xbar_demux_src0_startofpacket),           //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_src0_endofpacket),             //          .endofpacket
		.src1_ready         (rsp_xbar_demux_src1_ready),                   //      src1.ready
		.src1_valid         (rsp_xbar_demux_src1_valid),                   //          .valid
		.src1_data          (rsp_xbar_demux_src1_data),                    //          .data
		.src1_channel       (rsp_xbar_demux_src1_channel),                 //          .channel
		.src1_startofpacket (rsp_xbar_demux_src1_startofpacket),           //          .startofpacket
		.src1_endofpacket   (rsp_xbar_demux_src1_endofpacket)              //          .endofpacket
	);

	slave_mm_interconnect_0_cmd_xbar_demux rsp_xbar_demux_001 (
		.clk                (clk_0_clk_clk),                               //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_001_src_ready),                     //      sink.ready
		.sink_channel       (id_router_001_src_channel),                   //          .channel
		.sink_data          (id_router_001_src_data),                      //          .data
		.sink_startofpacket (id_router_001_src_startofpacket),             //          .startofpacket
		.sink_endofpacket   (id_router_001_src_endofpacket),               //          .endofpacket
		.sink_valid         (id_router_001_src_valid),                     //          .valid
		.src0_ready         (rsp_xbar_demux_001_src0_ready),               //      src0.ready
		.src0_valid         (rsp_xbar_demux_001_src0_valid),               //          .valid
		.src0_data          (rsp_xbar_demux_001_src0_data),                //          .data
		.src0_channel       (rsp_xbar_demux_001_src0_channel),             //          .channel
		.src0_startofpacket (rsp_xbar_demux_001_src0_startofpacket),       //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_001_src0_endofpacket),         //          .endofpacket
		.src1_ready         (rsp_xbar_demux_001_src1_ready),               //      src1.ready
		.src1_valid         (rsp_xbar_demux_001_src1_valid),               //          .valid
		.src1_data          (rsp_xbar_demux_001_src1_data),                //          .data
		.src1_channel       (rsp_xbar_demux_001_src1_channel),             //          .channel
		.src1_startofpacket (rsp_xbar_demux_001_src1_startofpacket),       //          .startofpacket
		.src1_endofpacket   (rsp_xbar_demux_001_src1_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_cmd_xbar_demux rsp_xbar_demux_002 (
		.clk                (clk_0_clk_clk),                               //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_002_src_ready),                     //      sink.ready
		.sink_channel       (id_router_002_src_channel),                   //          .channel
		.sink_data          (id_router_002_src_data),                      //          .data
		.sink_startofpacket (id_router_002_src_startofpacket),             //          .startofpacket
		.sink_endofpacket   (id_router_002_src_endofpacket),               //          .endofpacket
		.sink_valid         (id_router_002_src_valid),                     //          .valid
		.src0_ready         (rsp_xbar_demux_002_src0_ready),               //      src0.ready
		.src0_valid         (rsp_xbar_demux_002_src0_valid),               //          .valid
		.src0_data          (rsp_xbar_demux_002_src0_data),                //          .data
		.src0_channel       (rsp_xbar_demux_002_src0_channel),             //          .channel
		.src0_startofpacket (rsp_xbar_demux_002_src0_startofpacket),       //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_002_src0_endofpacket),         //          .endofpacket
		.src1_ready         (rsp_xbar_demux_002_src1_ready),               //      src1.ready
		.src1_valid         (rsp_xbar_demux_002_src1_valid),               //          .valid
		.src1_data          (rsp_xbar_demux_002_src1_data),                //          .data
		.src1_channel       (rsp_xbar_demux_002_src1_channel),             //          .channel
		.src1_startofpacket (rsp_xbar_demux_002_src1_startofpacket),       //          .startofpacket
		.src1_endofpacket   (rsp_xbar_demux_002_src1_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_cmd_xbar_demux rsp_xbar_demux_003 (
		.clk                (clk_0_clk_clk),                               //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_003_src_ready),                     //      sink.ready
		.sink_channel       (id_router_003_src_channel),                   //          .channel
		.sink_data          (id_router_003_src_data),                      //          .data
		.sink_startofpacket (id_router_003_src_startofpacket),             //          .startofpacket
		.sink_endofpacket   (id_router_003_src_endofpacket),               //          .endofpacket
		.sink_valid         (id_router_003_src_valid),                     //          .valid
		.src0_ready         (rsp_xbar_demux_003_src0_ready),               //      src0.ready
		.src0_valid         (rsp_xbar_demux_003_src0_valid),               //          .valid
		.src0_data          (rsp_xbar_demux_003_src0_data),                //          .data
		.src0_channel       (rsp_xbar_demux_003_src0_channel),             //          .channel
		.src0_startofpacket (rsp_xbar_demux_003_src0_startofpacket),       //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_003_src0_endofpacket),         //          .endofpacket
		.src1_ready         (rsp_xbar_demux_003_src1_ready),               //      src1.ready
		.src1_valid         (rsp_xbar_demux_003_src1_valid),               //          .valid
		.src1_data          (rsp_xbar_demux_003_src1_data),                //          .data
		.src1_channel       (rsp_xbar_demux_003_src1_channel),             //          .channel
		.src1_startofpacket (rsp_xbar_demux_003_src1_startofpacket),       //          .startofpacket
		.src1_endofpacket   (rsp_xbar_demux_003_src1_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_rsp_xbar_demux_004 rsp_xbar_demux_004 (
		.clk                (clk_0_clk_clk),                               //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_004_src_ready),                     //      sink.ready
		.sink_channel       (id_router_004_src_channel),                   //          .channel
		.sink_data          (id_router_004_src_data),                      //          .data
		.sink_startofpacket (id_router_004_src_startofpacket),             //          .startofpacket
		.sink_endofpacket   (id_router_004_src_endofpacket),               //          .endofpacket
		.sink_valid         (id_router_004_src_valid),                     //          .valid
		.src0_ready         (rsp_xbar_demux_004_src0_ready),               //      src0.ready
		.src0_valid         (rsp_xbar_demux_004_src0_valid),               //          .valid
		.src0_data          (rsp_xbar_demux_004_src0_data),                //          .data
		.src0_channel       (rsp_xbar_demux_004_src0_channel),             //          .channel
		.src0_startofpacket (rsp_xbar_demux_004_src0_startofpacket),       //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_004_src0_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_rsp_xbar_demux_004 rsp_xbar_demux_005 (
		.clk                (clk_0_clk_clk),                               //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_005_src_ready),                     //      sink.ready
		.sink_channel       (id_router_005_src_channel),                   //          .channel
		.sink_data          (id_router_005_src_data),                      //          .data
		.sink_startofpacket (id_router_005_src_startofpacket),             //          .startofpacket
		.sink_endofpacket   (id_router_005_src_endofpacket),               //          .endofpacket
		.sink_valid         (id_router_005_src_valid),                     //          .valid
		.src0_ready         (rsp_xbar_demux_005_src0_ready),               //      src0.ready
		.src0_valid         (rsp_xbar_demux_005_src0_valid),               //          .valid
		.src0_data          (rsp_xbar_demux_005_src0_data),                //          .data
		.src0_channel       (rsp_xbar_demux_005_src0_channel),             //          .channel
		.src0_startofpacket (rsp_xbar_demux_005_src0_startofpacket),       //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_005_src0_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_rsp_xbar_demux_004 rsp_xbar_demux_006 (
		.clk                (clk_0_clk_clk),                               //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_006_src_ready),                     //      sink.ready
		.sink_channel       (id_router_006_src_channel),                   //          .channel
		.sink_data          (id_router_006_src_data),                      //          .data
		.sink_startofpacket (id_router_006_src_startofpacket),             //          .startofpacket
		.sink_endofpacket   (id_router_006_src_endofpacket),               //          .endofpacket
		.sink_valid         (id_router_006_src_valid),                     //          .valid
		.src0_ready         (rsp_xbar_demux_006_src0_ready),               //      src0.ready
		.src0_valid         (rsp_xbar_demux_006_src0_valid),               //          .valid
		.src0_data          (rsp_xbar_demux_006_src0_data),                //          .data
		.src0_channel       (rsp_xbar_demux_006_src0_channel),             //          .channel
		.src0_startofpacket (rsp_xbar_demux_006_src0_startofpacket),       //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_006_src0_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_rsp_xbar_demux_004 rsp_xbar_demux_007 (
		.clk                (clk_0_clk_clk),                               //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_007_src_ready),                     //      sink.ready
		.sink_channel       (id_router_007_src_channel),                   //          .channel
		.sink_data          (id_router_007_src_data),                      //          .data
		.sink_startofpacket (id_router_007_src_startofpacket),             //          .startofpacket
		.sink_endofpacket   (id_router_007_src_endofpacket),               //          .endofpacket
		.sink_valid         (id_router_007_src_valid),                     //          .valid
		.src0_ready         (rsp_xbar_demux_007_src0_ready),               //      src0.ready
		.src0_valid         (rsp_xbar_demux_007_src0_valid),               //          .valid
		.src0_data          (rsp_xbar_demux_007_src0_data),                //          .data
		.src0_channel       (rsp_xbar_demux_007_src0_channel),             //          .channel
		.src0_startofpacket (rsp_xbar_demux_007_src0_startofpacket),       //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_007_src0_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_rsp_xbar_demux_004 rsp_xbar_demux_008 (
		.clk                (clk_0_clk_clk),                               //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_008_src_ready),                     //      sink.ready
		.sink_channel       (id_router_008_src_channel),                   //          .channel
		.sink_data          (id_router_008_src_data),                      //          .data
		.sink_startofpacket (id_router_008_src_startofpacket),             //          .startofpacket
		.sink_endofpacket   (id_router_008_src_endofpacket),               //          .endofpacket
		.sink_valid         (id_router_008_src_valid),                     //          .valid
		.src0_ready         (rsp_xbar_demux_008_src0_ready),               //      src0.ready
		.src0_valid         (rsp_xbar_demux_008_src0_valid),               //          .valid
		.src0_data          (rsp_xbar_demux_008_src0_data),                //          .data
		.src0_channel       (rsp_xbar_demux_008_src0_channel),             //          .channel
		.src0_startofpacket (rsp_xbar_demux_008_src0_startofpacket),       //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_008_src0_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_rsp_xbar_demux_004 rsp_xbar_demux_009 (
		.clk                (clk_0_clk_clk),                               //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_009_src_ready),                     //      sink.ready
		.sink_channel       (id_router_009_src_channel),                   //          .channel
		.sink_data          (id_router_009_src_data),                      //          .data
		.sink_startofpacket (id_router_009_src_startofpacket),             //          .startofpacket
		.sink_endofpacket   (id_router_009_src_endofpacket),               //          .endofpacket
		.sink_valid         (id_router_009_src_valid),                     //          .valid
		.src0_ready         (rsp_xbar_demux_009_src0_ready),               //      src0.ready
		.src0_valid         (rsp_xbar_demux_009_src0_valid),               //          .valid
		.src0_data          (rsp_xbar_demux_009_src0_data),                //          .data
		.src0_channel       (rsp_xbar_demux_009_src0_channel),             //          .channel
		.src0_startofpacket (rsp_xbar_demux_009_src0_startofpacket),       //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_009_src0_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_rsp_xbar_demux_004 rsp_xbar_demux_010 (
		.clk                (clk_0_clk_clk),                               //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_010_src_ready),                     //      sink.ready
		.sink_channel       (id_router_010_src_channel),                   //          .channel
		.sink_data          (id_router_010_src_data),                      //          .data
		.sink_startofpacket (id_router_010_src_startofpacket),             //          .startofpacket
		.sink_endofpacket   (id_router_010_src_endofpacket),               //          .endofpacket
		.sink_valid         (id_router_010_src_valid),                     //          .valid
		.src0_ready         (rsp_xbar_demux_010_src0_ready),               //      src0.ready
		.src0_valid         (rsp_xbar_demux_010_src0_valid),               //          .valid
		.src0_data          (rsp_xbar_demux_010_src0_data),                //          .data
		.src0_channel       (rsp_xbar_demux_010_src0_channel),             //          .channel
		.src0_startofpacket (rsp_xbar_demux_010_src0_startofpacket),       //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_010_src0_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_rsp_xbar_demux_004 rsp_xbar_demux_011 (
		.clk                (clk_0_clk_clk),                               //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_011_src_ready),                     //      sink.ready
		.sink_channel       (id_router_011_src_channel),                   //          .channel
		.sink_data          (id_router_011_src_data),                      //          .data
		.sink_startofpacket (id_router_011_src_startofpacket),             //          .startofpacket
		.sink_endofpacket   (id_router_011_src_endofpacket),               //          .endofpacket
		.sink_valid         (id_router_011_src_valid),                     //          .valid
		.src0_ready         (rsp_xbar_demux_011_src0_ready),               //      src0.ready
		.src0_valid         (rsp_xbar_demux_011_src0_valid),               //          .valid
		.src0_data          (rsp_xbar_demux_011_src0_data),                //          .data
		.src0_channel       (rsp_xbar_demux_011_src0_channel),             //          .channel
		.src0_startofpacket (rsp_xbar_demux_011_src0_startofpacket),       //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_011_src0_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_cmd_xbar_demux rsp_xbar_demux_012 (
		.clk                (clk_0_clk_clk),                               //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_012_src_ready),                     //      sink.ready
		.sink_channel       (id_router_012_src_channel),                   //          .channel
		.sink_data          (id_router_012_src_data),                      //          .data
		.sink_startofpacket (id_router_012_src_startofpacket),             //          .startofpacket
		.sink_endofpacket   (id_router_012_src_endofpacket),               //          .endofpacket
		.sink_valid         (id_router_012_src_valid),                     //          .valid
		.src0_ready         (rsp_xbar_demux_012_src0_ready),               //      src0.ready
		.src0_valid         (rsp_xbar_demux_012_src0_valid),               //          .valid
		.src0_data          (rsp_xbar_demux_012_src0_data),                //          .data
		.src0_channel       (rsp_xbar_demux_012_src0_channel),             //          .channel
		.src0_startofpacket (rsp_xbar_demux_012_src0_startofpacket),       //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_012_src0_endofpacket),         //          .endofpacket
		.src1_ready         (rsp_xbar_demux_012_src1_ready),               //      src1.ready
		.src1_valid         (rsp_xbar_demux_012_src1_valid),               //          .valid
		.src1_data          (rsp_xbar_demux_012_src1_data),                //          .data
		.src1_channel       (rsp_xbar_demux_012_src1_channel),             //          .channel
		.src1_startofpacket (rsp_xbar_demux_012_src1_startofpacket),       //          .startofpacket
		.src1_endofpacket   (rsp_xbar_demux_012_src1_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_rsp_xbar_demux_004 rsp_xbar_demux_013 (
		.clk                (clk_0_clk_clk),                               //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_013_src_ready),                     //      sink.ready
		.sink_channel       (id_router_013_src_channel),                   //          .channel
		.sink_data          (id_router_013_src_data),                      //          .data
		.sink_startofpacket (id_router_013_src_startofpacket),             //          .startofpacket
		.sink_endofpacket   (id_router_013_src_endofpacket),               //          .endofpacket
		.sink_valid         (id_router_013_src_valid),                     //          .valid
		.src0_ready         (rsp_xbar_demux_013_src0_ready),               //      src0.ready
		.src0_valid         (rsp_xbar_demux_013_src0_valid),               //          .valid
		.src0_data          (rsp_xbar_demux_013_src0_data),                //          .data
		.src0_channel       (rsp_xbar_demux_013_src0_channel),             //          .channel
		.src0_startofpacket (rsp_xbar_demux_013_src0_startofpacket),       //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_013_src0_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_rsp_xbar_demux_004 rsp_xbar_demux_014 (
		.clk                (clk_0_clk_clk),                               //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_014_src_ready),                     //      sink.ready
		.sink_channel       (id_router_014_src_channel),                   //          .channel
		.sink_data          (id_router_014_src_data),                      //          .data
		.sink_startofpacket (id_router_014_src_startofpacket),             //          .startofpacket
		.sink_endofpacket   (id_router_014_src_endofpacket),               //          .endofpacket
		.sink_valid         (id_router_014_src_valid),                     //          .valid
		.src0_ready         (rsp_xbar_demux_014_src0_ready),               //      src0.ready
		.src0_valid         (rsp_xbar_demux_014_src0_valid),               //          .valid
		.src0_data          (rsp_xbar_demux_014_src0_data),                //          .data
		.src0_channel       (rsp_xbar_demux_014_src0_channel),             //          .channel
		.src0_startofpacket (rsp_xbar_demux_014_src0_startofpacket),       //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_014_src0_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_cmd_xbar_demux rsp_xbar_demux_015 (
		.clk                (clk_0_clk_clk),                               //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_015_src_ready),                     //      sink.ready
		.sink_channel       (id_router_015_src_channel),                   //          .channel
		.sink_data          (id_router_015_src_data),                      //          .data
		.sink_startofpacket (id_router_015_src_startofpacket),             //          .startofpacket
		.sink_endofpacket   (id_router_015_src_endofpacket),               //          .endofpacket
		.sink_valid         (id_router_015_src_valid),                     //          .valid
		.src0_ready         (rsp_xbar_demux_015_src0_ready),               //      src0.ready
		.src0_valid         (rsp_xbar_demux_015_src0_valid),               //          .valid
		.src0_data          (rsp_xbar_demux_015_src0_data),                //          .data
		.src0_channel       (rsp_xbar_demux_015_src0_channel),             //          .channel
		.src0_startofpacket (rsp_xbar_demux_015_src0_startofpacket),       //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_015_src0_endofpacket),         //          .endofpacket
		.src1_ready         (rsp_xbar_demux_015_src1_ready),               //      src1.ready
		.src1_valid         (rsp_xbar_demux_015_src1_valid),               //          .valid
		.src1_data          (rsp_xbar_demux_015_src1_data),                //          .data
		.src1_channel       (rsp_xbar_demux_015_src1_channel),             //          .channel
		.src1_startofpacket (rsp_xbar_demux_015_src1_startofpacket),       //          .startofpacket
		.src1_endofpacket   (rsp_xbar_demux_015_src1_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_rsp_xbar_demux_004 rsp_xbar_demux_016 (
		.clk                (clk_0_clk_clk),                               //       clk.clk
		.reset              (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_016_src_ready),                     //      sink.ready
		.sink_channel       (id_router_016_src_channel),                   //          .channel
		.sink_data          (id_router_016_src_data),                      //          .data
		.sink_startofpacket (id_router_016_src_startofpacket),             //          .startofpacket
		.sink_endofpacket   (id_router_016_src_endofpacket),               //          .endofpacket
		.sink_valid         (id_router_016_src_valid),                     //          .valid
		.src0_ready         (rsp_xbar_demux_016_src0_ready),               //      src0.ready
		.src0_valid         (rsp_xbar_demux_016_src0_valid),               //          .valid
		.src0_data          (rsp_xbar_demux_016_src0_data),                //          .data
		.src0_channel       (rsp_xbar_demux_016_src0_channel),             //          .channel
		.src0_startofpacket (rsp_xbar_demux_016_src0_startofpacket),       //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_016_src0_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_rsp_xbar_mux rsp_xbar_mux (
		.clk                 (clk_0_clk_clk),                               //       clk.clk
		.reset               (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_xbar_mux_src_ready),                      //       src.ready
		.src_valid           (rsp_xbar_mux_src_valid),                      //          .valid
		.src_data            (rsp_xbar_mux_src_data),                       //          .data
		.src_channel         (rsp_xbar_mux_src_channel),                    //          .channel
		.src_startofpacket   (rsp_xbar_mux_src_startofpacket),              //          .startofpacket
		.src_endofpacket     (rsp_xbar_mux_src_endofpacket),                //          .endofpacket
		.sink0_ready         (rsp_xbar_demux_src0_ready),                   //     sink0.ready
		.sink0_valid         (rsp_xbar_demux_src0_valid),                   //          .valid
		.sink0_channel       (rsp_xbar_demux_src0_channel),                 //          .channel
		.sink0_data          (rsp_xbar_demux_src0_data),                    //          .data
		.sink0_startofpacket (rsp_xbar_demux_src0_startofpacket),           //          .startofpacket
		.sink0_endofpacket   (rsp_xbar_demux_src0_endofpacket),             //          .endofpacket
		.sink1_ready         (rsp_xbar_demux_001_src0_ready),               //     sink1.ready
		.sink1_valid         (rsp_xbar_demux_001_src0_valid),               //          .valid
		.sink1_channel       (rsp_xbar_demux_001_src0_channel),             //          .channel
		.sink1_data          (rsp_xbar_demux_001_src0_data),                //          .data
		.sink1_startofpacket (rsp_xbar_demux_001_src0_startofpacket),       //          .startofpacket
		.sink1_endofpacket   (rsp_xbar_demux_001_src0_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_rsp_xbar_mux_001 rsp_xbar_mux_001 (
		.clk                  (clk_0_clk_clk),                               //       clk.clk
		.reset                (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready            (rsp_xbar_mux_001_src_ready),                  //       src.ready
		.src_valid            (rsp_xbar_mux_001_src_valid),                  //          .valid
		.src_data             (rsp_xbar_mux_001_src_data),                   //          .data
		.src_channel          (rsp_xbar_mux_001_src_channel),                //          .channel
		.src_startofpacket    (rsp_xbar_mux_001_src_startofpacket),          //          .startofpacket
		.src_endofpacket      (rsp_xbar_mux_001_src_endofpacket),            //          .endofpacket
		.sink0_ready          (rsp_xbar_demux_src1_ready),                   //     sink0.ready
		.sink0_valid          (rsp_xbar_demux_src1_valid),                   //          .valid
		.sink0_channel        (rsp_xbar_demux_src1_channel),                 //          .channel
		.sink0_data           (rsp_xbar_demux_src1_data),                    //          .data
		.sink0_startofpacket  (rsp_xbar_demux_src1_startofpacket),           //          .startofpacket
		.sink0_endofpacket    (rsp_xbar_demux_src1_endofpacket),             //          .endofpacket
		.sink1_ready          (rsp_xbar_demux_001_src1_ready),               //     sink1.ready
		.sink1_valid          (rsp_xbar_demux_001_src1_valid),               //          .valid
		.sink1_channel        (rsp_xbar_demux_001_src1_channel),             //          .channel
		.sink1_data           (rsp_xbar_demux_001_src1_data),                //          .data
		.sink1_startofpacket  (rsp_xbar_demux_001_src1_startofpacket),       //          .startofpacket
		.sink1_endofpacket    (rsp_xbar_demux_001_src1_endofpacket),         //          .endofpacket
		.sink2_ready          (rsp_xbar_demux_002_src0_ready),               //     sink2.ready
		.sink2_valid          (rsp_xbar_demux_002_src0_valid),               //          .valid
		.sink2_channel        (rsp_xbar_demux_002_src0_channel),             //          .channel
		.sink2_data           (rsp_xbar_demux_002_src0_data),                //          .data
		.sink2_startofpacket  (rsp_xbar_demux_002_src0_startofpacket),       //          .startofpacket
		.sink2_endofpacket    (rsp_xbar_demux_002_src0_endofpacket),         //          .endofpacket
		.sink3_ready          (rsp_xbar_demux_003_src0_ready),               //     sink3.ready
		.sink3_valid          (rsp_xbar_demux_003_src0_valid),               //          .valid
		.sink3_channel        (rsp_xbar_demux_003_src0_channel),             //          .channel
		.sink3_data           (rsp_xbar_demux_003_src0_data),                //          .data
		.sink3_startofpacket  (rsp_xbar_demux_003_src0_startofpacket),       //          .startofpacket
		.sink3_endofpacket    (rsp_xbar_demux_003_src0_endofpacket),         //          .endofpacket
		.sink4_ready          (rsp_xbar_demux_004_src0_ready),               //     sink4.ready
		.sink4_valid          (rsp_xbar_demux_004_src0_valid),               //          .valid
		.sink4_channel        (rsp_xbar_demux_004_src0_channel),             //          .channel
		.sink4_data           (rsp_xbar_demux_004_src0_data),                //          .data
		.sink4_startofpacket  (rsp_xbar_demux_004_src0_startofpacket),       //          .startofpacket
		.sink4_endofpacket    (rsp_xbar_demux_004_src0_endofpacket),         //          .endofpacket
		.sink5_ready          (rsp_xbar_demux_005_src0_ready),               //     sink5.ready
		.sink5_valid          (rsp_xbar_demux_005_src0_valid),               //          .valid
		.sink5_channel        (rsp_xbar_demux_005_src0_channel),             //          .channel
		.sink5_data           (rsp_xbar_demux_005_src0_data),                //          .data
		.sink5_startofpacket  (rsp_xbar_demux_005_src0_startofpacket),       //          .startofpacket
		.sink5_endofpacket    (rsp_xbar_demux_005_src0_endofpacket),         //          .endofpacket
		.sink6_ready          (rsp_xbar_demux_006_src0_ready),               //     sink6.ready
		.sink6_valid          (rsp_xbar_demux_006_src0_valid),               //          .valid
		.sink6_channel        (rsp_xbar_demux_006_src0_channel),             //          .channel
		.sink6_data           (rsp_xbar_demux_006_src0_data),                //          .data
		.sink6_startofpacket  (rsp_xbar_demux_006_src0_startofpacket),       //          .startofpacket
		.sink6_endofpacket    (rsp_xbar_demux_006_src0_endofpacket),         //          .endofpacket
		.sink7_ready          (rsp_xbar_demux_007_src0_ready),               //     sink7.ready
		.sink7_valid          (rsp_xbar_demux_007_src0_valid),               //          .valid
		.sink7_channel        (rsp_xbar_demux_007_src0_channel),             //          .channel
		.sink7_data           (rsp_xbar_demux_007_src0_data),                //          .data
		.sink7_startofpacket  (rsp_xbar_demux_007_src0_startofpacket),       //          .startofpacket
		.sink7_endofpacket    (rsp_xbar_demux_007_src0_endofpacket),         //          .endofpacket
		.sink8_ready          (rsp_xbar_demux_008_src0_ready),               //     sink8.ready
		.sink8_valid          (rsp_xbar_demux_008_src0_valid),               //          .valid
		.sink8_channel        (rsp_xbar_demux_008_src0_channel),             //          .channel
		.sink8_data           (rsp_xbar_demux_008_src0_data),                //          .data
		.sink8_startofpacket  (rsp_xbar_demux_008_src0_startofpacket),       //          .startofpacket
		.sink8_endofpacket    (rsp_xbar_demux_008_src0_endofpacket),         //          .endofpacket
		.sink9_ready          (rsp_xbar_demux_009_src0_ready),               //     sink9.ready
		.sink9_valid          (rsp_xbar_demux_009_src0_valid),               //          .valid
		.sink9_channel        (rsp_xbar_demux_009_src0_channel),             //          .channel
		.sink9_data           (rsp_xbar_demux_009_src0_data),                //          .data
		.sink9_startofpacket  (rsp_xbar_demux_009_src0_startofpacket),       //          .startofpacket
		.sink9_endofpacket    (rsp_xbar_demux_009_src0_endofpacket),         //          .endofpacket
		.sink10_ready         (rsp_xbar_demux_010_src0_ready),               //    sink10.ready
		.sink10_valid         (rsp_xbar_demux_010_src0_valid),               //          .valid
		.sink10_channel       (rsp_xbar_demux_010_src0_channel),             //          .channel
		.sink10_data          (rsp_xbar_demux_010_src0_data),                //          .data
		.sink10_startofpacket (rsp_xbar_demux_010_src0_startofpacket),       //          .startofpacket
		.sink10_endofpacket   (rsp_xbar_demux_010_src0_endofpacket),         //          .endofpacket
		.sink11_ready         (rsp_xbar_demux_011_src0_ready),               //    sink11.ready
		.sink11_valid         (rsp_xbar_demux_011_src0_valid),               //          .valid
		.sink11_channel       (rsp_xbar_demux_011_src0_channel),             //          .channel
		.sink11_data          (rsp_xbar_demux_011_src0_data),                //          .data
		.sink11_startofpacket (rsp_xbar_demux_011_src0_startofpacket),       //          .startofpacket
		.sink11_endofpacket   (rsp_xbar_demux_011_src0_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_rsp_xbar_mux_002 rsp_xbar_mux_002 (
		.clk                 (clk_0_clk_clk),                               //       clk.clk
		.reset               (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_xbar_mux_002_src_ready),                  //       src.ready
		.src_valid           (rsp_xbar_mux_002_src_valid),                  //          .valid
		.src_data            (rsp_xbar_mux_002_src_data),                   //          .data
		.src_channel         (rsp_xbar_mux_002_src_channel),                //          .channel
		.src_startofpacket   (rsp_xbar_mux_002_src_startofpacket),          //          .startofpacket
		.src_endofpacket     (rsp_xbar_mux_002_src_endofpacket),            //          .endofpacket
		.sink0_ready         (rsp_xbar_demux_002_src1_ready),               //     sink0.ready
		.sink0_valid         (rsp_xbar_demux_002_src1_valid),               //          .valid
		.sink0_channel       (rsp_xbar_demux_002_src1_channel),             //          .channel
		.sink0_data          (rsp_xbar_demux_002_src1_data),                //          .data
		.sink0_startofpacket (rsp_xbar_demux_002_src1_startofpacket),       //          .startofpacket
		.sink0_endofpacket   (rsp_xbar_demux_002_src1_endofpacket),         //          .endofpacket
		.sink1_ready         (rsp_xbar_demux_003_src1_ready),               //     sink1.ready
		.sink1_valid         (rsp_xbar_demux_003_src1_valid),               //          .valid
		.sink1_channel       (rsp_xbar_demux_003_src1_channel),             //          .channel
		.sink1_data          (rsp_xbar_demux_003_src1_data),                //          .data
		.sink1_startofpacket (rsp_xbar_demux_003_src1_startofpacket),       //          .startofpacket
		.sink1_endofpacket   (rsp_xbar_demux_003_src1_endofpacket),         //          .endofpacket
		.sink2_ready         (rsp_xbar_demux_012_src0_ready),               //     sink2.ready
		.sink2_valid         (rsp_xbar_demux_012_src0_valid),               //          .valid
		.sink2_channel       (rsp_xbar_demux_012_src0_channel),             //          .channel
		.sink2_data          (rsp_xbar_demux_012_src0_data),                //          .data
		.sink2_startofpacket (rsp_xbar_demux_012_src0_startofpacket),       //          .startofpacket
		.sink2_endofpacket   (rsp_xbar_demux_012_src0_endofpacket),         //          .endofpacket
		.sink3_ready         (rsp_xbar_demux_013_src0_ready),               //     sink3.ready
		.sink3_valid         (rsp_xbar_demux_013_src0_valid),               //          .valid
		.sink3_channel       (rsp_xbar_demux_013_src0_channel),             //          .channel
		.sink3_data          (rsp_xbar_demux_013_src0_data),                //          .data
		.sink3_startofpacket (rsp_xbar_demux_013_src0_startofpacket),       //          .startofpacket
		.sink3_endofpacket   (rsp_xbar_demux_013_src0_endofpacket),         //          .endofpacket
		.sink4_ready         (rsp_xbar_demux_014_src0_ready),               //     sink4.ready
		.sink4_valid         (rsp_xbar_demux_014_src0_valid),               //          .valid
		.sink4_channel       (rsp_xbar_demux_014_src0_channel),             //          .channel
		.sink4_data          (rsp_xbar_demux_014_src0_data),                //          .data
		.sink4_startofpacket (rsp_xbar_demux_014_src0_startofpacket),       //          .startofpacket
		.sink4_endofpacket   (rsp_xbar_demux_014_src0_endofpacket),         //          .endofpacket
		.sink5_ready         (rsp_xbar_demux_015_src0_ready),               //     sink5.ready
		.sink5_valid         (rsp_xbar_demux_015_src0_valid),               //          .valid
		.sink5_channel       (rsp_xbar_demux_015_src0_channel),             //          .channel
		.sink5_data          (rsp_xbar_demux_015_src0_data),                //          .data
		.sink5_startofpacket (rsp_xbar_demux_015_src0_startofpacket),       //          .startofpacket
		.sink5_endofpacket   (rsp_xbar_demux_015_src0_endofpacket),         //          .endofpacket
		.sink6_ready         (rsp_xbar_demux_016_src0_ready),               //     sink6.ready
		.sink6_valid         (rsp_xbar_demux_016_src0_valid),               //          .valid
		.sink6_channel       (rsp_xbar_demux_016_src0_channel),             //          .channel
		.sink6_data          (rsp_xbar_demux_016_src0_data),                //          .data
		.sink6_startofpacket (rsp_xbar_demux_016_src0_startofpacket),       //          .startofpacket
		.sink6_endofpacket   (rsp_xbar_demux_016_src0_endofpacket)          //          .endofpacket
	);

	slave_mm_interconnect_0_rsp_xbar_mux rsp_xbar_mux_003 (
		.clk                 (clk_0_clk_clk),                               //       clk.clk
		.reset               (ET_Core_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_xbar_mux_003_src_ready),                  //       src.ready
		.src_valid           (rsp_xbar_mux_003_src_valid),                  //          .valid
		.src_data            (rsp_xbar_mux_003_src_data),                   //          .data
		.src_channel         (rsp_xbar_mux_003_src_channel),                //          .channel
		.src_startofpacket   (rsp_xbar_mux_003_src_startofpacket),          //          .startofpacket
		.src_endofpacket     (rsp_xbar_mux_003_src_endofpacket),            //          .endofpacket
		.sink0_ready         (rsp_xbar_demux_012_src1_ready),               //     sink0.ready
		.sink0_valid         (rsp_xbar_demux_012_src1_valid),               //          .valid
		.sink0_channel       (rsp_xbar_demux_012_src1_channel),             //          .channel
		.sink0_data          (rsp_xbar_demux_012_src1_data),                //          .data
		.sink0_startofpacket (rsp_xbar_demux_012_src1_startofpacket),       //          .startofpacket
		.sink0_endofpacket   (rsp_xbar_demux_012_src1_endofpacket),         //          .endofpacket
		.sink1_ready         (rsp_xbar_demux_015_src1_ready),               //     sink1.ready
		.sink1_valid         (rsp_xbar_demux_015_src1_valid),               //          .valid
		.sink1_channel       (rsp_xbar_demux_015_src1_channel),             //          .channel
		.sink1_data          (rsp_xbar_demux_015_src1_data),                //          .data
		.sink1_startofpacket (rsp_xbar_demux_015_src1_startofpacket),       //          .startofpacket
		.sink1_endofpacket   (rsp_xbar_demux_015_src1_endofpacket)          //          .endofpacket
	);

endmodule
